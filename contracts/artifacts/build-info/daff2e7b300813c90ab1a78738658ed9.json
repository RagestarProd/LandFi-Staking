{
	"id": "daff2e7b300813c90ab1a78738658ed9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LandFIStake2.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract LandFiStaking is Ownable(msg.sender) {\r\n    using Address for address;\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 public immutable landFiToken;\r\n\r\n    mapping (address => uint256) public box1Balance;\r\n    mapping (address => uint256) public box1DepositDate;\r\n    uint256 public box1Rate;\r\n    uint256 public box1Time;\r\n    bool public box1Enabled;\r\n\r\n    mapping (address => uint256) public box2Balance;\r\n    mapping (address => uint256) public box2DepositDate;\r\n    uint256 public box2Rate;\r\n    uint256 public box2Time;\r\n    bool public box2Enabled;\r\n\r\n    mapping (address => uint256) public box3Balance;\r\n    mapping (address => uint256) public box3DepositDate;\r\n    uint256 public box3Rate;\r\n    uint256 public box3Time;\r\n    bool public box3Enabled;\r\n\r\n    mapping (address => uint256) public box4Balance;\r\n    mapping (address => uint256) public box4DepositDate;\r\n    uint256 public box4Rate;\r\n    uint256 public box4Time;\r\n    bool public box4Enabled;\r\n\r\n    address private constant burnAddress = 0x000000000000000000000000000000000000dEaD;\r\n\r\n    uint256 public maxStake;\r\n    uint256 public minStake;\r\n    uint256 public rewardCountDue;\r\n    uint256 public rewardCount;\r\n    uint256 public totalStaked;\r\n    uint256 public maxRewardDue;\r\n\r\n    bool public fullUnlock;\r\n\r\n    constructor(address _tokenAddress) {\r\n        require(_tokenAddress != address(0), \"Token address cannot be zero\");\r\n        landFiToken = IERC20(_tokenAddress);\r\n\r\n        rewardCountDue = 0;\r\n        rewardCount = 0;\r\n        totalStaked = 0;\r\n        maxStake = 400_000 ether;\r\n        maxRewardDue = 500_000 ether;\r\n        minStake = 0.01 ether;\r\n        fullUnlock = false;\r\n\r\n        box1Rate = 333;\r\n        box1Time = 7 days;\r\n        box1Enabled = true;\r\n\r\n        box2Rate = 83;\r\n        box2Time = 14 days;\r\n        box2Enabled = true;\r\n\r\n        box3Rate = 32;\r\n        box3Time = 28 days;\r\n        box3Enabled = true;\r\n\r\n        box4Rate = 26;\r\n        box4Time = 28 days;\r\n        box4Enabled = true;\r\n    }\r\n\r\n    // Admin setters\r\n    function changeBox1Status(bool status) external onlyOwner { box1Enabled = status; }\r\n    function changeBox2Status(bool status) external onlyOwner { box2Enabled = status; }\r\n    function changeBox3Status(bool status) external onlyOwner { box3Enabled = status; }\r\n    function changeBox4Status(bool status) external onlyOwner { box4Enabled = status; }\r\n    function changeMaxRewardDue(uint256 amount) external onlyOwner { maxRewardDue = amount; }\r\n    function changeMaxStake(uint256 amount) external onlyOwner { maxStake = amount; }\r\n    function changeMinStake(uint256 amount) external onlyOwner { minStake = amount; }\r\n    function changeFullUnlock(bool unlock) external onlyOwner { fullUnlock = unlock; }\r\n\r\n    function balanceOf(address user) external view returns (uint256) {\r\n        return box1Balance[user] + box2Balance[user] + box3Balance[user] + box4Balance[user];\r\n    }\r\n\r\n    function stakeUnlockTime(address user, uint256 boxNo) public view returns (uint256) {\r\n        if (boxNo == 1) return box1DepositDate[user] + box1Time;\r\n        if (boxNo == 2) return box2DepositDate[user] + box2Time;\r\n        if (boxNo == 3) return box3DepositDate[user] + box3Time;\r\n        if (boxNo == 4) return box4DepositDate[user] + box4Time;\r\n        return 0;\r\n    }\r\n\r\n    function stakeAmount(address user, uint256 boxNo) public view returns (uint256) {\r\n        if (boxNo == 1) return box1Balance[user];\r\n        if (boxNo == 2) return box2Balance[user];\r\n        if (boxNo == 3) return box3Balance[user];\r\n        if (boxNo == 4) return box4Balance[user];\r\n        return 0;\r\n    }\r\n\r\n    function addStake(uint256 amount, uint256 boxNo) external {\r\n        require(boxNo >= 1 && boxNo <= 4, \"Invalid box\");\r\n        require(amount >= minStake && amount <= maxStake, \"Invalid amount\");\r\n        require(!fullUnlock, \"Unlock mode active\");\r\n        require(maxRewardDue >= rewardCount, \"Staking ended\");\r\n\r\n        address user = msg.sender;\r\n        uint256 rewardAmount;\r\n\r\n        if (boxNo == 1) {\r\n            require(box1Enabled && box1Balance[user] == 0, \"Box 1 disabled or already staked\");\r\n            rewardAmount = amount / box1Rate;\r\n            box1Balance[user] = amount;\r\n            box1DepositDate[user] = block.timestamp;\r\n        } else if (boxNo == 2) {\r\n            require(box2Enabled && box2Balance[user] == 0, \"Box 2 disabled or already staked\");\r\n            rewardAmount = amount / box2Rate;\r\n            box2Balance[user] = amount;\r\n            box2DepositDate[user] = block.timestamp;\r\n        } else if (boxNo == 3) {\r\n            require(box3Enabled && box3Balance[user] == 0, \"Box 3 disabled or already staked\");\r\n            rewardAmount = amount / box3Rate;\r\n            box3Balance[user] = amount;\r\n            box3DepositDate[user] = block.timestamp;\r\n        } else if (boxNo == 4) {\r\n            require(box4Enabled && box4Balance[user] == 0, \"Box 4 disabled or already staked\");\r\n            rewardAmount = amount / box4Rate;\r\n            box4Balance[user] = amount;\r\n            box4DepositDate[user] = block.timestamp;\r\n        }\r\n\r\n        rewardCountDue += rewardAmount;\r\n        totalStaked += amount;\r\n\r\n        landFiToken.safeTransferFrom(user, address(this), amount);\r\n    }\r\n\r\n    function pullStake(uint256 boxNo) external {\r\n        require(boxNo >= 1 && boxNo <= 4, \"Invalid box\");\r\n\r\n        address user = msg.sender;\r\n        uint256 rewardAmount;\r\n        uint256 amount;\r\n\r\n        if (boxNo == 1) {\r\n            amount = box1Balance[user];\r\n            require(amount > 0, \"No stake\");\r\n            require(fullUnlock || block.timestamp >= box1DepositDate[user] + box1Time, \"Not unlocked\");\r\n            rewardAmount = amount / box1Rate;\r\n            box1Balance[user] = 0;\r\n            box1DepositDate[user] = 0;\r\n        } else if (boxNo == 2) {\r\n            amount = box2Balance[user];\r\n            require(amount > 0, \"No stake\");\r\n            require(fullUnlock || block.timestamp >= box2DepositDate[user] + box2Time, \"Not unlocked\");\r\n            rewardAmount = amount / box2Rate;\r\n            box2Balance[user] = 0;\r\n            box2DepositDate[user] = 0;\r\n        } else if (boxNo == 3) {\r\n            amount = box3Balance[user];\r\n            require(amount > 0, \"No stake\");\r\n            require(fullUnlock || block.timestamp >= box3DepositDate[user] + box3Time, \"Not unlocked\");\r\n            rewardAmount = amount / box3Rate;\r\n            box3Balance[user] = 0;\r\n            box3DepositDate[user] = 0;\r\n        } else if (boxNo == 4) {\r\n            amount = box4Balance[user];\r\n            require(amount > 0, \"No stake\");\r\n            require(fullUnlock || block.timestamp >= box4DepositDate[user] + box4Time, \"Not unlocked\");\r\n            rewardAmount = amount / box4Rate;\r\n            box4Balance[user] = 0;\r\n            box4DepositDate[user] = 0;\r\n        }\r\n\r\n        totalStaked -= amount;\r\n        if (!fullUnlock) rewardCount = rewardCount + rewardAmount;\r\n        if (!fullUnlock) rewardCountDue = rewardCountDue - rewardAmount;\r\n\r\n        landFiToken.safeTransfer(user, amount);\r\n\r\n        if (!fullUnlock) {\r\n            if (boxNo == 4) {\r\n                landFiToken.safeTransfer(burnAddress, rewardAmount);\r\n            } else {\r\n                landFiToken.safeTransfer(user, rewardAmount);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/LandFIStake2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBD CALLVALUE JUMPDEST SWAP5 0xEF CODESIZE GASLIMIT 0xEF 0x4E 0xD9 CALLVALUE GASLIMIT 0xC8 0xD5 CALL 0x4E POP LT 0xD9 0xC7 PREVRANDAO 0xBB 0x2E 0xC9 DUP5 PUSH17 0x9404477D664736F6C634300081E003300 ",
							"sourceMap": "233:5815:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBD CALLVALUE JUMPDEST SWAP5 0xEF CODESIZE GASLIMIT 0xEF 0x4E 0xD9 CALLVALUE GASLIMIT 0xC8 0xD5 CALL 0x4E POP LT 0xD9 0xC7 PREVRANDAO 0xBB 0x2E 0xC9 DUP5 PUSH17 0x9404477D664736F6C634300081E003300 ",
							"sourceMap": "233:5815:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/LandFIStake2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/LandFIStake2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212208d869562b1c597c7bba91d4d8bf31e75790d173f7a9d3e9fe279cd95fa10815264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212208d869562b1c597c7bba91d4d8bf31e75790d173f7a9d3e9fe279cd95fa10815264736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 DUP7 SWAP6 PUSH3 0xB1C597 0xC7 0xBB 0xA9 SAR 0x4D DUP12 RETURN 0x1E PUSH22 0x790D173F7A9D3E9FE279CD95FA10815264736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "482:6210:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212208d869562b1c597c7bba91d4d8bf31e75790d173f7a9d3e9fe279cd95fa10815264736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 DUP7 SWAP6 PUSH3 0xB1C597 0xC7 0xBB 0xA9 SAR 0x4D DUP12 RETURN 0x1E PUSH22 0x790D173F7A9D3E9FE279CD95FA10815264736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "482:6210:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208d869562b1c597c7bba91d4d8bf31e75790d173f7a9d3e9fe279cd95fa10815264736f6c634300081e0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/LandFIStake2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LandFIStake2.sol": {
				"LandFiStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "boxNo",
									"type": "uint256"
								}
							],
							"name": "addStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box1Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box1DepositDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box1Enabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box1Rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box1Time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box2Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box2DepositDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box2Enabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box2Rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box2Time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box3Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box3DepositDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box3Enabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box3Rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box3Time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box4Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box4DepositDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box4Enabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box4Rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box4Time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "changeBox1Status",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "changeBox2Status",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "changeBox3Status",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "changeBox4Status",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "unlock",
									"type": "bool"
								}
							],
							"name": "changeFullUnlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeMaxRewardDue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeMaxStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeMinStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fullUnlock",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "landFiToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxRewardDue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "boxNo",
									"type": "uint256"
								}
							],
							"name": "pullStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardCountDue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "boxNo",
									"type": "uint256"
								}
							],
							"name": "stakeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "boxNo",
									"type": "uint256"
								}
							],
							"name": "stakeUnlockTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LandFIStake2.sol\":362:7757  contract LandFiStaking is Ownable(msg.sender) {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/LandFIStake2.sol\":1694:2416  constructor(address _tokenAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/LandFIStake2.sol\":396:406  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/LandFIStake2.sol\":1773:1774  0 */\n  0x00\n    /* \"contracts/LandFIStake2.sol\":1748:1775  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/LandFIStake2.sol\":1748:1761  _tokenAddress */\n  dup2\n    /* \"contracts/LandFIStake2.sol\":1748:1775  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/LandFIStake2.sol\":1740:1808  require(_tokenAddress != address(0), \"Token address cannot be zero\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"contracts/LandFIStake2.sol\":1840:1853  _tokenAddress */\n  dup1\n    /* \"contracts/LandFIStake2.sol\":1819:1854  landFiToken = IERC20(_tokenAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LandFIStake2.sol\":1884:1885  0 */\n  0x00\n    /* \"contracts/LandFIStake2.sol\":1867:1881  rewardCountDue */\n  0x17\n    /* \"contracts/LandFIStake2.sol\":1867:1885  rewardCountDue = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":1910:1911  0 */\n  0x00\n    /* \"contracts/LandFIStake2.sol\":1896:1907  rewardCount */\n  0x18\n    /* \"contracts/LandFIStake2.sol\":1896:1911  rewardCount = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":1936:1937  0 */\n  0x00\n    /* \"contracts/LandFIStake2.sol\":1922:1933  totalStaked */\n  0x19\n    /* \"contracts/LandFIStake2.sol\":1922:1937  totalStaked = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":1959:1972  400_000 ether */\n  0x54b40b1f852bda000000\n    /* \"contracts/LandFIStake2.sol\":1948:1956  maxStake */\n  0x15\n    /* \"contracts/LandFIStake2.sol\":1948:1972  maxStake = 400_000 ether */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":1998:2011  500_000 ether */\n  0x69e10de76676d0800000\n    /* \"contracts/LandFIStake2.sol\":1983:1995  maxRewardDue */\n  0x1a\n    /* \"contracts/LandFIStake2.sol\":1983:2011  maxRewardDue = 500_000 ether */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2033:2043  0.01 ether */\n  0x2386f26fc10000\n    /* \"contracts/LandFIStake2.sol\":2022:2030  minStake */\n  0x16\n    /* \"contracts/LandFIStake2.sol\":2022:2043  minStake = 0.01 ether */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2067:2072  false */\n  0x00\n    /* \"contracts/LandFIStake2.sol\":2054:2064  fullUnlock */\n  0x1b\n  0x00\n    /* \"contracts/LandFIStake2.sol\":2054:2072  fullUnlock = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2096:2099  333 */\n  0x014d\n    /* \"contracts/LandFIStake2.sol\":2085:2093  box1Rate */\n  0x03\n    /* \"contracts/LandFIStake2.sol\":2085:2099  box1Rate = 333 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2121:2127  7 days */\n  0x093a80\n    /* \"contracts/LandFIStake2.sol\":2110:2118  box1Time */\n  0x04\n    /* \"contracts/LandFIStake2.sol\":2110:2127  box1Time = 7 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2152:2156  true */\n  0x01\n    /* \"contracts/LandFIStake2.sol\":2138:2149  box1Enabled */\n  0x05\n  0x00\n    /* \"contracts/LandFIStake2.sol\":2138:2156  box1Enabled = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2180:2182  83 */\n  0x53\n    /* \"contracts/LandFIStake2.sol\":2169:2177  box2Rate */\n  0x08\n    /* \"contracts/LandFIStake2.sol\":2169:2182  box2Rate = 83 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2204:2211  14 days */\n  0x127500\n    /* \"contracts/LandFIStake2.sol\":2193:2201  box2Time */\n  0x09\n    /* \"contracts/LandFIStake2.sol\":2193:2211  box2Time = 14 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2236:2240  true */\n  0x01\n    /* \"contracts/LandFIStake2.sol\":2222:2233  box2Enabled */\n  0x0a\n  0x00\n    /* \"contracts/LandFIStake2.sol\":2222:2240  box2Enabled = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2264:2266  32 */\n  0x20\n    /* \"contracts/LandFIStake2.sol\":2253:2261  box3Rate */\n  0x0d\n    /* \"contracts/LandFIStake2.sol\":2253:2266  box3Rate = 32 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2288:2295  28 days */\n  0x24ea00\n    /* \"contracts/LandFIStake2.sol\":2277:2285  box3Time */\n  0x0e\n    /* \"contracts/LandFIStake2.sol\":2277:2295  box3Time = 28 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2320:2324  true */\n  0x01\n    /* \"contracts/LandFIStake2.sol\":2306:2317  box3Enabled */\n  0x0f\n  0x00\n    /* \"contracts/LandFIStake2.sol\":2306:2324  box3Enabled = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2348:2350  26 */\n  0x1a\n    /* \"contracts/LandFIStake2.sol\":2337:2345  box4Rate */\n  0x12\n    /* \"contracts/LandFIStake2.sol\":2337:2350  box4Rate = 26 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2372:2379  28 days */\n  0x24ea00\n    /* \"contracts/LandFIStake2.sol\":2361:2369  box4Time */\n  0x13\n    /* \"contracts/LandFIStake2.sol\":2361:2379  box4Time = 28 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2404:2408  true */\n  0x01\n    /* \"contracts/LandFIStake2.sol\":2390:2401  box4Enabled */\n  0x14\n  0x00\n    /* \"contracts/LandFIStake2.sol\":2390:2408  box4Enabled = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":1694:2416  constructor(address _tokenAddress) {... */\n  pop\n    /* \"contracts/LandFIStake2.sol\":362:7757  contract LandFiStaking is Ownable(msg.sender) {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_35\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_37\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_38:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_40\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_43\n  tag_19\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":932:1051   */\ntag_42:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_44\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_24\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_25:\n    /* \"#utility.yul\":1289:1313   */\n  tag_46\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_22\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_48\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_25\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1723   */\ntag_26:\n    /* \"#utility.yul\":1638:1649   */\n  0x00\n    /* \"#utility.yul\":1672:1678   */\n  dup3\n    /* \"#utility.yul\":1667:1670   */\n  dup3\n    /* \"#utility.yul\":1660:1679   */\n  mstore\n    /* \"#utility.yul\":1712:1716   */\n  0x20\n    /* \"#utility.yul\":1707:1710   */\n  dup3\n    /* \"#utility.yul\":1703:1717   */\n  add\n    /* \"#utility.yul\":1688:1717   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1729:1907   */\ntag_27:\n    /* \"#utility.yul\":1869:1899   */\n  0x546f6b656e20616464726573732063616e6e6f74206265207a65726f00000000\n    /* \"#utility.yul\":1865:1866   */\n  0x00\n    /* \"#utility.yul\":1857:1863   */\n  dup3\n    /* \"#utility.yul\":1853:1867   */\n  add\n    /* \"#utility.yul\":1846:1900   */\n  mstore\n    /* \"#utility.yul\":1729:1907   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1913:2279   */\ntag_28:\n    /* \"#utility.yul\":2055:2058   */\n  0x00\n    /* \"#utility.yul\":2076:2143   */\n  tag_52\n    /* \"#utility.yul\":2140:2142   */\n  0x1c\n    /* \"#utility.yul\":2135:2138   */\n  dup4\n    /* \"#utility.yul\":2076:2143   */\n  tag_26\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2069:2143   */\n  swap2\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  tag_53\n    /* \"#utility.yul\":2241:2244   */\n  dup3\n    /* \"#utility.yul\":2152:2245   */\n  tag_27\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2270:2272   */\n  0x20\n    /* \"#utility.yul\":2265:2268   */\n  dup3\n    /* \"#utility.yul\":2261:2273   */\n  add\n    /* \"#utility.yul\":2254:2273   */\n  swap1\n  pop\n    /* \"#utility.yul\":1913:2279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2285:2704   */\ntag_15:\n    /* \"#utility.yul\":2451:2455   */\n  0x00\n    /* \"#utility.yul\":2489:2491   */\n  0x20\n    /* \"#utility.yul\":2478:2487   */\n  dup3\n    /* \"#utility.yul\":2474:2492   */\n  add\n    /* \"#utility.yul\":2466:2492   */\n  swap1\n  pop\n    /* \"#utility.yul\":2538:2547   */\n  dup2\n    /* \"#utility.yul\":2532:2536   */\n  dup2\n    /* \"#utility.yul\":2528:2548   */\n  sub\n    /* \"#utility.yul\":2524:2525   */\n  0x00\n    /* \"#utility.yul\":2513:2522   */\n  dup4\n    /* \"#utility.yul\":2509:2526   */\n  add\n    /* \"#utility.yul\":2502:2549   */\n  mstore\n    /* \"#utility.yul\":2566:2697   */\n  tag_55\n    /* \"#utility.yul\":2692:2696   */\n  dup2\n    /* \"#utility.yul\":2566:2697   */\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2558:2697   */\n  swap1\n  pop\n    /* \"#utility.yul\":2285:2704   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/LandFIStake2.sol\":362:7757  contract LandFiStaking is Ownable(msg.sender) {... */\ntag_16:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x8933cd72e164c9b6ce552201c117297f7873e41b74a3438d5253e75d613ffbad\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/LandFIStake2.sol\":362:7757  contract LandFiStaking is Ownable(msg.sender) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b3e920c\n      gt\n      tag_47\n      jumpi\n      dup1\n      0xd0bcc009\n      gt\n      tag_48\n      jumpi\n      dup1\n      0xe7de2ceb\n      gt\n      tag_49\n      jumpi\n      dup1\n      0xe7de2ceb\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xea1b28e0\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xf1cddd55\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xf908dc13\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xfd2b5202\n      eq\n      tag_46\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0xd0bcc009\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xd19b090e\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xd47c56e5\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xd5c41d69\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xd7d4918e\n      eq\n      tag_40\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0x94387289\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x94387289\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xb39dc996\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xbba4fefd\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xbef7d12e\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xc3630edb\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xcd5692ee\n      eq\n      tag_35\n      jumpi\n      jump(tag_2)\n    tag_50:\n      dup1\n      0x7b3e920c\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x89b0040a\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x8a170ac1\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x4b0c10d8\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x6cbde5cf\n      gt\n      tag_52\n      jumpi\n      dup1\n      0x6cbde5cf\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x73dec718\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x79085425\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x798cbe5e\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_52:\n      dup1\n      0x4b0c10d8\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4b5effc2\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4f51d090\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5cd5a159\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5f75bcea\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_51:\n      dup1\n      0x292a6b19\n      gt\n      tag_53\n      jumpi\n      dup1\n      0x292a6b19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2e5f89ef\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x35e63055\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x375b3c0a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x38dc97fb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4893afc1\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_53:\n      dup1\n      0x058df0e8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1d95985b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1d95d52f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23dcdb89\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x24ebd9d2\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/LandFIStake2.sol\":763:810  mapping (address => uint256) public box2Balance */\n    tag_3:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":1109:1132  uint256 public box3Time */\n    tag_4:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":2713:2796  function changeBox4Status(bool status) external onlyOwner { box4Enabled = status; } */\n    tag_5:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/LandFIStake2.sol\":2984:3065  function changeMinStake(uint256 amount) external onlyOwner { minStake = amount; } */\n    tag_6:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/LandFIStake2.sol\":1171:1218  mapping (address => uint256) public box4Balance */\n    tag_7:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":515:550  IERC20 public immutable landFiToken */\n    tag_8:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":967:1014  mapping (address => uint256) public box3Balance */\n    tag_9:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":5679:7754  function pullStake(uint256 boxNo) external {... */\n    tag_10:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/LandFIStake2.sol\":1495:1518  uint256 public minStake */\n    tag_11:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":1225:1276  mapping (address => uint256) public box4DepositDate */\n    tag_12:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":559:606  mapping (address => uint256) public box1Balance */\n    tag_13:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":701:724  uint256 public box1Time */\n    tag_14:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":3720:4031  function stakeAmount(address user, uint256 boxNo) public view returns (uint256) {... */\n    tag_15:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":613:664  mapping (address => uint256) public box1DepositDate */\n    tag_16:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":1343:1366  bool public box4Enabled */\n    tag_17:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":2535:2618  function changeBox2Status(bool status) external onlyOwner { box2Enabled = status; } */\n    tag_18:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      stop\n        /* \"contracts/LandFIStake2.sol\":2446:2529  function changeBox1Status(bool status) external onlyOwner { box1Enabled = status; } */\n    tag_19:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"contracts/LandFIStake2.sol\":3161:3329  function balanceOf(address user) external view returns (uint256) {... */\n    tag_20:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      stop\n        /* \"contracts/LandFIStake2.sol\":935:958  bool public box2Enabled */\n    tag_22:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":1561:1587  uint256 public rewardCount */\n    tag_23:\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":1313:1336  uint256 public box4Time */\n    tag_24:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":817:868  mapping (address => uint256) public box2DepositDate */\n    tag_25:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":1594:1620  uint256 public totalStaked */\n    tag_26:\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":1021:1072  mapping (address => uint256) public box3DepositDate */\n    tag_27:\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":731:754  bool public box1Enabled */\n    tag_28:\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_29:\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":2802:2891  function changeMaxRewardDue(uint256 amount) external onlyOwner { maxRewardDue = amount; } */\n    tag_30:\n      tag_152\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n    tag_152:\n      stop\n        /* \"contracts/LandFIStake2.sol\":1079:1102  uint256 public box3Rate */\n    tag_31:\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":1525:1554  uint256 public rewardCountDue */\n    tag_32:\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":3337:3712  function stakeUnlockTime(address user, uint256 boxNo) public view returns (uint256) {... */\n    tag_33:\n      tag_161\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_162:\n      tag_163\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":1283:1306  uint256 public box4Rate */\n    tag_34:\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      tag_167\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":2897:2978  function changeMaxStake(uint256 amount) external onlyOwner { maxStake = amount; } */\n    tag_35:\n      tag_168\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n    tag_168:\n      stop\n        /* \"contracts/LandFIStake2.sol\":1139:1162  bool public box3Enabled */\n    tag_36:\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":1627:1654  uint256 public maxRewardDue */\n    tag_37:\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":905:928  uint256 public box2Time */\n    tag_38:\n      tag_177\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      tag_179\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":2624:2707  function changeBox3Status(bool status) external onlyOwner { box3Enabled = status; } */\n    tag_39:\n      tag_180\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_181:\n      tag_182\n      jump\t// in\n    tag_180:\n      stop\n        /* \"contracts/LandFIStake2.sol\":875:898  uint256 public box2Rate */\n    tag_40:\n      tag_183\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      tag_185\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":671:694  uint256 public box1Rate */\n    tag_41:\n      tag_186\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      tag_188\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":1465:1488  uint256 public maxStake */\n    tag_42:\n      tag_189\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      tag_191\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":3071:3153  function changeFullUnlock(bool unlock) external onlyOwner { fullUnlock = unlock; } */\n    tag_43:\n      tag_192\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_193:\n      tag_194\n      jump\t// in\n    tag_192:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_44:\n      tag_195\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_196:\n      tag_197\n      jump\t// in\n    tag_195:\n      stop\n        /* \"contracts/LandFIStake2.sol\":1663:1685  bool public fullUnlock */\n    tag_45:\n      tag_198\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      tag_200\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":4039:5671  function addStake(uint256 amount, uint256 boxNo) external {... */\n    tag_46:\n      tag_201\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      tag_204\n      jump\t// in\n    tag_201:\n      stop\n        /* \"contracts/LandFIStake2.sol\":763:810  mapping (address => uint256) public box2Balance */\n    tag_57:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1109:1132  uint256 public box3Time */\n    tag_61:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":2713:2796  function changeBox4Status(bool status) external onlyOwner { box4Enabled = status; } */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_206:\n        /* \"contracts/LandFIStake2.sol\":2787:2793  status */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":2773:2784  box4Enabled */\n      0x14\n      0x00\n        /* \"contracts/LandFIStake2.sol\":2773:2793  box4Enabled = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":2713:2796  function changeBox4Status(bool status) external onlyOwner { box4Enabled = status; } */\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":2984:3065  function changeMinStake(uint256 amount) external onlyOwner { minStake = amount; } */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_210:\n        /* \"contracts/LandFIStake2.sol\":3056:3062  amount */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":3045:3053  minStake */\n      0x16\n        /* \"contracts/LandFIStake2.sol\":3045:3062  minStake = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":2984:3065  function changeMinStake(uint256 amount) external onlyOwner { minStake = amount; } */\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1171:1218  mapping (address => uint256) public box4Balance */\n    tag_73:\n      mstore(0x20, 0x10)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":515:550  IERC20 public immutable landFiToken */\n    tag_76:\n      immutable(\"0x8933cd72e164c9b6ce552201c117297f7873e41b74a3438d5253e75d613ffbad\")\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":967:1014  mapping (address => uint256) public box3Balance */\n    tag_81:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":5679:7754  function pullStake(uint256 boxNo) external {... */\n    tag_85:\n        /* \"contracts/LandFIStake2.sol\":5750:5751  1 */\n      0x01\n        /* \"contracts/LandFIStake2.sol\":5741:5746  boxNo */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":5741:5751  boxNo >= 1 */\n      lt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":5741:5765  boxNo >= 1 && boxNo <= 4 */\n      dup1\n      iszero\n      tag_213\n      jumpi\n      pop\n        /* \"contracts/LandFIStake2.sol\":5764:5765  4 */\n      0x04\n        /* \"contracts/LandFIStake2.sol\":5755:5760  boxNo */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":5755:5765  boxNo <= 4 */\n      gt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":5741:5765  boxNo >= 1 && boxNo <= 4 */\n    tag_213:\n        /* \"contracts/LandFIStake2.sol\":5733:5781  require(boxNo >= 1 && boxNo <= 4, \"Invalid box\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"contracts/LandFIStake2.sol\":5794:5806  address user */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5809:5819  msg.sender */\n      caller\n        /* \"contracts/LandFIStake2.sol\":5794:5819  address user = msg.sender */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":5830:5850  uint256 rewardAmount */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5861:5875  uint256 amount */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5901:5902  1 */\n      0x01\n        /* \"contracts/LandFIStake2.sol\":5892:5897  boxNo */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":5892:5902  boxNo == 1 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":5888:7278  if (boxNo == 1) {... */\n      tag_217\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":5928:5939  box1Balance */\n      0x01\n        /* \"contracts/LandFIStake2.sol\":5928:5945  box1Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5940:5944  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":5928:5945  box1Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":5919:5945  amount = box1Balance[user] */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":5977:5978  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5968:5974  amount */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":5968:5978  amount > 0 */\n      gt\n        /* \"contracts/LandFIStake2.sol\":5960:5991  require(amount > 0, \"No stake\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"contracts/LandFIStake2.sol\":6014:6024  fullUnlock */\n      0x1b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":6014:6079  fullUnlock || block.timestamp >= box1DepositDate[user] + box1Time */\n      dup1\n      tag_221\n      jumpi\n      pop\n        /* \"contracts/LandFIStake2.sol\":6071:6079  box1Time */\n      sload(0x04)\n        /* \"contracts/LandFIStake2.sol\":6047:6062  box1DepositDate */\n      0x02\n        /* \"contracts/LandFIStake2.sol\":6047:6068  box1DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6063:6067  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":6047:6068  box1DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":6047:6079  box1DepositDate[user] + box1Time */\n      tag_222\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"contracts/LandFIStake2.sol\":6028:6043  block.timestamp */\n      timestamp\n        /* \"contracts/LandFIStake2.sol\":6028:6079  block.timestamp >= box1DepositDate[user] + box1Time */\n      lt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":6014:6079  fullUnlock || block.timestamp >= box1DepositDate[user] + box1Time */\n    tag_221:\n        /* \"contracts/LandFIStake2.sol\":6006:6096  require(fullUnlock || block.timestamp >= box1DepositDate[user] + box1Time, \"Not unlocked\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/LandFIStake2.sol\":6135:6143  box1Rate */\n      sload(0x03)\n        /* \"contracts/LandFIStake2.sol\":6126:6132  amount */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":6126:6143  amount / box1Rate */\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"contracts/LandFIStake2.sol\":6111:6143  rewardAmount = amount / box1Rate */\n      swap2\n      pop\n        /* \"contracts/LandFIStake2.sol\":6178:6179  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6158:6169  box1Balance */\n      0x01\n        /* \"contracts/LandFIStake2.sol\":6158:6175  box1Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6170:6174  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":6158:6175  box1Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":6158:6179  box1Balance[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":6218:6219  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6194:6209  box1DepositDate */\n      0x02\n        /* \"contracts/LandFIStake2.sol\":6194:6215  box1DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6210:6214  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":6194:6215  box1DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":6194:6219  box1DepositDate[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":5888:7278  if (boxNo == 1) {... */\n      jump(tag_229)\n    tag_217:\n        /* \"contracts/LandFIStake2.sol\":6250:6251  2 */\n      0x02\n        /* \"contracts/LandFIStake2.sol\":6241:6246  boxNo */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":6241:6251  boxNo == 2 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":6237:7278  if (boxNo == 2) {... */\n      tag_230\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":6277:6288  box2Balance */\n      0x06\n        /* \"contracts/LandFIStake2.sol\":6277:6294  box2Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6289:6293  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":6277:6294  box2Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":6268:6294  amount = box2Balance[user] */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":6326:6327  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6317:6323  amount */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":6317:6327  amount > 0 */\n      gt\n        /* \"contracts/LandFIStake2.sol\":6309:6340  require(amount > 0, \"No stake\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_220\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"contracts/LandFIStake2.sol\":6363:6373  fullUnlock */\n      0x1b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":6363:6428  fullUnlock || block.timestamp >= box2DepositDate[user] + box2Time */\n      dup1\n      tag_233\n      jumpi\n      pop\n        /* \"contracts/LandFIStake2.sol\":6420:6428  box2Time */\n      sload(0x09)\n        /* \"contracts/LandFIStake2.sol\":6396:6411  box2DepositDate */\n      0x07\n        /* \"contracts/LandFIStake2.sol\":6396:6417  box2DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6412:6416  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":6396:6417  box2DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":6396:6428  box2DepositDate[user] + box2Time */\n      tag_234\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_234:\n        /* \"contracts/LandFIStake2.sol\":6377:6392  block.timestamp */\n      timestamp\n        /* \"contracts/LandFIStake2.sol\":6377:6428  block.timestamp >= box2DepositDate[user] + box2Time */\n      lt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":6363:6428  fullUnlock || block.timestamp >= box2DepositDate[user] + box2Time */\n    tag_233:\n        /* \"contracts/LandFIStake2.sol\":6355:6445  require(fullUnlock || block.timestamp >= box2DepositDate[user] + box2Time, \"Not unlocked\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_226\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"contracts/LandFIStake2.sol\":6484:6492  box2Rate */\n      sload(0x08)\n        /* \"contracts/LandFIStake2.sol\":6475:6481  amount */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":6475:6492  amount / box2Rate */\n      tag_237\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_237:\n        /* \"contracts/LandFIStake2.sol\":6460:6492  rewardAmount = amount / box2Rate */\n      swap2\n      pop\n        /* \"contracts/LandFIStake2.sol\":6527:6528  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6507:6518  box2Balance */\n      0x06\n        /* \"contracts/LandFIStake2.sol\":6507:6524  box2Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6519:6523  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":6507:6524  box2Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":6507:6528  box2Balance[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":6567:6568  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6543:6558  box2DepositDate */\n      0x07\n        /* \"contracts/LandFIStake2.sol\":6543:6564  box2DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6559:6563  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":6543:6564  box2DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":6543:6568  box2DepositDate[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":6237:7278  if (boxNo == 2) {... */\n      jump(tag_238)\n    tag_230:\n        /* \"contracts/LandFIStake2.sol\":6599:6600  3 */\n      0x03\n        /* \"contracts/LandFIStake2.sol\":6590:6595  boxNo */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":6590:6600  boxNo == 3 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":6586:7278  if (boxNo == 3) {... */\n      tag_239\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":6626:6637  box3Balance */\n      0x0b\n        /* \"contracts/LandFIStake2.sol\":6626:6643  box3Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6638:6642  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":6626:6643  box3Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":6617:6643  amount = box3Balance[user] */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":6675:6676  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6666:6672  amount */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":6666:6676  amount > 0 */\n      gt\n        /* \"contracts/LandFIStake2.sol\":6658:6689  require(amount > 0, \"No stake\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_220\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"contracts/LandFIStake2.sol\":6712:6722  fullUnlock */\n      0x1b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":6712:6777  fullUnlock || block.timestamp >= box3DepositDate[user] + box3Time */\n      dup1\n      tag_242\n      jumpi\n      pop\n        /* \"contracts/LandFIStake2.sol\":6769:6777  box3Time */\n      sload(0x0e)\n        /* \"contracts/LandFIStake2.sol\":6745:6760  box3DepositDate */\n      0x0c\n        /* \"contracts/LandFIStake2.sol\":6745:6766  box3DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6761:6765  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":6745:6766  box3DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":6745:6777  box3DepositDate[user] + box3Time */\n      tag_243\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_243:\n        /* \"contracts/LandFIStake2.sol\":6726:6741  block.timestamp */\n      timestamp\n        /* \"contracts/LandFIStake2.sol\":6726:6777  block.timestamp >= box3DepositDate[user] + box3Time */\n      lt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":6712:6777  fullUnlock || block.timestamp >= box3DepositDate[user] + box3Time */\n    tag_242:\n        /* \"contracts/LandFIStake2.sol\":6704:6794  require(fullUnlock || block.timestamp >= box3DepositDate[user] + box3Time, \"Not unlocked\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_226\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"contracts/LandFIStake2.sol\":6833:6841  box3Rate */\n      sload(0x0d)\n        /* \"contracts/LandFIStake2.sol\":6824:6830  amount */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":6824:6841  amount / box3Rate */\n      tag_246\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_246:\n        /* \"contracts/LandFIStake2.sol\":6809:6841  rewardAmount = amount / box3Rate */\n      swap2\n      pop\n        /* \"contracts/LandFIStake2.sol\":6876:6877  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6856:6867  box3Balance */\n      0x0b\n        /* \"contracts/LandFIStake2.sol\":6856:6873  box3Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6868:6872  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":6856:6873  box3Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":6856:6877  box3Balance[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":6916:6917  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6892:6907  box3DepositDate */\n      0x0c\n        /* \"contracts/LandFIStake2.sol\":6892:6913  box3DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6908:6912  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":6892:6913  box3DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":6892:6917  box3DepositDate[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":6586:7278  if (boxNo == 3) {... */\n      jump(tag_247)\n    tag_239:\n        /* \"contracts/LandFIStake2.sol\":6948:6949  4 */\n      0x04\n        /* \"contracts/LandFIStake2.sol\":6939:6944  boxNo */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":6939:6949  boxNo == 4 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":6935:7278  if (boxNo == 4) {... */\n      tag_248\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":6975:6986  box4Balance */\n      0x10\n        /* \"contracts/LandFIStake2.sol\":6975:6992  box4Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":6987:6991  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":6975:6992  box4Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":6966:6992  amount = box4Balance[user] */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":7024:7025  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":7015:7021  amount */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":7015:7025  amount > 0 */\n      gt\n        /* \"contracts/LandFIStake2.sol\":7007:7038  require(amount > 0, \"No stake\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap1\n      tag_220\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_249:\n        /* \"contracts/LandFIStake2.sol\":7061:7071  fullUnlock */\n      0x1b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":7061:7126  fullUnlock || block.timestamp >= box4DepositDate[user] + box4Time */\n      dup1\n      tag_251\n      jumpi\n      pop\n        /* \"contracts/LandFIStake2.sol\":7118:7126  box4Time */\n      sload(0x13)\n        /* \"contracts/LandFIStake2.sol\":7094:7109  box4DepositDate */\n      0x11\n        /* \"contracts/LandFIStake2.sol\":7094:7115  box4DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":7110:7114  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":7094:7115  box4DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":7094:7126  box4DepositDate[user] + box4Time */\n      tag_252\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_252:\n        /* \"contracts/LandFIStake2.sol\":7075:7090  block.timestamp */\n      timestamp\n        /* \"contracts/LandFIStake2.sol\":7075:7126  block.timestamp >= box4DepositDate[user] + box4Time */\n      lt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":7061:7126  fullUnlock || block.timestamp >= box4DepositDate[user] + box4Time */\n    tag_251:\n        /* \"contracts/LandFIStake2.sol\":7053:7143  require(fullUnlock || block.timestamp >= box4DepositDate[user] + box4Time, \"Not unlocked\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_226\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"contracts/LandFIStake2.sol\":7182:7190  box4Rate */\n      sload(0x12)\n        /* \"contracts/LandFIStake2.sol\":7173:7179  amount */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":7173:7190  amount / box4Rate */\n      tag_255\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_255:\n        /* \"contracts/LandFIStake2.sol\":7158:7190  rewardAmount = amount / box4Rate */\n      swap2\n      pop\n        /* \"contracts/LandFIStake2.sol\":7225:7226  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":7205:7216  box4Balance */\n      0x10\n        /* \"contracts/LandFIStake2.sol\":7205:7222  box4Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":7217:7221  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":7205:7222  box4Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":7205:7226  box4Balance[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":7265:7266  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":7241:7256  box4DepositDate */\n      0x11\n        /* \"contracts/LandFIStake2.sol\":7241:7262  box4DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":7257:7261  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":7241:7262  box4DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":7241:7266  box4DepositDate[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":6935:7278  if (boxNo == 4) {... */\n    tag_248:\n        /* \"contracts/LandFIStake2.sol\":6586:7278  if (boxNo == 3) {... */\n    tag_247:\n        /* \"contracts/LandFIStake2.sol\":6237:7278  if (boxNo == 2) {... */\n    tag_238:\n        /* \"contracts/LandFIStake2.sol\":5888:7278  if (boxNo == 1) {... */\n    tag_229:\n        /* \"contracts/LandFIStake2.sol\":7305:7311  amount */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":7290:7301  totalStaked */\n      0x19\n      0x00\n        /* \"contracts/LandFIStake2.sol\":7290:7311  totalStaked -= amount */\n      dup3\n      dup3\n      sload\n      tag_256\n      swap2\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":7327:7337  fullUnlock */\n      0x1b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":7322:7379  if (!fullUnlock) rewardCount = rewardCount + rewardAmount */\n      tag_258\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":7367:7379  rewardAmount */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":7353:7364  rewardCount */\n      sload(0x18)\n        /* \"contracts/LandFIStake2.sol\":7353:7379  rewardCount + rewardAmount */\n      tag_259\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_259:\n        /* \"contracts/LandFIStake2.sol\":7339:7350  rewardCount */\n      0x18\n        /* \"contracts/LandFIStake2.sol\":7339:7379  rewardCount = rewardCount + rewardAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":7322:7379  if (!fullUnlock) rewardCount = rewardCount + rewardAmount */\n    tag_258:\n        /* \"contracts/LandFIStake2.sol\":7395:7405  fullUnlock */\n      0x1b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":7390:7453  if (!fullUnlock) rewardCountDue = rewardCountDue - rewardAmount */\n      tag_260\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":7441:7453  rewardAmount */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":7424:7438  rewardCountDue */\n      sload(0x17)\n        /* \"contracts/LandFIStake2.sol\":7424:7453  rewardCountDue - rewardAmount */\n      tag_261\n      swap2\n      swap1\n      tag_257\n      jump\t// in\n    tag_261:\n        /* \"contracts/LandFIStake2.sol\":7407:7421  rewardCountDue */\n      0x17\n        /* \"contracts/LandFIStake2.sol\":7407:7453  rewardCountDue = rewardCountDue - rewardAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":7390:7453  if (!fullUnlock) rewardCountDue = rewardCountDue - rewardAmount */\n    tag_260:\n        /* \"contracts/LandFIStake2.sol\":7466:7504  landFiToken.safeTransfer(user, amount) */\n      tag_262\n        /* \"contracts/LandFIStake2.sol\":7491:7495  user */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":7497:7503  amount */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":7466:7477  landFiToken */\n      immutable(\"0x8933cd72e164c9b6ce552201c117297f7873e41b74a3438d5253e75d613ffbad\")\n        /* \"contracts/LandFIStake2.sol\":7466:7490  landFiToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_263\n      swap1\n        /* \"contracts/LandFIStake2.sol\":7466:7504  landFiToken.safeTransfer(user, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_262:\n        /* \"contracts/LandFIStake2.sol\":7522:7532  fullUnlock */\n      0x1b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":7517:7747  if (!fullUnlock) {... */\n      tag_264\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":7562:7563  4 */\n      0x04\n        /* \"contracts/LandFIStake2.sol\":7553:7558  boxNo */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":7553:7563  boxNo == 4 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":7549:7736  if (boxNo == 4) {... */\n      tag_265\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":7584:7635  landFiToken.safeTransfer(burnAddress, rewardAmount) */\n      tag_266\n        /* \"contracts/LandFIStake2.sol\":1414:1456  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/LandFIStake2.sol\":7622:7634  rewardAmount */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":7584:7595  landFiToken */\n      immutable(\"0x8933cd72e164c9b6ce552201c117297f7873e41b74a3438d5253e75d613ffbad\")\n        /* \"contracts/LandFIStake2.sol\":7584:7608  landFiToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_263\n      swap1\n        /* \"contracts/LandFIStake2.sol\":7584:7635  landFiToken.safeTransfer(burnAddress, rewardAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_266:\n        /* \"contracts/LandFIStake2.sol\":7549:7736  if (boxNo == 4) {... */\n      jump(tag_267)\n    tag_265:\n        /* \"contracts/LandFIStake2.sol\":7676:7720  landFiToken.safeTransfer(user, rewardAmount) */\n      tag_268\n        /* \"contracts/LandFIStake2.sol\":7701:7705  user */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":7707:7719  rewardAmount */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":7676:7687  landFiToken */\n      immutable(\"0x8933cd72e164c9b6ce552201c117297f7873e41b74a3438d5253e75d613ffbad\")\n        /* \"contracts/LandFIStake2.sol\":7676:7700  landFiToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_263\n      swap1\n        /* \"contracts/LandFIStake2.sol\":7676:7720  landFiToken.safeTransfer(user, rewardAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"contracts/LandFIStake2.sol\":7549:7736  if (boxNo == 4) {... */\n    tag_267:\n        /* \"contracts/LandFIStake2.sol\":7517:7747  if (!fullUnlock) {... */\n    tag_264:\n        /* \"contracts/LandFIStake2.sol\":5722:7754  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/LandFIStake2.sol\":5679:7754  function pullStake(uint256 boxNo) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1495:1518  uint256 public minStake */\n    tag_87:\n      sload(0x16)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1225:1276  mapping (address => uint256) public box4DepositDate */\n    tag_91:\n      mstore(0x20, 0x11)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":559:606  mapping (address => uint256) public box1Balance */\n    tag_95:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":701:724  uint256 public box1Time */\n    tag_98:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":3720:4031  function stakeAmount(address user, uint256 boxNo) public view returns (uint256) {... */\n    tag_103:\n        /* \"contracts/LandFIStake2.sol\":3791:3798  uint256 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3824:3825  1 */\n      0x01\n        /* \"contracts/LandFIStake2.sol\":3815:3820  boxNo */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":3815:3825  boxNo == 1 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":3811:3851  if (boxNo == 1) return box1Balance[user] */\n      tag_270\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":3834:3845  box1Balance */\n      0x01\n        /* \"contracts/LandFIStake2.sol\":3834:3851  box1Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3846:3850  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":3834:3851  box1Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":3827:3851  return box1Balance[user] */\n      swap1\n      pop\n      jump(tag_269)\n        /* \"contracts/LandFIStake2.sol\":3811:3851  if (boxNo == 1) return box1Balance[user] */\n    tag_270:\n        /* \"contracts/LandFIStake2.sol\":3875:3876  2 */\n      0x02\n        /* \"contracts/LandFIStake2.sol\":3866:3871  boxNo */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":3866:3876  boxNo == 2 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":3862:3902  if (boxNo == 2) return box2Balance[user] */\n      tag_271\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":3885:3896  box2Balance */\n      0x06\n        /* \"contracts/LandFIStake2.sol\":3885:3902  box2Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3897:3901  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":3885:3902  box2Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":3878:3902  return box2Balance[user] */\n      swap1\n      pop\n      jump(tag_269)\n        /* \"contracts/LandFIStake2.sol\":3862:3902  if (boxNo == 2) return box2Balance[user] */\n    tag_271:\n        /* \"contracts/LandFIStake2.sol\":3926:3927  3 */\n      0x03\n        /* \"contracts/LandFIStake2.sol\":3917:3922  boxNo */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":3917:3927  boxNo == 3 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":3913:3953  if (boxNo == 3) return box3Balance[user] */\n      tag_272\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":3936:3947  box3Balance */\n      0x0b\n        /* \"contracts/LandFIStake2.sol\":3936:3953  box3Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3948:3952  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":3936:3953  box3Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":3929:3953  return box3Balance[user] */\n      swap1\n      pop\n      jump(tag_269)\n        /* \"contracts/LandFIStake2.sol\":3913:3953  if (boxNo == 3) return box3Balance[user] */\n    tag_272:\n        /* \"contracts/LandFIStake2.sol\":3977:3978  4 */\n      0x04\n        /* \"contracts/LandFIStake2.sol\":3968:3973  boxNo */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":3968:3978  boxNo == 4 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":3964:4004  if (boxNo == 4) return box4Balance[user] */\n      tag_273\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":3987:3998  box4Balance */\n      0x10\n        /* \"contracts/LandFIStake2.sol\":3987:4004  box4Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3999:4003  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":3987:4004  box4Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":3980:4004  return box4Balance[user] */\n      swap1\n      pop\n      jump(tag_269)\n        /* \"contracts/LandFIStake2.sol\":3964:4004  if (boxNo == 4) return box4Balance[user] */\n    tag_273:\n        /* \"contracts/LandFIStake2.sol\":4022:4023  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4015:4023  return 0 */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":3720:4031  function stakeAmount(address user, uint256 boxNo) public view returns (uint256) {... */\n    tag_269:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":613:664  mapping (address => uint256) public box1DepositDate */\n    tag_107:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1343:1366  bool public box4Enabled */\n    tag_110:\n      0x14\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":2535:2618  function changeBox2Status(bool status) external onlyOwner { box2Enabled = status; } */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_275\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_275:\n        /* \"contracts/LandFIStake2.sol\":2609:2615  status */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":2595:2606  box2Enabled */\n      0x0a\n      0x00\n        /* \"contracts/LandFIStake2.sol\":2595:2615  box2Enabled = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":2535:2618  function changeBox2Status(bool status) external onlyOwner { box2Enabled = status; } */\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":2446:2529  function changeBox1Status(bool status) external onlyOwner { box1Enabled = status; } */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_278:\n        /* \"contracts/LandFIStake2.sol\":2520:2526  status */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":2506:2517  box1Enabled */\n      0x05\n      0x00\n        /* \"contracts/LandFIStake2.sol\":2506:2526  box1Enabled = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":2446:2529  function changeBox1Status(bool status) external onlyOwner { box1Enabled = status; } */\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":3161:3329  function balanceOf(address user) external view returns (uint256) {... */\n    tag_121:\n        /* \"contracts/LandFIStake2.sol\":3217:3224  uint256 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3304:3315  box4Balance */\n      0x10\n        /* \"contracts/LandFIStake2.sol\":3304:3321  box4Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3316:3320  user */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":3304:3321  box4Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":3284:3295  box3Balance */\n      0x0b\n        /* \"contracts/LandFIStake2.sol\":3284:3301  box3Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3296:3300  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":3284:3301  box3Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":3264:3275  box2Balance */\n      0x06\n        /* \"contracts/LandFIStake2.sol\":3264:3281  box2Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3276:3280  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":3264:3281  box2Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":3244:3255  box1Balance */\n      0x01\n        /* \"contracts/LandFIStake2.sol\":3244:3261  box1Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3256:3260  user */\n      dup7\n        /* \"contracts/LandFIStake2.sol\":3244:3261  box1Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":3244:3281  box1Balance[user] + box2Balance[user] */\n      tag_281\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_281:\n        /* \"contracts/LandFIStake2.sol\":3244:3301  box1Balance[user] + box2Balance[user] + box3Balance[user] */\n      tag_282\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_282:\n        /* \"contracts/LandFIStake2.sol\":3244:3321  box1Balance[user] + box2Balance[user] + box3Balance[user] + box4Balance[user] */\n      tag_283\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_283:\n        /* \"contracts/LandFIStake2.sol\":3237:3321  return box1Balance[user] + box2Balance[user] + box3Balance[user] + box4Balance[user] */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":3161:3329  function balanceOf(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_285\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_287\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_288\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":935:958  bool public box2Enabled */\n    tag_126:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1561:1587  uint256 public rewardCount */\n    tag_129:\n      sload(0x18)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1313:1336  uint256 public box4Time */\n    tag_132:\n      sload(0x13)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":817:868  mapping (address => uint256) public box2DepositDate */\n    tag_136:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1594:1620  uint256 public totalStaked */\n    tag_139:\n      sload(0x19)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1021:1072  mapping (address => uint256) public box3DepositDate */\n    tag_143:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":731:754  bool public box1Enabled */\n    tag_146:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":2802:2891  function changeMaxRewardDue(uint256 amount) external onlyOwner { maxRewardDue = amount; } */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_291\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_291:\n        /* \"contracts/LandFIStake2.sol\":2882:2888  amount */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":2867:2879  maxRewardDue */\n      0x1a\n        /* \"contracts/LandFIStake2.sol\":2867:2888  maxRewardDue = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":2802:2891  function changeMaxRewardDue(uint256 amount) external onlyOwner { maxRewardDue = amount; } */\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1079:1102  uint256 public box3Rate */\n    tag_156:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1525:1554  uint256 public rewardCountDue */\n    tag_159:\n      sload(0x17)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":3337:3712  function stakeUnlockTime(address user, uint256 boxNo) public view returns (uint256) {... */\n    tag_163:\n        /* \"contracts/LandFIStake2.sol\":3412:3419  uint256 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3445:3446  1 */\n      0x01\n        /* \"contracts/LandFIStake2.sol\":3436:3441  boxNo */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":3436:3446  boxNo == 1 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":3432:3487  if (boxNo == 1) return box1DepositDate[user] + box1Time */\n      tag_294\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":3479:3487  box1Time */\n      sload(0x04)\n        /* \"contracts/LandFIStake2.sol\":3455:3470  box1DepositDate */\n      0x02\n        /* \"contracts/LandFIStake2.sol\":3455:3476  box1DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3471:3475  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":3455:3476  box1DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":3455:3487  box1DepositDate[user] + box1Time */\n      tag_295\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_295:\n        /* \"contracts/LandFIStake2.sol\":3448:3487  return box1DepositDate[user] + box1Time */\n      swap1\n      pop\n      jump(tag_293)\n        /* \"contracts/LandFIStake2.sol\":3432:3487  if (boxNo == 1) return box1DepositDate[user] + box1Time */\n    tag_294:\n        /* \"contracts/LandFIStake2.sol\":3511:3512  2 */\n      0x02\n        /* \"contracts/LandFIStake2.sol\":3502:3507  boxNo */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":3502:3512  boxNo == 2 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":3498:3553  if (boxNo == 2) return box2DepositDate[user] + box2Time */\n      tag_296\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":3545:3553  box2Time */\n      sload(0x09)\n        /* \"contracts/LandFIStake2.sol\":3521:3536  box2DepositDate */\n      0x07\n        /* \"contracts/LandFIStake2.sol\":3521:3542  box2DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3537:3541  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":3521:3542  box2DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":3521:3553  box2DepositDate[user] + box2Time */\n      tag_297\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_297:\n        /* \"contracts/LandFIStake2.sol\":3514:3553  return box2DepositDate[user] + box2Time */\n      swap1\n      pop\n      jump(tag_293)\n        /* \"contracts/LandFIStake2.sol\":3498:3553  if (boxNo == 2) return box2DepositDate[user] + box2Time */\n    tag_296:\n        /* \"contracts/LandFIStake2.sol\":3577:3578  3 */\n      0x03\n        /* \"contracts/LandFIStake2.sol\":3568:3573  boxNo */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":3568:3578  boxNo == 3 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":3564:3619  if (boxNo == 3) return box3DepositDate[user] + box3Time */\n      tag_298\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":3611:3619  box3Time */\n      sload(0x0e)\n        /* \"contracts/LandFIStake2.sol\":3587:3602  box3DepositDate */\n      0x0c\n        /* \"contracts/LandFIStake2.sol\":3587:3608  box3DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3603:3607  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":3587:3608  box3DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":3587:3619  box3DepositDate[user] + box3Time */\n      tag_299\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_299:\n        /* \"contracts/LandFIStake2.sol\":3580:3619  return box3DepositDate[user] + box3Time */\n      swap1\n      pop\n      jump(tag_293)\n        /* \"contracts/LandFIStake2.sol\":3564:3619  if (boxNo == 3) return box3DepositDate[user] + box3Time */\n    tag_298:\n        /* \"contracts/LandFIStake2.sol\":3643:3644  4 */\n      0x04\n        /* \"contracts/LandFIStake2.sol\":3634:3639  boxNo */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":3634:3644  boxNo == 4 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":3630:3685  if (boxNo == 4) return box4DepositDate[user] + box4Time */\n      tag_300\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":3677:3685  box4Time */\n      sload(0x13)\n        /* \"contracts/LandFIStake2.sol\":3653:3668  box4DepositDate */\n      0x11\n        /* \"contracts/LandFIStake2.sol\":3653:3674  box4DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3669:3673  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":3653:3674  box4DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":3653:3685  box4DepositDate[user] + box4Time */\n      tag_301\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_301:\n        /* \"contracts/LandFIStake2.sol\":3646:3685  return box4DepositDate[user] + box4Time */\n      swap1\n      pop\n      jump(tag_293)\n        /* \"contracts/LandFIStake2.sol\":3630:3685  if (boxNo == 4) return box4DepositDate[user] + box4Time */\n    tag_300:\n        /* \"contracts/LandFIStake2.sol\":3703:3704  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3696:3704  return 0 */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":3337:3712  function stakeUnlockTime(address user, uint256 boxNo) public view returns (uint256) {... */\n    tag_293:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1283:1306  uint256 public box4Rate */\n    tag_166:\n      sload(0x12)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":2897:2978  function changeMaxStake(uint256 amount) external onlyOwner { maxStake = amount; } */\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_303\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_303:\n        /* \"contracts/LandFIStake2.sol\":2969:2975  amount */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":2958:2966  maxStake */\n      0x15\n        /* \"contracts/LandFIStake2.sol\":2958:2975  maxStake = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":2897:2978  function changeMaxStake(uint256 amount) external onlyOwner { maxStake = amount; } */\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1139:1162  bool public box3Enabled */\n    tag_172:\n      0x0f\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1627:1654  uint256 public maxRewardDue */\n    tag_175:\n      sload(0x1a)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":905:928  uint256 public box2Time */\n    tag_178:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":2624:2707  function changeBox3Status(bool status) external onlyOwner { box3Enabled = status; } */\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_306\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_306:\n        /* \"contracts/LandFIStake2.sol\":2698:2704  status */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":2684:2695  box3Enabled */\n      0x0f\n      0x00\n        /* \"contracts/LandFIStake2.sol\":2684:2704  box3Enabled = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":2624:2707  function changeBox3Status(bool status) external onlyOwner { box3Enabled = status; } */\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":875:898  uint256 public box2Rate */\n    tag_184:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":671:694  uint256 public box1Rate */\n    tag_187:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1465:1488  uint256 public maxStake */\n    tag_190:\n      sload(0x15)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":3071:3153  function changeFullUnlock(bool unlock) external onlyOwner { fullUnlock = unlock; } */\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_309\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_309:\n        /* \"contracts/LandFIStake2.sol\":3144:3150  unlock */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":3131:3141  fullUnlock */\n      0x1b\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3131:3150  fullUnlock = unlock */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":3071:3153  function changeFullUnlock(bool unlock) external onlyOwner { fullUnlock = unlock; } */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_312\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_316\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_288\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":1663:1685  bool public fullUnlock */\n    tag_199:\n      0x1b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":4039:5671  function addStake(uint256 amount, uint256 boxNo) external {... */\n    tag_204:\n        /* \"contracts/LandFIStake2.sol\":4125:4126  1 */\n      0x01\n        /* \"contracts/LandFIStake2.sol\":4116:4121  boxNo */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":4116:4126  boxNo >= 1 */\n      lt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":4116:4140  boxNo >= 1 && boxNo <= 4 */\n      dup1\n      iszero\n      tag_318\n      jumpi\n      pop\n        /* \"contracts/LandFIStake2.sol\":4139:4140  4 */\n      0x04\n        /* \"contracts/LandFIStake2.sol\":4130:4135  boxNo */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":4130:4140  boxNo <= 4 */\n      gt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":4116:4140  boxNo >= 1 && boxNo <= 4 */\n    tag_318:\n        /* \"contracts/LandFIStake2.sol\":4108:4156  require(boxNo >= 1 && boxNo <= 4, \"Invalid box\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap1\n      tag_216\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_319:\n        /* \"contracts/LandFIStake2.sol\":4185:4193  minStake */\n      sload(0x16)\n        /* \"contracts/LandFIStake2.sol\":4175:4181  amount */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":4175:4193  amount >= minStake */\n      lt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":4175:4215  amount >= minStake && amount <= maxStake */\n      dup1\n      iszero\n      tag_321\n      jumpi\n      pop\n        /* \"contracts/LandFIStake2.sol\":4207:4215  maxStake */\n      sload(0x15)\n        /* \"contracts/LandFIStake2.sol\":4197:4203  amount */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":4197:4215  amount <= maxStake */\n      gt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":4175:4215  amount >= minStake && amount <= maxStake */\n    tag_321:\n        /* \"contracts/LandFIStake2.sol\":4167:4234  require(amount >= minStake && amount <= maxStake, \"Invalid amount\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap1\n      tag_324\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"contracts/LandFIStake2.sol\":4254:4264  fullUnlock */\n      0x1b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":4253:4264  !fullUnlock */\n      iszero\n        /* \"contracts/LandFIStake2.sol\":4245:4287  require(!fullUnlock, \"Unlock mode active\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap1\n      tag_327\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_325:\n        /* \"contracts/LandFIStake2.sol\":4322:4333  rewardCount */\n      sload(0x18)\n        /* \"contracts/LandFIStake2.sol\":4306:4318  maxRewardDue */\n      sload(0x1a)\n        /* \"contracts/LandFIStake2.sol\":4306:4333  maxRewardDue >= rewardCount */\n      lt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":4298:4351  require(maxRewardDue >= rewardCount, \"Staking ended\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_328:\n        /* \"contracts/LandFIStake2.sol\":4364:4376  address user */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4379:4389  msg.sender */\n      caller\n        /* \"contracts/LandFIStake2.sol\":4364:4389  address user = msg.sender */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":4400:4420  uint256 rewardAmount */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4446:4447  1 */\n      0x01\n        /* \"contracts/LandFIStake2.sol\":4437:4442  boxNo */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":4437:4447  boxNo == 1 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":4433:5519  if (boxNo == 1) {... */\n      tag_331\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":4472:4483  box1Enabled */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":4472:4509  box1Enabled && box1Balance[user] == 0 */\n      dup1\n      iszero\n      tag_332\n      jumpi\n      pop\n        /* \"contracts/LandFIStake2.sol\":4508:4509  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4487:4498  box1Balance */\n      0x01\n        /* \"contracts/LandFIStake2.sol\":4487:4504  box1Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4499:4503  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":4487:4504  box1Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":4487:4509  box1Balance[user] == 0 */\n      eq\n        /* \"contracts/LandFIStake2.sol\":4472:4509  box1Enabled && box1Balance[user] == 0 */\n    tag_332:\n        /* \"contracts/LandFIStake2.sol\":4464:4546  require(box1Enabled && box1Balance[user] == 0, \"Box 1 disabled or already staked\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap1\n      tag_335\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_333:\n        /* \"contracts/LandFIStake2.sol\":4585:4593  box1Rate */\n      sload(0x03)\n        /* \"contracts/LandFIStake2.sol\":4576:4582  amount */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":4576:4593  amount / box1Rate */\n      tag_336\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_336:\n        /* \"contracts/LandFIStake2.sol\":4561:4593  rewardAmount = amount / box1Rate */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":4628:4634  amount */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":4608:4619  box1Balance */\n      0x01\n        /* \"contracts/LandFIStake2.sol\":4608:4625  box1Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4620:4624  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":4608:4625  box1Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":4608:4634  box1Balance[user] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":4673:4688  block.timestamp */\n      timestamp\n        /* \"contracts/LandFIStake2.sol\":4649:4664  box1DepositDate */\n      0x02\n        /* \"contracts/LandFIStake2.sol\":4649:4670  box1DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4665:4669  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":4649:4670  box1DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":4649:4688  box1DepositDate[user] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":4433:5519  if (boxNo == 1) {... */\n      jump(tag_337)\n    tag_331:\n        /* \"contracts/LandFIStake2.sol\":4719:4720  2 */\n      0x02\n        /* \"contracts/LandFIStake2.sol\":4710:4715  boxNo */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":4710:4720  boxNo == 2 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":4706:5519  if (boxNo == 2) {... */\n      tag_338\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":4745:4756  box2Enabled */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":4745:4782  box2Enabled && box2Balance[user] == 0 */\n      dup1\n      iszero\n      tag_339\n      jumpi\n      pop\n        /* \"contracts/LandFIStake2.sol\":4781:4782  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4760:4771  box2Balance */\n      0x06\n        /* \"contracts/LandFIStake2.sol\":4760:4777  box2Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4772:4776  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":4760:4777  box2Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":4760:4782  box2Balance[user] == 0 */\n      eq\n        /* \"contracts/LandFIStake2.sol\":4745:4782  box2Enabled && box2Balance[user] == 0 */\n    tag_339:\n        /* \"contracts/LandFIStake2.sol\":4737:4819  require(box2Enabled && box2Balance[user] == 0, \"Box 2 disabled or already staked\") */\n      tag_340\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_341\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_340:\n        /* \"contracts/LandFIStake2.sol\":4858:4866  box2Rate */\n      sload(0x08)\n        /* \"contracts/LandFIStake2.sol\":4849:4855  amount */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":4849:4866  amount / box2Rate */\n      tag_343\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_343:\n        /* \"contracts/LandFIStake2.sol\":4834:4866  rewardAmount = amount / box2Rate */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":4901:4907  amount */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":4881:4892  box2Balance */\n      0x06\n        /* \"contracts/LandFIStake2.sol\":4881:4898  box2Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4893:4897  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":4881:4898  box2Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":4881:4907  box2Balance[user] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":4946:4961  block.timestamp */\n      timestamp\n        /* \"contracts/LandFIStake2.sol\":4922:4937  box2DepositDate */\n      0x07\n        /* \"contracts/LandFIStake2.sol\":4922:4943  box2DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4938:4942  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":4922:4943  box2DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":4922:4961  box2DepositDate[user] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":4706:5519  if (boxNo == 2) {... */\n      jump(tag_344)\n    tag_338:\n        /* \"contracts/LandFIStake2.sol\":4992:4993  3 */\n      0x03\n        /* \"contracts/LandFIStake2.sol\":4983:4988  boxNo */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":4983:4993  boxNo == 3 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":4979:5519  if (boxNo == 3) {... */\n      tag_345\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":5018:5029  box3Enabled */\n      0x0f\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":5018:5055  box3Enabled && box3Balance[user] == 0 */\n      dup1\n      iszero\n      tag_346\n      jumpi\n      pop\n        /* \"contracts/LandFIStake2.sol\":5054:5055  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5033:5044  box3Balance */\n      0x0b\n        /* \"contracts/LandFIStake2.sol\":5033:5050  box3Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5045:5049  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":5033:5050  box3Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":5033:5055  box3Balance[user] == 0 */\n      eq\n        /* \"contracts/LandFIStake2.sol\":5018:5055  box3Enabled && box3Balance[user] == 0 */\n    tag_346:\n        /* \"contracts/LandFIStake2.sol\":5010:5092  require(box3Enabled && box3Balance[user] == 0, \"Box 3 disabled or already staked\") */\n      tag_347\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_348\n      swap1\n      tag_349\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_347:\n        /* \"contracts/LandFIStake2.sol\":5131:5139  box3Rate */\n      sload(0x0d)\n        /* \"contracts/LandFIStake2.sol\":5122:5128  amount */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":5122:5139  amount / box3Rate */\n      tag_350\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_350:\n        /* \"contracts/LandFIStake2.sol\":5107:5139  rewardAmount = amount / box3Rate */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":5174:5180  amount */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":5154:5165  box3Balance */\n      0x0b\n        /* \"contracts/LandFIStake2.sol\":5154:5171  box3Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5166:5170  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":5154:5171  box3Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":5154:5180  box3Balance[user] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":5219:5234  block.timestamp */\n      timestamp\n        /* \"contracts/LandFIStake2.sol\":5195:5210  box3DepositDate */\n      0x0c\n        /* \"contracts/LandFIStake2.sol\":5195:5216  box3DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5211:5215  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":5195:5216  box3DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":5195:5234  box3DepositDate[user] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":4979:5519  if (boxNo == 3) {... */\n      jump(tag_351)\n    tag_345:\n        /* \"contracts/LandFIStake2.sol\":5265:5266  4 */\n      0x04\n        /* \"contracts/LandFIStake2.sol\":5256:5261  boxNo */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":5256:5266  boxNo == 4 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":5252:5519  if (boxNo == 4) {... */\n      tag_352\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":5291:5302  box4Enabled */\n      0x14\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":5291:5328  box4Enabled && box4Balance[user] == 0 */\n      dup1\n      iszero\n      tag_353\n      jumpi\n      pop\n        /* \"contracts/LandFIStake2.sol\":5327:5328  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5306:5317  box4Balance */\n      0x10\n        /* \"contracts/LandFIStake2.sol\":5306:5323  box4Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5318:5322  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":5306:5323  box4Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":5306:5328  box4Balance[user] == 0 */\n      eq\n        /* \"contracts/LandFIStake2.sol\":5291:5328  box4Enabled && box4Balance[user] == 0 */\n    tag_353:\n        /* \"contracts/LandFIStake2.sol\":5283:5365  require(box4Enabled && box4Balance[user] == 0, \"Box 4 disabled or already staked\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_354:\n        /* \"contracts/LandFIStake2.sol\":5404:5412  box4Rate */\n      sload(0x12)\n        /* \"contracts/LandFIStake2.sol\":5395:5401  amount */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":5395:5412  amount / box4Rate */\n      tag_357\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_357:\n        /* \"contracts/LandFIStake2.sol\":5380:5412  rewardAmount = amount / box4Rate */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":5447:5453  amount */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":5427:5438  box4Balance */\n      0x10\n        /* \"contracts/LandFIStake2.sol\":5427:5444  box4Balance[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5439:5443  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":5427:5444  box4Balance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":5427:5453  box4Balance[user] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":5492:5507  block.timestamp */\n      timestamp\n        /* \"contracts/LandFIStake2.sol\":5468:5483  box4DepositDate */\n      0x11\n        /* \"contracts/LandFIStake2.sol\":5468:5489  box4DepositDate[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5484:5488  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":5468:5489  box4DepositDate[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":5468:5507  box4DepositDate[user] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":5252:5519  if (boxNo == 4) {... */\n    tag_352:\n        /* \"contracts/LandFIStake2.sol\":4979:5519  if (boxNo == 3) {... */\n    tag_351:\n        /* \"contracts/LandFIStake2.sol\":4706:5519  if (boxNo == 2) {... */\n    tag_344:\n        /* \"contracts/LandFIStake2.sol\":4433:5519  if (boxNo == 1) {... */\n    tag_337:\n        /* \"contracts/LandFIStake2.sol\":5549:5561  rewardAmount */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":5531:5545  rewardCountDue */\n      0x17\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5531:5561  rewardCountDue += rewardAmount */\n      dup3\n      dup3\n      sload\n      tag_358\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_358:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":5587:5593  amount */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":5572:5583  totalStaked */\n      0x19\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5572:5593  totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_359\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_359:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":5606:5663  landFiToken.safeTransferFrom(user, address(this), amount) */\n      tag_360\n        /* \"contracts/LandFIStake2.sol\":5635:5639  user */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":5649:5653  this */\n      address\n        /* \"contracts/LandFIStake2.sol\":5656:5662  amount */\n      dup7\n        /* \"contracts/LandFIStake2.sol\":5606:5617  landFiToken */\n      immutable(\"0x8933cd72e164c9b6ce552201c117297f7873e41b74a3438d5253e75d613ffbad\")\n        /* \"contracts/LandFIStake2.sol\":5606:5634  landFiToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_361\n      swap1\n        /* \"contracts/LandFIStake2.sol\":5606:5663  landFiToken.safeTransferFrom(user, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_360:\n        /* \"contracts/LandFIStake2.sol\":4097:5671  {... */\n      pop\n      pop\n        /* \"contracts/LandFIStake2.sol\":4039:5671  function addStake(uint256 amount, uint256 boxNo) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_363\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_364\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_363:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_365\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_366\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_367\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_364\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_368\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_366:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_370\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_371\n      swap3\n      swap2\n      swap1\n      tag_372\n      jump\t// in\n    tag_371:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_373\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_376\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_377\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_378\n      jump\t// in\n    tag_377:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_373\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_381\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_382\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_383)\n    tag_382:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_383:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_384\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_385\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_385:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_387:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_389:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_390:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_436\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_389\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_391:\n        /* \"#utility.yul\":641:665   */\n      tag_438\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_390\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_439:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_392:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_441\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_391\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_56:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_444\n      tag_387\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":917:1036   */\n    tag_443:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_445\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_392\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_393:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_394:\n        /* \"#utility.yul\":1346:1370   */\n      tag_448\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_393\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_59:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_450\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_394\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1701   */\n    tag_395:\n        /* \"#utility.yul\":1645:1652   */\n      0x00\n        /* \"#utility.yul\":1688:1693   */\n      dup2\n        /* \"#utility.yul\":1681:1694   */\n      iszero\n        /* \"#utility.yul\":1674:1695   */\n      iszero\n        /* \"#utility.yul\":1663:1695   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:1823   */\n    tag_396:\n        /* \"#utility.yul\":1777:1798   */\n      tag_453\n        /* \"#utility.yul\":1792:1797   */\n      dup2\n        /* \"#utility.yul\":1777:1798   */\n      tag_395\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":1770:1775   */\n      dup2\n        /* \"#utility.yul\":1767:1799   */\n      eq\n        /* \"#utility.yul\":1757:1817   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":1813:1814   */\n      0x00\n        /* \"#utility.yul\":1810:1811   */\n      0x00\n        /* \"#utility.yul\":1803:1815   */\n      revert\n        /* \"#utility.yul\":1757:1817   */\n    tag_454:\n        /* \"#utility.yul\":1707:1823   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1829:1962   */\n    tag_397:\n        /* \"#utility.yul\":1872:1877   */\n      0x00\n        /* \"#utility.yul\":1910:1916   */\n      dup2\n        /* \"#utility.yul\":1897:1917   */\n      calldataload\n        /* \"#utility.yul\":1888:1917   */\n      swap1\n      pop\n        /* \"#utility.yul\":1926:1956   */\n      tag_456\n        /* \"#utility.yul\":1950:1955   */\n      dup2\n        /* \"#utility.yul\":1926:1956   */\n      tag_396\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":1829:1962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1968:2291   */\n    tag_65:\n        /* \"#utility.yul\":2024:2030   */\n      0x00\n        /* \"#utility.yul\":2073:2075   */\n      0x20\n        /* \"#utility.yul\":2061:2070   */\n      dup3\n        /* \"#utility.yul\":2052:2059   */\n      dup5\n        /* \"#utility.yul\":2048:2071   */\n      sub\n        /* \"#utility.yul\":2044:2076   */\n      slt\n        /* \"#utility.yul\":2041:2160   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":2079:2158   */\n      tag_459\n      tag_387\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":2041:2160   */\n    tag_458:\n        /* \"#utility.yul\":2199:2200   */\n      0x00\n        /* \"#utility.yul\":2224:2274   */\n      tag_460\n        /* \"#utility.yul\":2266:2273   */\n      dup5\n        /* \"#utility.yul\":2257:2263   */\n      dup3\n        /* \"#utility.yul\":2246:2255   */\n      dup6\n        /* \"#utility.yul\":2242:2264   */\n      add\n        /* \"#utility.yul\":2224:2274   */\n      tag_397\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":2214:2274   */\n      swap2\n      pop\n        /* \"#utility.yul\":2170:2284   */\n      pop\n        /* \"#utility.yul\":1968:2291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2297:2419   */\n    tag_398:\n        /* \"#utility.yul\":2370:2394   */\n      tag_462\n        /* \"#utility.yul\":2388:2393   */\n      dup2\n        /* \"#utility.yul\":2370:2394   */\n      tag_393\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2360:2395   */\n      eq\n        /* \"#utility.yul\":2350:2413   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":2409:2410   */\n      0x00\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2399:2411   */\n      revert\n        /* \"#utility.yul\":2350:2413   */\n    tag_463:\n        /* \"#utility.yul\":2297:2419   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2425:2564   */\n    tag_399:\n        /* \"#utility.yul\":2471:2476   */\n      0x00\n        /* \"#utility.yul\":2509:2515   */\n      dup2\n        /* \"#utility.yul\":2496:2516   */\n      calldataload\n        /* \"#utility.yul\":2487:2516   */\n      swap1\n      pop\n        /* \"#utility.yul\":2525:2558   */\n      tag_465\n        /* \"#utility.yul\":2552:2557   */\n      dup2\n        /* \"#utility.yul\":2525:2558   */\n      tag_398\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":2425:2564   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2570:2899   */\n    tag_69:\n        /* \"#utility.yul\":2629:2635   */\n      0x00\n        /* \"#utility.yul\":2678:2680   */\n      0x20\n        /* \"#utility.yul\":2666:2675   */\n      dup3\n        /* \"#utility.yul\":2657:2664   */\n      dup5\n        /* \"#utility.yul\":2653:2676   */\n      sub\n        /* \"#utility.yul\":2649:2681   */\n      slt\n        /* \"#utility.yul\":2646:2765   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":2684:2763   */\n      tag_468\n      tag_387\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":2646:2765   */\n    tag_467:\n        /* \"#utility.yul\":2804:2805   */\n      0x00\n        /* \"#utility.yul\":2829:2882   */\n      tag_469\n        /* \"#utility.yul\":2874:2881   */\n      dup5\n        /* \"#utility.yul\":2865:2871   */\n      dup3\n        /* \"#utility.yul\":2854:2863   */\n      dup6\n        /* \"#utility.yul\":2850:2872   */\n      add\n        /* \"#utility.yul\":2829:2882   */\n      tag_399\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":2819:2882   */\n      swap2\n      pop\n        /* \"#utility.yul\":2775:2892   */\n      pop\n        /* \"#utility.yul\":2570:2899   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2905:2965   */\n    tag_400:\n        /* \"#utility.yul\":2933:2936   */\n      0x00\n        /* \"#utility.yul\":2954:2959   */\n      dup2\n        /* \"#utility.yul\":2947:2959   */\n      swap1\n      pop\n        /* \"#utility.yul\":2905:2965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2971:3113   */\n    tag_401:\n        /* \"#utility.yul\":3021:3030   */\n      0x00\n        /* \"#utility.yul\":3054:3107   */\n      tag_472\n        /* \"#utility.yul\":3072:3106   */\n      tag_473\n        /* \"#utility.yul\":3081:3105   */\n      tag_474\n        /* \"#utility.yul\":3099:3104   */\n      dup5\n        /* \"#utility.yul\":3081:3105   */\n      tag_389\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":3072:3106   */\n      tag_400\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":3054:3107   */\n      tag_389\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":3041:3107   */\n      swap1\n      pop\n        /* \"#utility.yul\":2971:3113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3245   */\n    tag_402:\n        /* \"#utility.yul\":3169:3178   */\n      0x00\n        /* \"#utility.yul\":3202:3239   */\n      tag_476\n        /* \"#utility.yul\":3233:3238   */\n      dup3\n        /* \"#utility.yul\":3202:3239   */\n      tag_401\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":3189:3239   */\n      swap1\n      pop\n        /* \"#utility.yul\":3119:3245   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3251:3391   */\n    tag_403:\n        /* \"#utility.yul\":3315:3324   */\n      0x00\n        /* \"#utility.yul\":3348:3385   */\n      tag_478\n        /* \"#utility.yul\":3379:3384   */\n      dup3\n        /* \"#utility.yul\":3348:3385   */\n      tag_402\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":3335:3385   */\n      swap1\n      pop\n        /* \"#utility.yul\":3251:3391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3397:3556   */\n    tag_404:\n        /* \"#utility.yul\":3498:3549   */\n      tag_480\n        /* \"#utility.yul\":3543:3548   */\n      dup2\n        /* \"#utility.yul\":3498:3549   */\n      tag_403\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":3493:3496   */\n      dup3\n        /* \"#utility.yul\":3486:3550   */\n      mstore\n        /* \"#utility.yul\":3397:3556   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3562:3812   */\n    tag_78:\n        /* \"#utility.yul\":3669:3673   */\n      0x00\n        /* \"#utility.yul\":3707:3709   */\n      0x20\n        /* \"#utility.yul\":3696:3705   */\n      dup3\n        /* \"#utility.yul\":3692:3710   */\n      add\n        /* \"#utility.yul\":3684:3710   */\n      swap1\n      pop\n        /* \"#utility.yul\":3720:3805   */\n      tag_482\n        /* \"#utility.yul\":3802:3803   */\n      0x00\n        /* \"#utility.yul\":3791:3800   */\n      dup4\n        /* \"#utility.yul\":3787:3804   */\n      add\n        /* \"#utility.yul\":3778:3784   */\n      dup5\n        /* \"#utility.yul\":3720:3805   */\n      tag_404\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":3562:3812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3818:4292   */\n    tag_102:\n        /* \"#utility.yul\":3886:3892   */\n      0x00\n        /* \"#utility.yul\":3894:3900   */\n      0x00\n        /* \"#utility.yul\":3943:3945   */\n      0x40\n        /* \"#utility.yul\":3931:3940   */\n      dup4\n        /* \"#utility.yul\":3922:3929   */\n      dup6\n        /* \"#utility.yul\":3918:3941   */\n      sub\n        /* \"#utility.yul\":3914:3946   */\n      slt\n        /* \"#utility.yul\":3911:4030   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":3949:4028   */\n      tag_485\n      tag_387\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":3911:4030   */\n    tag_484:\n        /* \"#utility.yul\":4069:4070   */\n      0x00\n        /* \"#utility.yul\":4094:4147   */\n      tag_486\n        /* \"#utility.yul\":4139:4146   */\n      dup6\n        /* \"#utility.yul\":4130:4136   */\n      dup3\n        /* \"#utility.yul\":4119:4128   */\n      dup7\n        /* \"#utility.yul\":4115:4137   */\n      add\n        /* \"#utility.yul\":4094:4147   */\n      tag_392\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":4084:4147   */\n      swap3\n      pop\n        /* \"#utility.yul\":4040:4157   */\n      pop\n        /* \"#utility.yul\":4196:4198   */\n      0x20\n        /* \"#utility.yul\":4222:4275   */\n      tag_487\n        /* \"#utility.yul\":4267:4274   */\n      dup6\n        /* \"#utility.yul\":4258:4264   */\n      dup3\n        /* \"#utility.yul\":4247:4256   */\n      dup7\n        /* \"#utility.yul\":4243:4265   */\n      add\n        /* \"#utility.yul\":4222:4275   */\n      tag_399\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":4212:4275   */\n      swap2\n      pop\n        /* \"#utility.yul\":4167:4285   */\n      pop\n        /* \"#utility.yul\":3818:4292   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4298:4407   */\n    tag_405:\n        /* \"#utility.yul\":4379:4400   */\n      tag_489\n        /* \"#utility.yul\":4394:4399   */\n      dup2\n        /* \"#utility.yul\":4379:4400   */\n      tag_395\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":4374:4377   */\n      dup3\n        /* \"#utility.yul\":4367:4401   */\n      mstore\n        /* \"#utility.yul\":4298:4407   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4413:4623   */\n    tag_112:\n        /* \"#utility.yul\":4500:4504   */\n      0x00\n        /* \"#utility.yul\":4538:4540   */\n      0x20\n        /* \"#utility.yul\":4527:4536   */\n      dup3\n        /* \"#utility.yul\":4523:4541   */\n      add\n        /* \"#utility.yul\":4515:4541   */\n      swap1\n      pop\n        /* \"#utility.yul\":4551:4616   */\n      tag_491\n        /* \"#utility.yul\":4613:4614   */\n      0x00\n        /* \"#utility.yul\":4602:4611   */\n      dup4\n        /* \"#utility.yul\":4598:4615   */\n      add\n        /* \"#utility.yul\":4589:4595   */\n      dup5\n        /* \"#utility.yul\":4551:4616   */\n      tag_405\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":4413:4623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4629:4747   */\n    tag_406:\n        /* \"#utility.yul\":4716:4740   */\n      tag_493\n        /* \"#utility.yul\":4734:4739   */\n      dup2\n        /* \"#utility.yul\":4716:4740   */\n      tag_390\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":4711:4714   */\n      dup3\n        /* \"#utility.yul\":4704:4741   */\n      mstore\n        /* \"#utility.yul\":4629:4747   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4753:4975   */\n    tag_151:\n        /* \"#utility.yul\":4846:4850   */\n      0x00\n        /* \"#utility.yul\":4884:4886   */\n      0x20\n        /* \"#utility.yul\":4873:4882   */\n      dup3\n        /* \"#utility.yul\":4869:4887   */\n      add\n        /* \"#utility.yul\":4861:4887   */\n      swap1\n      pop\n        /* \"#utility.yul\":4897:4968   */\n      tag_495\n        /* \"#utility.yul\":4965:4966   */\n      0x00\n        /* \"#utility.yul\":4954:4963   */\n      dup4\n        /* \"#utility.yul\":4950:4967   */\n      add\n        /* \"#utility.yul\":4941:4947   */\n      dup5\n        /* \"#utility.yul\":4897:4968   */\n      tag_406\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":4753:4975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4981:5455   */\n    tag_203:\n        /* \"#utility.yul\":5049:5055   */\n      0x00\n        /* \"#utility.yul\":5057:5063   */\n      0x00\n        /* \"#utility.yul\":5106:5108   */\n      0x40\n        /* \"#utility.yul\":5094:5103   */\n      dup4\n        /* \"#utility.yul\":5085:5092   */\n      dup6\n        /* \"#utility.yul\":5081:5104   */\n      sub\n        /* \"#utility.yul\":5077:5109   */\n      slt\n        /* \"#utility.yul\":5074:5193   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":5112:5191   */\n      tag_498\n      tag_387\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":5074:5193   */\n    tag_497:\n        /* \"#utility.yul\":5232:5233   */\n      0x00\n        /* \"#utility.yul\":5257:5310   */\n      tag_499\n        /* \"#utility.yul\":5302:5309   */\n      dup6\n        /* \"#utility.yul\":5293:5299   */\n      dup3\n        /* \"#utility.yul\":5282:5291   */\n      dup7\n        /* \"#utility.yul\":5278:5300   */\n      add\n        /* \"#utility.yul\":5257:5310   */\n      tag_399\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":5247:5310   */\n      swap3\n      pop\n        /* \"#utility.yul\":5203:5320   */\n      pop\n        /* \"#utility.yul\":5359:5361   */\n      0x20\n        /* \"#utility.yul\":5385:5438   */\n      tag_500\n        /* \"#utility.yul\":5430:5437   */\n      dup6\n        /* \"#utility.yul\":5421:5427   */\n      dup3\n        /* \"#utility.yul\":5410:5419   */\n      dup7\n        /* \"#utility.yul\":5406:5428   */\n      add\n        /* \"#utility.yul\":5385:5438   */\n      tag_399\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":5375:5438   */\n      swap2\n      pop\n        /* \"#utility.yul\":5330:5448   */\n      pop\n        /* \"#utility.yul\":4981:5455   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5461:5630   */\n    tag_407:\n        /* \"#utility.yul\":5545:5556   */\n      0x00\n        /* \"#utility.yul\":5579:5585   */\n      dup3\n        /* \"#utility.yul\":5574:5577   */\n      dup3\n        /* \"#utility.yul\":5567:5586   */\n      mstore\n        /* \"#utility.yul\":5619:5623   */\n      0x20\n        /* \"#utility.yul\":5614:5617   */\n      dup3\n        /* \"#utility.yul\":5610:5624   */\n      add\n        /* \"#utility.yul\":5595:5624   */\n      swap1\n      pop\n        /* \"#utility.yul\":5461:5630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5636:5797   */\n    tag_408:\n        /* \"#utility.yul\":5776:5789   */\n      0x496e76616c696420626f78000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5772:5773   */\n      0x00\n        /* \"#utility.yul\":5764:5770   */\n      dup3\n        /* \"#utility.yul\":5760:5774   */\n      add\n        /* \"#utility.yul\":5753:5790   */\n      mstore\n        /* \"#utility.yul\":5636:5797   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5803:6169   */\n    tag_409:\n        /* \"#utility.yul\":5945:5948   */\n      0x00\n        /* \"#utility.yul\":5966:6033   */\n      tag_504\n        /* \"#utility.yul\":6030:6032   */\n      0x0b\n        /* \"#utility.yul\":6025:6028   */\n      dup4\n        /* \"#utility.yul\":5966:6033   */\n      tag_407\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":5959:6033   */\n      swap2\n      pop\n        /* \"#utility.yul\":6042:6135   */\n      tag_505\n        /* \"#utility.yul\":6131:6134   */\n      dup3\n        /* \"#utility.yul\":6042:6135   */\n      tag_408\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":6160:6162   */\n      0x20\n        /* \"#utility.yul\":6155:6158   */\n      dup3\n        /* \"#utility.yul\":6151:6163   */\n      add\n        /* \"#utility.yul\":6144:6163   */\n      swap1\n      pop\n        /* \"#utility.yul\":5803:6169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6175:6594   */\n    tag_216:\n        /* \"#utility.yul\":6341:6345   */\n      0x00\n        /* \"#utility.yul\":6379:6381   */\n      0x20\n        /* \"#utility.yul\":6368:6377   */\n      dup3\n        /* \"#utility.yul\":6364:6382   */\n      add\n        /* \"#utility.yul\":6356:6382   */\n      swap1\n      pop\n        /* \"#utility.yul\":6428:6437   */\n      dup2\n        /* \"#utility.yul\":6422:6426   */\n      dup2\n        /* \"#utility.yul\":6418:6438   */\n      sub\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6403:6412   */\n      dup4\n        /* \"#utility.yul\":6399:6416   */\n      add\n        /* \"#utility.yul\":6392:6439   */\n      mstore\n        /* \"#utility.yul\":6456:6587   */\n      tag_507\n        /* \"#utility.yul\":6582:6586   */\n      dup2\n        /* \"#utility.yul\":6456:6587   */\n      tag_409\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":6448:6587   */\n      swap1\n      pop\n        /* \"#utility.yul\":6175:6594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6600:6758   */\n    tag_410:\n        /* \"#utility.yul\":6740:6750   */\n      0x4e6f207374616b65000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6736:6737   */\n      0x00\n        /* \"#utility.yul\":6728:6734   */\n      dup3\n        /* \"#utility.yul\":6724:6738   */\n      add\n        /* \"#utility.yul\":6717:6751   */\n      mstore\n        /* \"#utility.yul\":6600:6758   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6764:7129   */\n    tag_411:\n        /* \"#utility.yul\":6906:6909   */\n      0x00\n        /* \"#utility.yul\":6927:6993   */\n      tag_510\n        /* \"#utility.yul\":6991:6992   */\n      0x08\n        /* \"#utility.yul\":6986:6989   */\n      dup4\n        /* \"#utility.yul\":6927:6993   */\n      tag_407\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":6920:6993   */\n      swap2\n      pop\n        /* \"#utility.yul\":7002:7095   */\n      tag_511\n        /* \"#utility.yul\":7091:7094   */\n      dup3\n        /* \"#utility.yul\":7002:7095   */\n      tag_410\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":7120:7122   */\n      0x20\n        /* \"#utility.yul\":7115:7118   */\n      dup3\n        /* \"#utility.yul\":7111:7123   */\n      add\n        /* \"#utility.yul\":7104:7123   */\n      swap1\n      pop\n        /* \"#utility.yul\":6764:7129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7135:7554   */\n    tag_220:\n        /* \"#utility.yul\":7301:7305   */\n      0x00\n        /* \"#utility.yul\":7339:7341   */\n      0x20\n        /* \"#utility.yul\":7328:7337   */\n      dup3\n        /* \"#utility.yul\":7324:7342   */\n      add\n        /* \"#utility.yul\":7316:7342   */\n      swap1\n      pop\n        /* \"#utility.yul\":7388:7397   */\n      dup2\n        /* \"#utility.yul\":7382:7386   */\n      dup2\n        /* \"#utility.yul\":7378:7398   */\n      sub\n        /* \"#utility.yul\":7374:7375   */\n      0x00\n        /* \"#utility.yul\":7363:7372   */\n      dup4\n        /* \"#utility.yul\":7359:7376   */\n      add\n        /* \"#utility.yul\":7352:7399   */\n      mstore\n        /* \"#utility.yul\":7416:7547   */\n      tag_513\n        /* \"#utility.yul\":7542:7546   */\n      dup2\n        /* \"#utility.yul\":7416:7547   */\n      tag_411\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":7408:7547   */\n      swap1\n      pop\n        /* \"#utility.yul\":7135:7554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7560:7740   */\n    tag_412:\n        /* \"#utility.yul\":7608:7685   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7605:7606   */\n      0x00\n        /* \"#utility.yul\":7598:7686   */\n      mstore\n        /* \"#utility.yul\":7705:7709   */\n      0x11\n        /* \"#utility.yul\":7702:7703   */\n      0x04\n        /* \"#utility.yul\":7695:7710   */\n      mstore\n        /* \"#utility.yul\":7729:7733   */\n      0x24\n        /* \"#utility.yul\":7726:7727   */\n      0x00\n        /* \"#utility.yul\":7719:7734   */\n      revert\n        /* \"#utility.yul\":7746:7937   */\n    tag_223:\n        /* \"#utility.yul\":7786:7789   */\n      0x00\n        /* \"#utility.yul\":7805:7825   */\n      tag_516\n        /* \"#utility.yul\":7823:7824   */\n      dup3\n        /* \"#utility.yul\":7805:7825   */\n      tag_393\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":7800:7825   */\n      swap2\n      pop\n        /* \"#utility.yul\":7839:7859   */\n      tag_517\n        /* \"#utility.yul\":7857:7858   */\n      dup4\n        /* \"#utility.yul\":7839:7859   */\n      tag_393\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":7834:7859   */\n      swap3\n      pop\n        /* \"#utility.yul\":7882:7883   */\n      dup3\n        /* \"#utility.yul\":7879:7880   */\n      dup3\n        /* \"#utility.yul\":7875:7884   */\n      add\n        /* \"#utility.yul\":7868:7884   */\n      swap1\n      pop\n        /* \"#utility.yul\":7903:7906   */\n      dup1\n        /* \"#utility.yul\":7900:7901   */\n      dup3\n        /* \"#utility.yul\":7897:7907   */\n      gt\n        /* \"#utility.yul\":7894:7930   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":7910:7928   */\n      tag_519\n      tag_412\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":7894:7930   */\n    tag_518:\n        /* \"#utility.yul\":7746:7937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7943:8105   */\n    tag_413:\n        /* \"#utility.yul\":8083:8097   */\n      0x4e6f7420756e6c6f636b65640000000000000000000000000000000000000000\n        /* \"#utility.yul\":8079:8080   */\n      0x00\n        /* \"#utility.yul\":8071:8077   */\n      dup3\n        /* \"#utility.yul\":8067:8081   */\n      add\n        /* \"#utility.yul\":8060:8098   */\n      mstore\n        /* \"#utility.yul\":7943:8105   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8111:8477   */\n    tag_414:\n        /* \"#utility.yul\":8253:8256   */\n      0x00\n        /* \"#utility.yul\":8274:8341   */\n      tag_522\n        /* \"#utility.yul\":8338:8340   */\n      0x0c\n        /* \"#utility.yul\":8333:8336   */\n      dup4\n        /* \"#utility.yul\":8274:8341   */\n      tag_407\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":8267:8341   */\n      swap2\n      pop\n        /* \"#utility.yul\":8350:8443   */\n      tag_523\n        /* \"#utility.yul\":8439:8442   */\n      dup3\n        /* \"#utility.yul\":8350:8443   */\n      tag_413\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":8468:8470   */\n      0x20\n        /* \"#utility.yul\":8463:8466   */\n      dup3\n        /* \"#utility.yul\":8459:8471   */\n      add\n        /* \"#utility.yul\":8452:8471   */\n      swap1\n      pop\n        /* \"#utility.yul\":8111:8477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8483:8902   */\n    tag_226:\n        /* \"#utility.yul\":8649:8653   */\n      0x00\n        /* \"#utility.yul\":8687:8689   */\n      0x20\n        /* \"#utility.yul\":8676:8685   */\n      dup3\n        /* \"#utility.yul\":8672:8690   */\n      add\n        /* \"#utility.yul\":8664:8690   */\n      swap1\n      pop\n        /* \"#utility.yul\":8736:8745   */\n      dup2\n        /* \"#utility.yul\":8730:8734   */\n      dup2\n        /* \"#utility.yul\":8726:8746   */\n      sub\n        /* \"#utility.yul\":8722:8723   */\n      0x00\n        /* \"#utility.yul\":8711:8720   */\n      dup4\n        /* \"#utility.yul\":8707:8724   */\n      add\n        /* \"#utility.yul\":8700:8747   */\n      mstore\n        /* \"#utility.yul\":8764:8895   */\n      tag_525\n        /* \"#utility.yul\":8890:8894   */\n      dup2\n        /* \"#utility.yul\":8764:8895   */\n      tag_414\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":8756:8895   */\n      swap1\n      pop\n        /* \"#utility.yul\":8483:8902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8908:9088   */\n    tag_415:\n        /* \"#utility.yul\":8956:9033   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8953:8954   */\n      0x00\n        /* \"#utility.yul\":8946:9034   */\n      mstore\n        /* \"#utility.yul\":9053:9057   */\n      0x12\n        /* \"#utility.yul\":9050:9051   */\n      0x04\n        /* \"#utility.yul\":9043:9058   */\n      mstore\n        /* \"#utility.yul\":9077:9081   */\n      0x24\n        /* \"#utility.yul\":9074:9075   */\n      0x00\n        /* \"#utility.yul\":9067:9082   */\n      revert\n        /* \"#utility.yul\":9094:9279   */\n    tag_228:\n        /* \"#utility.yul\":9134:9135   */\n      0x00\n        /* \"#utility.yul\":9151:9171   */\n      tag_528\n        /* \"#utility.yul\":9169:9170   */\n      dup3\n        /* \"#utility.yul\":9151:9171   */\n      tag_393\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":9146:9171   */\n      swap2\n      pop\n        /* \"#utility.yul\":9185:9205   */\n      tag_529\n        /* \"#utility.yul\":9203:9204   */\n      dup4\n        /* \"#utility.yul\":9185:9205   */\n      tag_393\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":9180:9205   */\n      swap3\n      pop\n        /* \"#utility.yul\":9224:9225   */\n      dup3\n        /* \"#utility.yul\":9214:9249   */\n      tag_530\n      jumpi\n        /* \"#utility.yul\":9229:9247   */\n      tag_531\n      tag_415\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":9214:9249   */\n    tag_530:\n        /* \"#utility.yul\":9271:9272   */\n      dup3\n        /* \"#utility.yul\":9268:9269   */\n      dup3\n        /* \"#utility.yul\":9264:9273   */\n      div\n        /* \"#utility.yul\":9259:9273   */\n      swap1\n      pop\n        /* \"#utility.yul\":9094:9279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9285:9479   */\n    tag_257:\n        /* \"#utility.yul\":9325:9329   */\n      0x00\n        /* \"#utility.yul\":9345:9365   */\n      tag_533\n        /* \"#utility.yul\":9363:9364   */\n      dup3\n        /* \"#utility.yul\":9345:9365   */\n      tag_393\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":9340:9365   */\n      swap2\n      pop\n        /* \"#utility.yul\":9379:9399   */\n      tag_534\n        /* \"#utility.yul\":9397:9398   */\n      dup4\n        /* \"#utility.yul\":9379:9399   */\n      tag_393\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":9374:9399   */\n      swap3\n      pop\n        /* \"#utility.yul\":9423:9424   */\n      dup3\n        /* \"#utility.yul\":9420:9421   */\n      dup3\n        /* \"#utility.yul\":9416:9425   */\n      sub\n        /* \"#utility.yul\":9408:9425   */\n      swap1\n      pop\n        /* \"#utility.yul\":9447:9448   */\n      dup2\n        /* \"#utility.yul\":9441:9445   */\n      dup2\n        /* \"#utility.yul\":9438:9449   */\n      gt\n        /* \"#utility.yul\":9435:9472   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":9452:9470   */\n      tag_536\n      tag_412\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":9435:9472   */\n    tag_535:\n        /* \"#utility.yul\":9285:9479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9485:9649   */\n    tag_416:\n        /* \"#utility.yul\":9625:9641   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":9621:9622   */\n      0x00\n        /* \"#utility.yul\":9613:9619   */\n      dup3\n        /* \"#utility.yul\":9609:9623   */\n      add\n        /* \"#utility.yul\":9602:9642   */\n      mstore\n        /* \"#utility.yul\":9485:9649   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9655:10021   */\n    tag_417:\n        /* \"#utility.yul\":9797:9800   */\n      0x00\n        /* \"#utility.yul\":9818:9885   */\n      tag_539\n        /* \"#utility.yul\":9882:9884   */\n      0x0e\n        /* \"#utility.yul\":9877:9880   */\n      dup4\n        /* \"#utility.yul\":9818:9885   */\n      tag_407\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":9811:9885   */\n      swap2\n      pop\n        /* \"#utility.yul\":9894:9987   */\n      tag_540\n        /* \"#utility.yul\":9983:9986   */\n      dup3\n        /* \"#utility.yul\":9894:9987   */\n      tag_416\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":10012:10014   */\n      0x20\n        /* \"#utility.yul\":10007:10010   */\n      dup3\n        /* \"#utility.yul\":10003:10015   */\n      add\n        /* \"#utility.yul\":9996:10015   */\n      swap1\n      pop\n        /* \"#utility.yul\":9655:10021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10027:10446   */\n    tag_324:\n        /* \"#utility.yul\":10193:10197   */\n      0x00\n        /* \"#utility.yul\":10231:10233   */\n      0x20\n        /* \"#utility.yul\":10220:10229   */\n      dup3\n        /* \"#utility.yul\":10216:10234   */\n      add\n        /* \"#utility.yul\":10208:10234   */\n      swap1\n      pop\n        /* \"#utility.yul\":10280:10289   */\n      dup2\n        /* \"#utility.yul\":10274:10278   */\n      dup2\n        /* \"#utility.yul\":10270:10290   */\n      sub\n        /* \"#utility.yul\":10266:10267   */\n      0x00\n        /* \"#utility.yul\":10255:10264   */\n      dup4\n        /* \"#utility.yul\":10251:10268   */\n      add\n        /* \"#utility.yul\":10244:10291   */\n      mstore\n        /* \"#utility.yul\":10308:10439   */\n      tag_542\n        /* \"#utility.yul\":10434:10438   */\n      dup2\n        /* \"#utility.yul\":10308:10439   */\n      tag_417\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":10300:10439   */\n      swap1\n      pop\n        /* \"#utility.yul\":10027:10446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10452:10620   */\n    tag_418:\n        /* \"#utility.yul\":10592:10612   */\n      0x556e6c6f636b206d6f6465206163746976650000000000000000000000000000\n        /* \"#utility.yul\":10588:10589   */\n      0x00\n        /* \"#utility.yul\":10580:10586   */\n      dup3\n        /* \"#utility.yul\":10576:10590   */\n      add\n        /* \"#utility.yul\":10569:10613   */\n      mstore\n        /* \"#utility.yul\":10452:10620   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10626:10992   */\n    tag_419:\n        /* \"#utility.yul\":10768:10771   */\n      0x00\n        /* \"#utility.yul\":10789:10856   */\n      tag_545\n        /* \"#utility.yul\":10853:10855   */\n      0x12\n        /* \"#utility.yul\":10848:10851   */\n      dup4\n        /* \"#utility.yul\":10789:10856   */\n      tag_407\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":10782:10856   */\n      swap2\n      pop\n        /* \"#utility.yul\":10865:10958   */\n      tag_546\n        /* \"#utility.yul\":10954:10957   */\n      dup3\n        /* \"#utility.yul\":10865:10958   */\n      tag_418\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":10983:10985   */\n      0x20\n        /* \"#utility.yul\":10978:10981   */\n      dup3\n        /* \"#utility.yul\":10974:10986   */\n      add\n        /* \"#utility.yul\":10967:10986   */\n      swap1\n      pop\n        /* \"#utility.yul\":10626:10992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10998:11417   */\n    tag_327:\n        /* \"#utility.yul\":11164:11168   */\n      0x00\n        /* \"#utility.yul\":11202:11204   */\n      0x20\n        /* \"#utility.yul\":11191:11200   */\n      dup3\n        /* \"#utility.yul\":11187:11205   */\n      add\n        /* \"#utility.yul\":11179:11205   */\n      swap1\n      pop\n        /* \"#utility.yul\":11251:11260   */\n      dup2\n        /* \"#utility.yul\":11245:11249   */\n      dup2\n        /* \"#utility.yul\":11241:11261   */\n      sub\n        /* \"#utility.yul\":11237:11238   */\n      0x00\n        /* \"#utility.yul\":11226:11235   */\n      dup4\n        /* \"#utility.yul\":11222:11239   */\n      add\n        /* \"#utility.yul\":11215:11262   */\n      mstore\n        /* \"#utility.yul\":11279:11410   */\n      tag_548\n        /* \"#utility.yul\":11405:11409   */\n      dup2\n        /* \"#utility.yul\":11279:11410   */\n      tag_419\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":11271:11410   */\n      swap1\n      pop\n        /* \"#utility.yul\":10998:11417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11423:11586   */\n    tag_420:\n        /* \"#utility.yul\":11563:11578   */\n      0x5374616b696e6720656e64656400000000000000000000000000000000000000\n        /* \"#utility.yul\":11559:11560   */\n      0x00\n        /* \"#utility.yul\":11551:11557   */\n      dup3\n        /* \"#utility.yul\":11547:11561   */\n      add\n        /* \"#utility.yul\":11540:11579   */\n      mstore\n        /* \"#utility.yul\":11423:11586   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11592:11958   */\n    tag_421:\n        /* \"#utility.yul\":11734:11737   */\n      0x00\n        /* \"#utility.yul\":11755:11822   */\n      tag_551\n        /* \"#utility.yul\":11819:11821   */\n      0x0d\n        /* \"#utility.yul\":11814:11817   */\n      dup4\n        /* \"#utility.yul\":11755:11822   */\n      tag_407\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":11748:11822   */\n      swap2\n      pop\n        /* \"#utility.yul\":11831:11924   */\n      tag_552\n        /* \"#utility.yul\":11920:11923   */\n      dup3\n        /* \"#utility.yul\":11831:11924   */\n      tag_420\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":11949:11951   */\n      0x20\n        /* \"#utility.yul\":11944:11947   */\n      dup3\n        /* \"#utility.yul\":11940:11952   */\n      add\n        /* \"#utility.yul\":11933:11952   */\n      swap1\n      pop\n        /* \"#utility.yul\":11592:11958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11964:12383   */\n    tag_330:\n        /* \"#utility.yul\":12130:12134   */\n      0x00\n        /* \"#utility.yul\":12168:12170   */\n      0x20\n        /* \"#utility.yul\":12157:12166   */\n      dup3\n        /* \"#utility.yul\":12153:12171   */\n      add\n        /* \"#utility.yul\":12145:12171   */\n      swap1\n      pop\n        /* \"#utility.yul\":12217:12226   */\n      dup2\n        /* \"#utility.yul\":12211:12215   */\n      dup2\n        /* \"#utility.yul\":12207:12227   */\n      sub\n        /* \"#utility.yul\":12203:12204   */\n      0x00\n        /* \"#utility.yul\":12192:12201   */\n      dup4\n        /* \"#utility.yul\":12188:12205   */\n      add\n        /* \"#utility.yul\":12181:12228   */\n      mstore\n        /* \"#utility.yul\":12245:12376   */\n      tag_554\n        /* \"#utility.yul\":12371:12375   */\n      dup2\n        /* \"#utility.yul\":12245:12376   */\n      tag_421\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":12237:12376   */\n      swap1\n      pop\n        /* \"#utility.yul\":11964:12383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12389:12571   */\n    tag_422:\n        /* \"#utility.yul\":12529:12563   */\n      0x426f7820312064697361626c6564206f7220616c7265616479207374616b6564\n        /* \"#utility.yul\":12525:12526   */\n      0x00\n        /* \"#utility.yul\":12517:12523   */\n      dup3\n        /* \"#utility.yul\":12513:12527   */\n      add\n        /* \"#utility.yul\":12506:12564   */\n      mstore\n        /* \"#utility.yul\":12389:12571   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12577:12943   */\n    tag_423:\n        /* \"#utility.yul\":12719:12722   */\n      0x00\n        /* \"#utility.yul\":12740:12807   */\n      tag_557\n        /* \"#utility.yul\":12804:12806   */\n      0x20\n        /* \"#utility.yul\":12799:12802   */\n      dup4\n        /* \"#utility.yul\":12740:12807   */\n      tag_407\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":12733:12807   */\n      swap2\n      pop\n        /* \"#utility.yul\":12816:12909   */\n      tag_558\n        /* \"#utility.yul\":12905:12908   */\n      dup3\n        /* \"#utility.yul\":12816:12909   */\n      tag_422\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":12934:12936   */\n      0x20\n        /* \"#utility.yul\":12929:12932   */\n      dup3\n        /* \"#utility.yul\":12925:12937   */\n      add\n        /* \"#utility.yul\":12918:12937   */\n      swap1\n      pop\n        /* \"#utility.yul\":12577:12943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12949:13368   */\n    tag_335:\n        /* \"#utility.yul\":13115:13119   */\n      0x00\n        /* \"#utility.yul\":13153:13155   */\n      0x20\n        /* \"#utility.yul\":13142:13151   */\n      dup3\n        /* \"#utility.yul\":13138:13156   */\n      add\n        /* \"#utility.yul\":13130:13156   */\n      swap1\n      pop\n        /* \"#utility.yul\":13202:13211   */\n      dup2\n        /* \"#utility.yul\":13196:13200   */\n      dup2\n        /* \"#utility.yul\":13192:13212   */\n      sub\n        /* \"#utility.yul\":13188:13189   */\n      0x00\n        /* \"#utility.yul\":13177:13186   */\n      dup4\n        /* \"#utility.yul\":13173:13190   */\n      add\n        /* \"#utility.yul\":13166:13213   */\n      mstore\n        /* \"#utility.yul\":13230:13361   */\n      tag_560\n        /* \"#utility.yul\":13356:13360   */\n      dup2\n        /* \"#utility.yul\":13230:13361   */\n      tag_423\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":13222:13361   */\n      swap1\n      pop\n        /* \"#utility.yul\":12949:13368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13374:13556   */\n    tag_424:\n        /* \"#utility.yul\":13514:13548   */\n      0x426f7820322064697361626c6564206f7220616c7265616479207374616b6564\n        /* \"#utility.yul\":13510:13511   */\n      0x00\n        /* \"#utility.yul\":13502:13508   */\n      dup3\n        /* \"#utility.yul\":13498:13512   */\n      add\n        /* \"#utility.yul\":13491:13549   */\n      mstore\n        /* \"#utility.yul\":13374:13556   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13562:13928   */\n    tag_425:\n        /* \"#utility.yul\":13704:13707   */\n      0x00\n        /* \"#utility.yul\":13725:13792   */\n      tag_563\n        /* \"#utility.yul\":13789:13791   */\n      0x20\n        /* \"#utility.yul\":13784:13787   */\n      dup4\n        /* \"#utility.yul\":13725:13792   */\n      tag_407\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":13718:13792   */\n      swap2\n      pop\n        /* \"#utility.yul\":13801:13894   */\n      tag_564\n        /* \"#utility.yul\":13890:13893   */\n      dup3\n        /* \"#utility.yul\":13801:13894   */\n      tag_424\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":13919:13921   */\n      0x20\n        /* \"#utility.yul\":13914:13917   */\n      dup3\n        /* \"#utility.yul\":13910:13922   */\n      add\n        /* \"#utility.yul\":13903:13922   */\n      swap1\n      pop\n        /* \"#utility.yul\":13562:13928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13934:14353   */\n    tag_342:\n        /* \"#utility.yul\":14100:14104   */\n      0x00\n        /* \"#utility.yul\":14138:14140   */\n      0x20\n        /* \"#utility.yul\":14127:14136   */\n      dup3\n        /* \"#utility.yul\":14123:14141   */\n      add\n        /* \"#utility.yul\":14115:14141   */\n      swap1\n      pop\n        /* \"#utility.yul\":14187:14196   */\n      dup2\n        /* \"#utility.yul\":14181:14185   */\n      dup2\n        /* \"#utility.yul\":14177:14197   */\n      sub\n        /* \"#utility.yul\":14173:14174   */\n      0x00\n        /* \"#utility.yul\":14162:14171   */\n      dup4\n        /* \"#utility.yul\":14158:14175   */\n      add\n        /* \"#utility.yul\":14151:14198   */\n      mstore\n        /* \"#utility.yul\":14215:14346   */\n      tag_566\n        /* \"#utility.yul\":14341:14345   */\n      dup2\n        /* \"#utility.yul\":14215:14346   */\n      tag_425\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":14207:14346   */\n      swap1\n      pop\n        /* \"#utility.yul\":13934:14353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14359:14541   */\n    tag_426:\n        /* \"#utility.yul\":14499:14533   */\n      0x426f7820332064697361626c6564206f7220616c7265616479207374616b6564\n        /* \"#utility.yul\":14495:14496   */\n      0x00\n        /* \"#utility.yul\":14487:14493   */\n      dup3\n        /* \"#utility.yul\":14483:14497   */\n      add\n        /* \"#utility.yul\":14476:14534   */\n      mstore\n        /* \"#utility.yul\":14359:14541   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14547:14913   */\n    tag_427:\n        /* \"#utility.yul\":14689:14692   */\n      0x00\n        /* \"#utility.yul\":14710:14777   */\n      tag_569\n        /* \"#utility.yul\":14774:14776   */\n      0x20\n        /* \"#utility.yul\":14769:14772   */\n      dup4\n        /* \"#utility.yul\":14710:14777   */\n      tag_407\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":14703:14777   */\n      swap2\n      pop\n        /* \"#utility.yul\":14786:14879   */\n      tag_570\n        /* \"#utility.yul\":14875:14878   */\n      dup3\n        /* \"#utility.yul\":14786:14879   */\n      tag_426\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":14904:14906   */\n      0x20\n        /* \"#utility.yul\":14899:14902   */\n      dup3\n        /* \"#utility.yul\":14895:14907   */\n      add\n        /* \"#utility.yul\":14888:14907   */\n      swap1\n      pop\n        /* \"#utility.yul\":14547:14913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14919:15338   */\n    tag_349:\n        /* \"#utility.yul\":15085:15089   */\n      0x00\n        /* \"#utility.yul\":15123:15125   */\n      0x20\n        /* \"#utility.yul\":15112:15121   */\n      dup3\n        /* \"#utility.yul\":15108:15126   */\n      add\n        /* \"#utility.yul\":15100:15126   */\n      swap1\n      pop\n        /* \"#utility.yul\":15172:15181   */\n      dup2\n        /* \"#utility.yul\":15166:15170   */\n      dup2\n        /* \"#utility.yul\":15162:15182   */\n      sub\n        /* \"#utility.yul\":15158:15159   */\n      0x00\n        /* \"#utility.yul\":15147:15156   */\n      dup4\n        /* \"#utility.yul\":15143:15160   */\n      add\n        /* \"#utility.yul\":15136:15183   */\n      mstore\n        /* \"#utility.yul\":15200:15331   */\n      tag_572\n        /* \"#utility.yul\":15326:15330   */\n      dup2\n        /* \"#utility.yul\":15200:15331   */\n      tag_427\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":15192:15331   */\n      swap1\n      pop\n        /* \"#utility.yul\":14919:15338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15344:15526   */\n    tag_428:\n        /* \"#utility.yul\":15484:15518   */\n      0x426f7820342064697361626c6564206f7220616c7265616479207374616b6564\n        /* \"#utility.yul\":15480:15481   */\n      0x00\n        /* \"#utility.yul\":15472:15478   */\n      dup3\n        /* \"#utility.yul\":15468:15482   */\n      add\n        /* \"#utility.yul\":15461:15519   */\n      mstore\n        /* \"#utility.yul\":15344:15526   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15532:15898   */\n    tag_429:\n        /* \"#utility.yul\":15674:15677   */\n      0x00\n        /* \"#utility.yul\":15695:15762   */\n      tag_575\n        /* \"#utility.yul\":15759:15761   */\n      0x20\n        /* \"#utility.yul\":15754:15757   */\n      dup4\n        /* \"#utility.yul\":15695:15762   */\n      tag_407\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":15688:15762   */\n      swap2\n      pop\n        /* \"#utility.yul\":15771:15864   */\n      tag_576\n        /* \"#utility.yul\":15860:15863   */\n      dup3\n        /* \"#utility.yul\":15771:15864   */\n      tag_428\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":15889:15891   */\n      0x20\n        /* \"#utility.yul\":15884:15887   */\n      dup3\n        /* \"#utility.yul\":15880:15892   */\n      add\n        /* \"#utility.yul\":15873:15892   */\n      swap1\n      pop\n        /* \"#utility.yul\":15532:15898   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15904:16323   */\n    tag_356:\n        /* \"#utility.yul\":16070:16074   */\n      0x00\n        /* \"#utility.yul\":16108:16110   */\n      0x20\n        /* \"#utility.yul\":16097:16106   */\n      dup3\n        /* \"#utility.yul\":16093:16111   */\n      add\n        /* \"#utility.yul\":16085:16111   */\n      swap1\n      pop\n        /* \"#utility.yul\":16157:16166   */\n      dup2\n        /* \"#utility.yul\":16151:16155   */\n      dup2\n        /* \"#utility.yul\":16147:16167   */\n      sub\n        /* \"#utility.yul\":16143:16144   */\n      0x00\n        /* \"#utility.yul\":16132:16141   */\n      dup4\n        /* \"#utility.yul\":16128:16145   */\n      add\n        /* \"#utility.yul\":16121:16168   */\n      mstore\n        /* \"#utility.yul\":16185:16316   */\n      tag_578\n        /* \"#utility.yul\":16311:16315   */\n      dup2\n        /* \"#utility.yul\":16185:16316   */\n      tag_429\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":16177:16316   */\n      swap1\n      pop\n        /* \"#utility.yul\":15904:16323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16329:16661   */\n    tag_372:\n        /* \"#utility.yul\":16450:16454   */\n      0x00\n        /* \"#utility.yul\":16488:16490   */\n      0x40\n        /* \"#utility.yul\":16477:16486   */\n      dup3\n        /* \"#utility.yul\":16473:16491   */\n      add\n        /* \"#utility.yul\":16465:16491   */\n      swap1\n      pop\n        /* \"#utility.yul\":16501:16572   */\n      tag_580\n        /* \"#utility.yul\":16569:16570   */\n      0x00\n        /* \"#utility.yul\":16558:16567   */\n      dup4\n        /* \"#utility.yul\":16554:16571   */\n      add\n        /* \"#utility.yul\":16545:16551   */\n      dup6\n        /* \"#utility.yul\":16501:16572   */\n      tag_406\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":16582:16654   */\n      tag_581\n        /* \"#utility.yul\":16650:16652   */\n      0x20\n        /* \"#utility.yul\":16639:16648   */\n      dup4\n        /* \"#utility.yul\":16635:16653   */\n      add\n        /* \"#utility.yul\":16626:16632   */\n      dup5\n        /* \"#utility.yul\":16582:16654   */\n      tag_394\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":16329:16661   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16667:17109   */\n    tag_378:\n        /* \"#utility.yul\":16816:16820   */\n      0x00\n        /* \"#utility.yul\":16854:16856   */\n      0x60\n        /* \"#utility.yul\":16843:16852   */\n      dup3\n        /* \"#utility.yul\":16839:16857   */\n      add\n        /* \"#utility.yul\":16831:16857   */\n      swap1\n      pop\n        /* \"#utility.yul\":16867:16938   */\n      tag_583\n        /* \"#utility.yul\":16935:16936   */\n      0x00\n        /* \"#utility.yul\":16924:16933   */\n      dup4\n        /* \"#utility.yul\":16920:16937   */\n      add\n        /* \"#utility.yul\":16911:16917   */\n      dup7\n        /* \"#utility.yul\":16867:16938   */\n      tag_406\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":16948:17020   */\n      tag_584\n        /* \"#utility.yul\":17016:17018   */\n      0x20\n        /* \"#utility.yul\":17005:17014   */\n      dup4\n        /* \"#utility.yul\":17001:17019   */\n      add\n        /* \"#utility.yul\":16992:16998   */\n      dup6\n        /* \"#utility.yul\":16948:17020   */\n      tag_406\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":17030:17102   */\n      tag_585\n        /* \"#utility.yul\":17098:17100   */\n      0x40\n        /* \"#utility.yul\":17087:17096   */\n      dup4\n        /* \"#utility.yul\":17083:17101   */\n      add\n        /* \"#utility.yul\":17074:17080   */\n      dup5\n        /* \"#utility.yul\":17030:17102   */\n      tag_394\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":16667:17109   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122005d93b648ad3b0d7cad9c00587a635b46755b283a43b3e13239781ef7ad2f0fd64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1610": {
									"entryPoint": null,
									"id": 1610,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 617,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2707:12",
										"nodeType": "YulBlock",
										"src": "0:2707:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "759:80:12",
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nativeSrc": "769:22:12",
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nativeSrc": "778:13:12",
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nativeSrc": "800:33:12",
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nativeSrc": "800:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:12",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:12",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:12",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nativeSrc": "922:274:12",
													"nodeType": "YulBlock",
													"src": "922:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:12",
																"nodeType": "YulBlock",
																"src": "968:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:12"
																			},
																			"nativeSrc": "970:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:12"
																		},
																		"nativeSrc": "970:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:12"
																		},
																		"nativeSrc": "939:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:12",
																		"nodeType": "YulLiteral",
																		"src": "964:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:12"
																},
																"nativeSrc": "935:32:12",
																"nodeType": "YulFunctionCall",
																"src": "935:32:12"
															},
															"nativeSrc": "932:119:12",
															"nodeType": "YulIf",
															"src": "932:119:12"
														},
														{
															"nativeSrc": "1061:128:12",
															"nodeType": "YulBlock",
															"src": "1061:128:12",
															"statements": [
																{
																	"nativeSrc": "1076:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:12"
																				},
																				"nativeSrc": "1147:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:12"
																		},
																		"nativeSrc": "1115:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:12",
														"nodeType": "YulTypedName",
														"src": "892:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:12",
														"nodeType": "YulTypedName",
														"src": "903:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:12",
														"nodeType": "YulTypedName",
														"src": "915:6:12",
														"type": ""
													}
												],
												"src": "845:351:12"
											},
											{
												"body": {
													"nativeSrc": "1267:53:12",
													"nodeType": "YulBlock",
													"src": "1267:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:12"
																		},
																		"nativeSrc": "1289:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:12"
																},
																"nativeSrc": "1277:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:12"
															},
															"nativeSrc": "1277:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:12",
														"nodeType": "YulTypedName",
														"src": "1255:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:12",
														"nodeType": "YulTypedName",
														"src": "1262:3:12",
														"type": ""
													}
												],
												"src": "1202:118:12"
											},
											{
												"body": {
													"nativeSrc": "1424:124:12",
													"nodeType": "YulBlock",
													"src": "1424:124:12",
													"statements": [
														{
															"nativeSrc": "1434:26:12",
															"nodeType": "YulAssignment",
															"src": "1434:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:12"
																},
																"nativeSrc": "1442:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:12"
																		},
																		"nativeSrc": "1523:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:12"
																},
																"nativeSrc": "1470:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:12"
															},
															"nativeSrc": "1470:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:12",
														"nodeType": "YulTypedName",
														"src": "1396:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:12",
														"nodeType": "YulTypedName",
														"src": "1408:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:12",
														"nodeType": "YulTypedName",
														"src": "1419:4:12",
														"type": ""
													}
												],
												"src": "1326:222:12"
											},
											{
												"body": {
													"nativeSrc": "1650:73:12",
													"nodeType": "YulBlock",
													"src": "1650:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1667:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1667:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1672:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1660:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:12"
																},
																"nativeSrc": "1660:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1660:19:12"
															},
															"nativeSrc": "1660:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1660:19:12"
														},
														{
															"nativeSrc": "1688:29:12",
															"nodeType": "YulAssignment",
															"src": "1688:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1707:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1707:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1712:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1712:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1703:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:12"
																},
																"nativeSrc": "1703:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1703:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1688:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "1688:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1554:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1622:3:12",
														"nodeType": "YulTypedName",
														"src": "1622:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1627:6:12",
														"nodeType": "YulTypedName",
														"src": "1627:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1638:11:12",
														"nodeType": "YulTypedName",
														"src": "1638:11:12",
														"type": ""
													}
												],
												"src": "1554:169:12"
											},
											{
												"body": {
													"nativeSrc": "1835:72:12",
													"nodeType": "YulBlock",
													"src": "1835:72:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1857:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1865:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1865:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1853:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1853:3:12"
																		},
																		"nativeSrc": "1853:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1853:14:12"
																	},
																	{
																		"hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "1869:30:12",
																		"nodeType": "YulLiteral",
																		"src": "1869:30:12",
																		"type": "",
																		"value": "Token address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1846:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1846:6:12"
																},
																"nativeSrc": "1846:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1846:54:12"
															},
															"nativeSrc": "1846:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "1846:54:12"
														}
													]
												},
												"name": "store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
												"nativeSrc": "1729:178:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1827:6:12",
														"nodeType": "YulTypedName",
														"src": "1827:6:12",
														"type": ""
													}
												],
												"src": "1729:178:12"
											},
											{
												"body": {
													"nativeSrc": "2059:220:12",
													"nodeType": "YulBlock",
													"src": "2059:220:12",
													"statements": [
														{
															"nativeSrc": "2069:74:12",
															"nodeType": "YulAssignment",
															"src": "2069:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2135:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2135:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2140:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2140:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2076:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2076:58:12"
																},
																"nativeSrc": "2076:67:12",
																"nodeType": "YulFunctionCall",
																"src": "2076:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2069:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2069:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2241:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2241:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
																	"nativeSrc": "2152:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "2152:88:12"
																},
																"nativeSrc": "2152:93:12",
																"nodeType": "YulFunctionCall",
																"src": "2152:93:12"
															},
															"nativeSrc": "2152:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "2152:93:12"
														},
														{
															"nativeSrc": "2254:19:12",
															"nodeType": "YulAssignment",
															"src": "2254:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2265:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2265:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2270:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2270:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2261:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:12"
																},
																"nativeSrc": "2261:12:12",
																"nodeType": "YulFunctionCall",
																"src": "2261:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2254:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1913:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2047:3:12",
														"nodeType": "YulTypedName",
														"src": "2047:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2055:3:12",
														"nodeType": "YulTypedName",
														"src": "2055:3:12",
														"type": ""
													}
												],
												"src": "1913:366:12"
											},
											{
												"body": {
													"nativeSrc": "2456:248:12",
													"nodeType": "YulBlock",
													"src": "2456:248:12",
													"statements": [
														{
															"nativeSrc": "2466:26:12",
															"nodeType": "YulAssignment",
															"src": "2466:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2478:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2478:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2489:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2489:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2474:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2474:3:12"
																},
																"nativeSrc": "2474:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2474:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2466:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2466:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2513:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2513:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2524:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2509:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:12"
																		},
																		"nativeSrc": "2509:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2509:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2532:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2532:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2538:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2528:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2528:3:12"
																		},
																		"nativeSrc": "2528:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2528:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2502:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:12"
																},
																"nativeSrc": "2502:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2502:47:12"
															},
															"nativeSrc": "2502:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2502:47:12"
														},
														{
															"nativeSrc": "2558:139:12",
															"nodeType": "YulAssignment",
															"src": "2558:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2692:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2692:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2566:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "2566:124:12"
																},
																"nativeSrc": "2566:131:12",
																"nodeType": "YulFunctionCall",
																"src": "2566:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2558:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2558:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2285:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2436:9:12",
														"nodeType": "YulTypedName",
														"src": "2436:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2451:4:12",
														"nodeType": "YulTypedName",
														"src": "2451:4:12",
														"type": ""
													}
												],
												"src": "2285:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token address cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b50604051612e6d380380612e6d83398181016040528101906100319190610388565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906103c2565b60405180910390fd5b6100b18161026960201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610120576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011790610435565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505f6017819055505f6018819055505f6019819055506954b40b1f852bda0000006015819055506969e10de76676d0800000601a81905550662386f26fc100006016819055505f601b5f6101000a81548160ff02191690831515021790555061014d60038190555062093a80600481905550600160055f6101000a81548160ff0219169083151502179055506053600881905550621275006009819055506001600a5f6101000a81548160ff0219169083151502179055506020600d819055506224ea00600e819055506001600f5f6101000a81548160ff021916908315150217905550601a6012819055506224ea00601381905550600160145f6101000a81548160ff02191690831515021790555050610453565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103578261032e565b9050919050565b6103678161034d565b8114610371575f5ffd5b50565b5f815190506103828161035e565b92915050565b5f6020828403121561039d5761039c61032a565b5b5f6103aa84828501610374565b91505092915050565b6103bc8161034d565b82525050565b5f6020820190506103d55f8301846103b3565b92915050565b5f82825260208201905092915050565b7f546f6b656e20616464726573732063616e6e6f74206265207a65726f000000005f82015250565b5f61041f601c836103db565b915061042a826103eb565b602082019050919050565b5f6020820190508181035f83015261044c81610413565b9050919050565b6080516129e66104875f395f81816108a2015281816110b60152818161111e0152818161116e0152611e5f01526129e65ff3fe608060405234801561000f575f5ffd5b5060043610610272575f3560e01c80637b3e920c1161014f578063d0bcc009116100c1578063e7de2ceb11610085578063e7de2ceb1461078c578063ea1b28e0146107aa578063f1cddd55146107c8578063f2fde38b146107e4578063f908dc1314610800578063fd2b52021461081e57610272565b8063d0bcc009146106f8578063d19b090e14610716578063d47c56e514610734578063d5c41d6914610752578063d7d4918e1461076e57610272565b806394387289116101135780639438728914610636578063b39dc99614610652578063bba4fefd14610670578063bef7d12e1461068e578063c3630edb146106be578063cd5692ee146106dc57610272565b80637b3e920c1461057c578063817b1cd2146105ac57806389b0040a146105ca5780638a170ac1146105fa5780638da5cb5b1461061857610272565b80634b0c10d8116101e85780636cbde5cf116101ac5780636cbde5cf146104cc57806370a08231146104e8578063715018a61461051857806373dec718146105225780637908542514610540578063798cbe5e1461055e57610272565b80634b0c10d8146104145780634b5effc2146104325780634f51d090146104625780635cd5a159146104925780635f75bcea146104b057610272565b8063292a6b191161023a578063292a6b191461032c5780632e5f89ef1461034a57806335e630551461037a578063375b3c0a1461039657806338dc97fb146103b45780634893afc1146103e457610272565b8063058df0e8146102765780631d95985b146102a65780631d95d52f146102c457806323dcdb89146102e057806324ebd9d2146102fc575b5f5ffd5b610290600480360381019061028b91906121f3565b61083a565b60405161029d9190612236565b60405180910390f35b6102ae61084f565b6040516102bb9190612236565b60405180910390f35b6102de60048036038101906102d99190612284565b610855565b005b6102fa60048036038101906102f591906122d9565b610879565b005b610316600480360381019061031191906121f3565b61088b565b6040516103239190612236565b60405180910390f35b6103346108a0565b604051610341919061235f565b60405180910390f35b610364600480360381019061035f91906121f3565b6108c4565b6040516103719190612236565b60405180910390f35b610394600480360381019061038f91906122d9565b6108d9565b005b61039e6111ba565b6040516103ab9190612236565b60405180910390f35b6103ce60048036038101906103c991906121f3565b6111c0565b6040516103db9190612236565b60405180910390f35b6103fe60048036038101906103f991906121f3565b6111d5565b60405161040b9190612236565b60405180910390f35b61041c6111ea565b6040516104299190612236565b60405180910390f35b61044c60048036038101906104479190612378565b6111f0565b6040516104599190612236565b60405180910390f35b61047c600480360381019061047791906121f3565b61132f565b6040516104899190612236565b60405180910390f35b61049a611344565b6040516104a791906123c5565b60405180910390f35b6104ca60048036038101906104c59190612284565b611356565b005b6104e660048036038101906104e19190612284565b61137a565b005b61050260048036038101906104fd91906121f3565b61139e565b60405161050f9190612236565b60405180910390f35b6105206114bc565b005b61052a6114cf565b60405161053791906123c5565b60405180910390f35b6105486114e1565b6040516105559190612236565b60405180910390f35b6105666114e7565b6040516105739190612236565b60405180910390f35b610596600480360381019061059191906121f3565b6114ed565b6040516105a39190612236565b60405180910390f35b6105b4611502565b6040516105c19190612236565b60405180910390f35b6105e460048036038101906105df91906121f3565b611508565b6040516105f19190612236565b60405180910390f35b61060261151d565b60405161060f91906123c5565b60405180910390f35b61062061152f565b60405161062d91906123ed565b60405180910390f35b610650600480360381019061064b91906122d9565b611556565b005b61065a611568565b6040516106679190612236565b60405180910390f35b61067861156e565b6040516106859190612236565b60405180910390f35b6106a860048036038101906106a39190612378565b611574565b6040516106b59190612236565b60405180910390f35b6106c66116e7565b6040516106d39190612236565b60405180910390f35b6106f660048036038101906106f191906122d9565b6116ed565b005b6107006116ff565b60405161070d91906123c5565b60405180910390f35b61071e611711565b60405161072b9190612236565b60405180910390f35b61073c611717565b6040516107499190612236565b60405180910390f35b61076c60048036038101906107679190612284565b61171d565b005b610776611741565b6040516107839190612236565b60405180910390f35b610794611747565b6040516107a19190612236565b60405180910390f35b6107b261174d565b6040516107bf9190612236565b60405180910390f35b6107e260048036038101906107dd9190612284565b611753565b005b6107fe60048036038101906107f991906121f3565b611777565b005b6108086117fb565b60405161081591906123c5565b60405180910390f35b61083860048036038101906108339190612406565b61180d565b005b6006602052805f5260405f205f915090505481565b600e5481565b61085d611eaa565b8060145f6101000a81548160ff02191690831515021790555050565b610881611eaa565b8060168190555050565b6010602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600b602052805f5260405f205f915090505481565b600181101580156108eb575060048111155b61092a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109219061249e565b60405180910390fd5b5f3390505f5f60018403610af65760015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116109ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b190612506565b60405180910390fd5b601b5f9054906101000a900460ff1680610a1e575060045460025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a1a9190612551565b4210155b610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a54906125ce565b60405180910390fd5b60035481610a6b9190612619565b91505f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611047565b60028403610cbc5760065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610b80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7790612506565b60405180910390fd5b601b5f9054906101000a900460ff1680610be4575060095460075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610be09190612551565b4210155b610c23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1a906125ce565b60405180910390fd5b60085481610c319190612619565b91505f60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611046565b60038403610e8257600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610d46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3d90612506565b60405180910390fd5b601b5f9054906101000a900460ff1680610daa5750600e54600c5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610da69190612551565b4210155b610de9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de0906125ce565b60405180910390fd5b600d5481610df79190612619565b91505f600b5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f600c5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611045565b600484036110445760105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610f0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0390612506565b60405180910390fd5b601b5f9054906101000a900460ff1680610f70575060135460115f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f6c9190612551565b4210155b610faf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa6906125ce565b60405180910390fd5b60125481610fbd9190612619565b91505f60105f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60115f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5b5b5b8060195f8282546110589190612649565b92505081905550601b5f9054906101000a900460ff1661108757816018546110809190612551565b6018819055505b601b5f9054906101000a900460ff166110af57816017546110a89190612649565b6017819055505b6110fa83827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f319092919063ffffffff16565b601b5f9054906101000a900460ff166111b457600484036111675761116261dead837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f319092919063ffffffff16565b6111b3565b6111b283837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f319092919063ffffffff16565b5b5b50505050565b60165481565b6011602052805f5260405f205f915090505481565b6001602052805f5260405f205f915090505481565b60045481565b5f6001820361123e5760015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050611329565b6002820361128b5760065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050611329565b600382036112d857600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050611329565b600482036113255760105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050611329565b5f90505b92915050565b6002602052805f5260405f205f915090505481565b60145f9054906101000a900460ff1681565b61135e611eaa565b80600a5f6101000a81548160ff02191690831515021790555050565b611382611eaa565b8060055f6101000a81548160ff02191690831515021790555050565b5f60105f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546114a19190612551565b6114ab9190612551565b6114b59190612551565b9050919050565b6114c4611eaa565b6114cd5f611fb0565b565b600a5f9054906101000a900460ff1681565b60185481565b60135481565b6007602052805f5260405f205f915090505481565b60195481565b600c602052805f5260405f205f915090505481565b60055f9054906101000a900460ff1681565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61155e611eaa565b80601a8190555050565b600d5481565b60175481565b5f600182036115cf5760045460025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546115c89190612551565b90506116e1565b600282036116295760095460075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546116229190612551565b90506116e1565b6003820361168357600e54600c5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461167c9190612551565b90506116e1565b600482036116dd5760135460115f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546116d69190612551565b90506116e1565b5f90505b92915050565b60125481565b6116f5611eaa565b8060158190555050565b600f5f9054906101000a900460ff1681565b601a5481565b60095481565b611725611eaa565b80600f5f6101000a81548160ff02191690831515021790555050565b60085481565b60035481565b60155481565b61175b611eaa565b80601b5f6101000a81548160ff02191690831515021790555050565b61177f611eaa565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117ef575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016117e691906123ed565b60405180910390fd5b6117f881611fb0565b50565b601b5f9054906101000a900460ff1681565b6001811015801561181f575060048111155b61185e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118559061249e565b60405180910390fd5b601654821015801561187257506015548211155b6118b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a8906126c6565b60405180910390fd5b601b5f9054906101000a900460ff1615611900576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f79061272e565b60405180910390fd5b601854601a541015611947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193e90612796565b60405180910390fd5b5f3390505f60018303611a835760055f9054906101000a900460ff1680156119ab57505f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054145b6119ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e1906127fe565b60405180910390fd5b600354846119f89190612619565b90508360015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611e27565b60028303611bba57600a5f9054906101000a900460ff168015611ae257505f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054145b611b21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b1890612866565b60405180910390fd5b60085484611b2f9190612619565b90508360065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611e26565b60038303611cf157600f5f9054906101000a900460ff168015611c1957505f600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054145b611c58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4f906128ce565b60405180910390fd5b600d5484611c669190612619565b905083600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555042600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611e25565b60048303611e245760145f9054906101000a900460ff168015611d5057505f60105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054145b611d8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8690612936565b60405180910390fd5b60125484611d9d9190612619565b90508360105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260115f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5b5b5b8060175f828254611e389190612551565b925050819055508360195f828254611e509190612551565b92505081905550611ea48230867f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16612071909392919063ffffffff16565b50505050565b611eb26120f3565b73ffffffffffffffffffffffffffffffffffffffff16611ed061152f565b73ffffffffffffffffffffffffffffffffffffffff1614611f2f57611ef36120f3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611f2691906123ed565b60405180910390fd5b565b611fab838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611f64929190612954565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120fa565b505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6120ed848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016120a69392919061297b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120fa565b50505050565b5f33905090565b5f5f60205f8451602086015f885af180612119576040513d5f823e3d81fd5b3d92505f519150505f821461213257600181141561214d565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561218f57836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161218691906123ed565b60405180910390fd5b50505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6121c282612199565b9050919050565b6121d2816121b8565b81146121dc575f5ffd5b50565b5f813590506121ed816121c9565b92915050565b5f6020828403121561220857612207612195565b5b5f612215848285016121df565b91505092915050565b5f819050919050565b6122308161221e565b82525050565b5f6020820190506122495f830184612227565b92915050565b5f8115159050919050565b6122638161224f565b811461226d575f5ffd5b50565b5f8135905061227e8161225a565b92915050565b5f6020828403121561229957612298612195565b5b5f6122a684828501612270565b91505092915050565b6122b88161221e565b81146122c2575f5ffd5b50565b5f813590506122d3816122af565b92915050565b5f602082840312156122ee576122ed612195565b5b5f6122fb848285016122c5565b91505092915050565b5f819050919050565b5f61232761232261231d84612199565b612304565b612199565b9050919050565b5f6123388261230d565b9050919050565b5f6123498261232e565b9050919050565b6123598161233f565b82525050565b5f6020820190506123725f830184612350565b92915050565b5f5f6040838503121561238e5761238d612195565b5b5f61239b858286016121df565b92505060206123ac858286016122c5565b9150509250929050565b6123bf8161224f565b82525050565b5f6020820190506123d85f8301846123b6565b92915050565b6123e7816121b8565b82525050565b5f6020820190506124005f8301846123de565b92915050565b5f5f6040838503121561241c5761241b612195565b5b5f612429858286016122c5565b925050602061243a858286016122c5565b9150509250929050565b5f82825260208201905092915050565b7f496e76616c696420626f780000000000000000000000000000000000000000005f82015250565b5f612488600b83612444565b915061249382612454565b602082019050919050565b5f6020820190508181035f8301526124b58161247c565b9050919050565b7f4e6f207374616b650000000000000000000000000000000000000000000000005f82015250565b5f6124f0600883612444565b91506124fb826124bc565b602082019050919050565b5f6020820190508181035f83015261251d816124e4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61255b8261221e565b91506125668361221e565b925082820190508082111561257e5761257d612524565b5b92915050565b7f4e6f7420756e6c6f636b656400000000000000000000000000000000000000005f82015250565b5f6125b8600c83612444565b91506125c382612584565b602082019050919050565b5f6020820190508181035f8301526125e5816125ac565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6126238261221e565b915061262e8361221e565b92508261263e5761263d6125ec565b5b828204905092915050565b5f6126538261221e565b915061265e8361221e565b925082820390508181111561267657612675612524565b5b92915050565b7f496e76616c696420616d6f756e740000000000000000000000000000000000005f82015250565b5f6126b0600e83612444565b91506126bb8261267c565b602082019050919050565b5f6020820190508181035f8301526126dd816126a4565b9050919050565b7f556e6c6f636b206d6f64652061637469766500000000000000000000000000005f82015250565b5f612718601283612444565b9150612723826126e4565b602082019050919050565b5f6020820190508181035f8301526127458161270c565b9050919050565b7f5374616b696e6720656e646564000000000000000000000000000000000000005f82015250565b5f612780600d83612444565b915061278b8261274c565b602082019050919050565b5f6020820190508181035f8301526127ad81612774565b9050919050565b7f426f7820312064697361626c6564206f7220616c7265616479207374616b65645f82015250565b5f6127e8602083612444565b91506127f3826127b4565b602082019050919050565b5f6020820190508181035f830152612815816127dc565b9050919050565b7f426f7820322064697361626c6564206f7220616c7265616479207374616b65645f82015250565b5f612850602083612444565b915061285b8261281c565b602082019050919050565b5f6020820190508181035f83015261287d81612844565b9050919050565b7f426f7820332064697361626c6564206f7220616c7265616479207374616b65645f82015250565b5f6128b8602083612444565b91506128c382612884565b602082019050919050565b5f6020820190508181035f8301526128e5816128ac565b9050919050565b7f426f7820342064697361626c6564206f7220616c7265616479207374616b65645f82015250565b5f612920602083612444565b915061292b826128ec565b602082019050919050565b5f6020820190508181035f83015261294d81612914565b9050919050565b5f6040820190506129675f8301856123de565b6129746020830184612227565b9392505050565b5f60608201905061298e5f8301866123de565b61299b60208301856123de565b6129a86040830184612227565b94935050505056fea264697066735822122005d93b648ad3b0d7cad9c00587a635b46755b283a43b3e13239781ef7ad2f0fd64736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2E6D CODESIZE SUB DUP1 PUSH2 0x2E6D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x388 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x269 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x120 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117 SWAP1 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 PUSH1 0x17 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x18 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x19 DUP2 SWAP1 SSTORE POP PUSH10 0x54B40B1F852BDA000000 PUSH1 0x15 DUP2 SWAP1 SSTORE POP PUSH10 0x69E10DE76676D0800000 PUSH1 0x1A DUP2 SWAP1 SSTORE POP PUSH7 0x2386F26FC10000 PUSH1 0x16 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1B PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x14D PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x53 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH3 0x127500 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH3 0x24EA00 PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xF PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1A PUSH1 0x12 DUP2 SWAP1 SSTORE POP PUSH3 0x24EA00 PUSH1 0x13 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x14 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP PUSH2 0x453 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x357 DUP3 PUSH2 0x32E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x367 DUP2 PUSH2 0x34D JUMP JUMPDEST DUP2 EQ PUSH2 0x371 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x382 DUP2 PUSH2 0x35E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39D JUMPI PUSH2 0x39C PUSH2 0x32A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3AA DUP5 DUP3 DUP6 ADD PUSH2 0x374 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3BC DUP2 PUSH2 0x34D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D5 PUSH0 DUP4 ADD DUP5 PUSH2 0x3B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616464726573732063616E6E6F74206265207A65726F00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x41F PUSH1 0x1C DUP4 PUSH2 0x3DB JUMP JUMPDEST SWAP2 POP PUSH2 0x42A DUP3 PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x44C DUP2 PUSH2 0x413 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x29E6 PUSH2 0x487 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x8A2 ADD MSTORE DUP2 DUP2 PUSH2 0x10B6 ADD MSTORE DUP2 DUP2 PUSH2 0x111E ADD MSTORE DUP2 DUP2 PUSH2 0x116E ADD MSTORE PUSH2 0x1E5F ADD MSTORE PUSH2 0x29E6 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x272 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B3E920C GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xD0BCC009 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xE7DE2CEB GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xE7DE2CEB EQ PUSH2 0x78C JUMPI DUP1 PUSH4 0xEA1B28E0 EQ PUSH2 0x7AA JUMPI DUP1 PUSH4 0xF1CDDD55 EQ PUSH2 0x7C8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7E4 JUMPI DUP1 PUSH4 0xF908DC13 EQ PUSH2 0x800 JUMPI DUP1 PUSH4 0xFD2B5202 EQ PUSH2 0x81E JUMPI PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH4 0xD0BCC009 EQ PUSH2 0x6F8 JUMPI DUP1 PUSH4 0xD19B090E EQ PUSH2 0x716 JUMPI DUP1 PUSH4 0xD47C56E5 EQ PUSH2 0x734 JUMPI DUP1 PUSH4 0xD5C41D69 EQ PUSH2 0x752 JUMPI DUP1 PUSH4 0xD7D4918E EQ PUSH2 0x76E JUMPI PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH4 0x94387289 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x94387289 EQ PUSH2 0x636 JUMPI DUP1 PUSH4 0xB39DC996 EQ PUSH2 0x652 JUMPI DUP1 PUSH4 0xBBA4FEFD EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0xBEF7D12E EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0xC3630EDB EQ PUSH2 0x6BE JUMPI DUP1 PUSH4 0xCD5692EE EQ PUSH2 0x6DC JUMPI PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH4 0x7B3E920C EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0x89B0040A EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0x8A170AC1 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x618 JUMPI PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH4 0x4B0C10D8 GT PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x6CBDE5CF GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x6CBDE5CF EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0x73DEC718 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0x79085425 EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0x798CBE5E EQ PUSH2 0x55E JUMPI PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH4 0x4B0C10D8 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x4B5EFFC2 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x4F51D090 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0x5CD5A159 EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0x5F75BCEA EQ PUSH2 0x4B0 JUMPI PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH4 0x292A6B19 GT PUSH2 0x23A JUMPI DUP1 PUSH4 0x292A6B19 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x2E5F89EF EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x35E63055 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x375B3C0A EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x38DC97FB EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x4893AFC1 EQ PUSH2 0x3E4 JUMPI PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH4 0x58DF0E8 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x1D95985B EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x1D95D52F EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x23DCDB89 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x24EBD9D2 EQ PUSH2 0x2FC JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x879 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x334 PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39E PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41C PUSH2 0x11EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49A PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x1356 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x137A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x502 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x139E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x520 PUSH2 0x14BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x52A PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x548 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x555 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x566 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x596 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B4 PUSH2 0x1502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x602 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x620 PUSH2 0x152F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x650 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x1556 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x65A PUSH2 0x1568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x678 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x685 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A3 SWAP2 SWAP1 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C6 PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F1 SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x16ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x700 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x71E PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72B SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73C PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x767 SWAP2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x171D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x776 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x794 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A1 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B2 PUSH2 0x174D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x1753 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F9 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x1777 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x808 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x815 SWAP2 SWAP1 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x838 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x2406 JUMP JUMPDEST PUSH2 0x180D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x85D PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0x14 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x881 PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0x16 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x8EB JUMPI POP PUSH1 0x4 DUP2 GT ISZERO JUMPDEST PUSH2 0x92A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x921 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH0 PUSH1 0x1 DUP5 SUB PUSH2 0xAF6 JUMPI PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B1 SWAP1 PUSH2 0x2506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA1E JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST TIMESTAMP LT ISZERO JUMPDEST PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP2 PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x2 DUP5 SUB PUSH2 0xCBC JUMPI PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB77 SWAP1 PUSH2 0x2506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xBE4 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xBE0 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST TIMESTAMP LT ISZERO JUMPDEST PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1A SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0xC31 SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x3 DUP5 SUB PUSH2 0xE82 JUMPI PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xD46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3D SWAP1 PUSH2 0x2506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xDAA JUMPI POP PUSH1 0xE SLOAD PUSH1 0xC PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDA6 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST TIMESTAMP LT ISZERO JUMPDEST PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE0 SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD DUP2 PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0xB PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xC PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x4 DUP5 SUB PUSH2 0x1044 JUMPI PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xF0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF03 SWAP1 PUSH2 0x2506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xF70 JUMPI POP PUSH1 0x13 SLOAD PUSH1 0x11 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF6C SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST TIMESTAMP LT ISZERO JUMPDEST PUSH2 0xFAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA6 SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 SLOAD DUP2 PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x10 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x11 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x19 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1058 SWAP2 SWAP1 PUSH2 0x2649 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1087 JUMPI DUP2 PUSH1 0x18 SLOAD PUSH2 0x1080 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x18 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10AF JUMPI DUP2 PUSH1 0x17 SLOAD PUSH2 0x10A8 SWAP2 SWAP1 PUSH2 0x2649 JUMP JUMPDEST PUSH1 0x17 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x10FA DUP4 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F31 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11B4 JUMPI PUSH1 0x4 DUP5 SUB PUSH2 0x1167 JUMPI PUSH2 0x1162 PUSH2 0xDEAD DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F31 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B3 JUMP JUMPDEST PUSH2 0x11B2 DUP4 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F31 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 SUB PUSH2 0x123E JUMPI PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x128B JUMPI PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH2 0x12D8 JUMPI PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x4 DUP3 SUB PUSH2 0x1325 JUMPI PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1329 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x135E PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1382 PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x10 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x14A1 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH2 0x14AB SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH2 0x14B5 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C4 PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x14CD PUSH0 PUSH2 0x1FB0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x155E PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0x1A DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 SUB PUSH2 0x15CF JUMPI PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x15C8 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x1629 JUMPI PUSH1 0x9 SLOAD PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH2 0x1683 JUMPI PUSH1 0xE SLOAD PUSH1 0xC PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x167C SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x4 DUP3 SUB PUSH2 0x16DD JUMPI PUSH1 0x13 SLOAD PUSH1 0x11 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x16D6 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP PUSH2 0x16E1 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x16F5 PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0x15 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1725 PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0xF PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x175B PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0x1B PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x177F PUSH2 0x1EAA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E6 SWAP2 SWAP1 PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17F8 DUP2 PUSH2 0x1FB0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x181F JUMPI POP PUSH1 0x4 DUP2 GT ISZERO JUMPDEST PUSH2 0x185E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1855 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x16 SLOAD DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x1872 JUMPI POP PUSH1 0x15 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x18B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A8 SWAP1 PUSH2 0x26C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1900 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F7 SWAP1 PUSH2 0x272E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x18 SLOAD PUSH1 0x1A SLOAD LT ISZERO PUSH2 0x1947 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193E SWAP1 PUSH2 0x2796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x1 DUP4 SUB PUSH2 0x1A83 JUMPI PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x19AB JUMPI POP PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x19EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E1 SWAP1 PUSH2 0x27FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP5 PUSH2 0x19F8 SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E27 JUMP JUMPDEST PUSH1 0x2 DUP4 SUB PUSH2 0x1BBA JUMPI PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1AE2 JUMPI POP PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x1B21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B18 SWAP1 PUSH2 0x2866 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP5 PUSH2 0x1B2F SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x3 DUP4 SUB PUSH2 0x1CF1 JUMPI PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1C19 JUMPI POP PUSH0 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x1C58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4F SWAP1 PUSH2 0x28CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD DUP5 PUSH2 0x1C66 SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x4 DUP4 SUB PUSH2 0x1E24 JUMPI PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1D50 JUMPI POP PUSH0 PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x1D8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D86 SWAP1 PUSH2 0x2936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 SLOAD DUP5 PUSH2 0x1D9D SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x11 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x17 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E38 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x19 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E50 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EA4 DUP3 ADDRESS DUP7 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2071 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1EB2 PUSH2 0x20F3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1ED0 PUSH2 0x152F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F2F JUMPI PUSH2 0x1EF3 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F26 SWAP2 SWAP1 PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1FAB DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F64 SWAP3 SWAP2 SWAP1 PUSH2 0x2954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x20FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x20ED DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x20A6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x297B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x20FA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x2119 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x2132 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x214D JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x218F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2186 SWAP2 SWAP1 PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21C2 DUP3 PUSH2 0x2199 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D2 DUP2 PUSH2 0x21B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x21DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21ED DUP2 PUSH2 0x21C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2208 JUMPI PUSH2 0x2207 PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2215 DUP5 DUP3 DUP6 ADD PUSH2 0x21DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2230 DUP2 PUSH2 0x221E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2249 PUSH0 DUP4 ADD DUP5 PUSH2 0x2227 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2263 DUP2 PUSH2 0x224F JUMP JUMPDEST DUP2 EQ PUSH2 0x226D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x227E DUP2 PUSH2 0x225A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2299 JUMPI PUSH2 0x2298 PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22A6 DUP5 DUP3 DUP6 ADD PUSH2 0x2270 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22B8 DUP2 PUSH2 0x221E JUMP JUMPDEST DUP2 EQ PUSH2 0x22C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22D3 DUP2 PUSH2 0x22AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22EE JUMPI PUSH2 0x22ED PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22FB DUP5 DUP3 DUP6 ADD PUSH2 0x22C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2327 PUSH2 0x2322 PUSH2 0x231D DUP5 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0x2304 JUMP JUMPDEST PUSH2 0x2199 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2338 DUP3 PUSH2 0x230D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2349 DUP3 PUSH2 0x232E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2359 DUP2 PUSH2 0x233F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2372 PUSH0 DUP4 ADD DUP5 PUSH2 0x2350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x238E JUMPI PUSH2 0x238D PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239B DUP6 DUP3 DUP7 ADD PUSH2 0x21DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23AC DUP6 DUP3 DUP7 ADD PUSH2 0x22C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x23BF DUP2 PUSH2 0x224F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x23B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23E7 DUP2 PUSH2 0x21B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2400 PUSH0 DUP4 ADD DUP5 PUSH2 0x23DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x241C JUMPI PUSH2 0x241B PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2429 DUP6 DUP3 DUP7 ADD PUSH2 0x22C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x243A DUP6 DUP3 DUP7 ADD PUSH2 0x22C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420626F78000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2488 PUSH1 0xB DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x2493 DUP3 PUSH2 0x2454 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24B5 DUP2 PUSH2 0x247C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207374616B65000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24F0 PUSH1 0x8 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FB DUP3 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x251D DUP2 PUSH2 0x24E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x255B DUP3 PUSH2 0x221E JUMP JUMPDEST SWAP2 POP PUSH2 0x2566 DUP4 PUSH2 0x221E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x257E JUMPI PUSH2 0x257D PUSH2 0x2524 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420756E6C6F636B65640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25B8 PUSH1 0xC DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C3 DUP3 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25E5 DUP2 PUSH2 0x25AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2623 DUP3 PUSH2 0x221E JUMP JUMPDEST SWAP2 POP PUSH2 0x262E DUP4 PUSH2 0x221E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x263E JUMPI PUSH2 0x263D PUSH2 0x25EC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2653 DUP3 PUSH2 0x221E JUMP JUMPDEST SWAP2 POP PUSH2 0x265E DUP4 PUSH2 0x221E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2676 JUMPI PUSH2 0x2675 PUSH2 0x2524 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26B0 PUSH1 0xE DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x26BB DUP3 PUSH2 0x267C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26DD DUP2 PUSH2 0x26A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E6C6F636B206D6F6465206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2718 PUSH1 0x12 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x2723 DUP3 PUSH2 0x26E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2745 DUP2 PUSH2 0x270C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E6720656E64656400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2780 PUSH1 0xD DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x278B DUP3 PUSH2 0x274C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27AD DUP2 PUSH2 0x2774 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F7820312064697361626C6564206F7220616C7265616479207374616B6564 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27E8 PUSH1 0x20 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x27F3 DUP3 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2815 DUP2 PUSH2 0x27DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F7820322064697361626C6564206F7220616C7265616479207374616B6564 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2850 PUSH1 0x20 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x285B DUP3 PUSH2 0x281C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x287D DUP2 PUSH2 0x2844 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F7820332064697361626C6564206F7220616C7265616479207374616B6564 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28B8 PUSH1 0x20 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x28C3 DUP3 PUSH2 0x2884 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28E5 DUP2 PUSH2 0x28AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F7820342064697361626C6564206F7220616C7265616479207374616B6564 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2920 PUSH1 0x20 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x292B DUP3 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x294D DUP2 PUSH2 0x2914 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2967 PUSH0 DUP4 ADD DUP6 PUSH2 0x23DE JUMP JUMPDEST PUSH2 0x2974 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2227 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x298E PUSH0 DUP4 ADD DUP7 PUSH2 0x23DE JUMP JUMPDEST PUSH2 0x299B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23DE JUMP JUMPDEST PUSH2 0x29A8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2227 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xD9 EXTCODESIZE PUSH5 0x8AD3B0D7CA 0xD9 0xC0 SDIV DUP8 0xA6 CALLDATALOAD 0xB4 PUSH8 0x55B283A43B3E1323 SWAP8 DUP2 0xEF PUSH27 0xD2F0FD64736F6C634300081E003300000000000000000000000000 ",
							"sourceMap": "362:7395:11:-:0;;;1694:722;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;396:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1773:1:11;1748:27;;:13;:27;;;1740:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1840:13;1819:35;;;;;;;;;;1884:1;1867:14;:18;;;;1910:1;1896:11;:15;;;;1936:1;1922:11;:15;;;;1959:13;1948:8;:24;;;;1998:13;1983:12;:28;;;;2033:10;2022:8;:21;;;;2067:5;2054:10;;:18;;;;;;;;;;;;;;;;;;2096:3;2085:8;:14;;;;2121:6;2110:8;:17;;;;2152:4;2138:11;;:18;;;;;;;;;;;;;;;;;;2180:2;2169:8;:13;;;;2204:7;2193:8;:18;;;;2236:4;2222:11;;:18;;;;;;;;;;;;;;;;;;2264:2;2253:8;:13;;;;2288:7;2277:8;:18;;;;2320:4;2306:11;;:18;;;;;;;;;;;;;;;;;;2348:2;2337:8;:13;;;;2372:7;2361:8;:18;;;;2404:4;2390:11;;:18;;;;;;;;;;;;;;;;;;1694:722;362:7395;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:169::-;1638:11;1672:6;1667:3;1660:19;1712:4;1707:3;1703:14;1688:29;;1554:169;;;;:::o;1729:178::-;1869:30;1865:1;1857:6;1853:14;1846:54;1729:178;:::o;1913:366::-;2055:3;2076:67;2140:2;2135:3;2076:67;:::i;:::-;2069:74;;2152:93;2241:3;2152:93;:::i;:::-;2270:2;2265:3;2261:12;2254:19;;1913:366;;;:::o;2285:419::-;2451:4;2489:2;2478:9;2474:18;2466:26;;2538:9;2532:4;2528:20;2524:1;2513:9;2509:17;2502:47;2566:131;2692:4;2566:131;:::i;:::-;2558:139;;2285:419;;;:::o;362:7395:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_737": {
									"entryPoint": 8442,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 7850,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1051": {
									"entryPoint": 8435,
									"id": 1051,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 8112,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addStake_2036": {
									"entryPoint": 6157,
									"id": 2036,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1730": {
									"entryPoint": 5022,
									"id": 1730,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@box1Balance_1443": {
									"entryPoint": 4565,
									"id": 1443,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box1DepositDate_1447": {
									"entryPoint": 4911,
									"id": 1447,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box1Enabled_1453": {
									"entryPoint": 5405,
									"id": 1453,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box1Rate_1449": {
									"entryPoint": 5959,
									"id": 1449,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box1Time_1451": {
									"entryPoint": 4586,
									"id": 1451,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box2Balance_1457": {
									"entryPoint": 2106,
									"id": 1457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box2DepositDate_1461": {
									"entryPoint": 5357,
									"id": 1461,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box2Enabled_1467": {
									"entryPoint": 5327,
									"id": 1467,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box2Rate_1463": {
									"entryPoint": 5953,
									"id": 1463,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box2Time_1465": {
									"entryPoint": 5911,
									"id": 1465,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box3Balance_1471": {
									"entryPoint": 2244,
									"id": 1471,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box3DepositDate_1475": {
									"entryPoint": 5384,
									"id": 1475,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box3Enabled_1481": {
									"entryPoint": 5887,
									"id": 1481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box3Rate_1477": {
									"entryPoint": 5480,
									"id": 1477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box3Time_1479": {
									"entryPoint": 2127,
									"id": 1479,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box4Balance_1485": {
									"entryPoint": 2187,
									"id": 1485,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box4DepositDate_1489": {
									"entryPoint": 4544,
									"id": 1489,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box4Enabled_1495": {
									"entryPoint": 4932,
									"id": 1495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box4Rate_1491": {
									"entryPoint": 5863,
									"id": 1491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box4Time_1493": {
									"entryPoint": 5351,
									"id": 1493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@changeBox1Status_1622": {
									"entryPoint": 4986,
									"id": 1622,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeBox2Status_1634": {
									"entryPoint": 4950,
									"id": 1634,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeBox3Status_1646": {
									"entryPoint": 5917,
									"id": 1646,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeBox4Status_1658": {
									"entryPoint": 2133,
									"id": 1658,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeFullUnlock_1706": {
									"entryPoint": 5971,
									"id": 1706,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMaxRewardDue_1670": {
									"entryPoint": 5462,
									"id": 1670,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMaxStake_1682": {
									"entryPoint": 5869,
									"id": 1682,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMinStake_1694": {
									"entryPoint": 2169,
									"id": 1694,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@fullUnlock_1512": {
									"entryPoint": 6139,
									"id": 1512,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@landFiToken_1439": {
									"entryPoint": 2208,
									"id": 1439,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxRewardDue_1510": {
									"entryPoint": 5905,
									"id": 1510,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxStake_1500": {
									"entryPoint": 5965,
									"id": 1500,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minStake_1502": {
									"entryPoint": 4538,
									"id": 1502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 5423,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pullStake_2317": {
									"entryPoint": 2265,
									"id": 2317,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 5308,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardCountDue_1504": {
									"entryPoint": 5486,
									"id": 1504,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardCount_1506": {
									"entryPoint": 5345,
									"id": 1506,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_387": {
									"entryPoint": 8305,
									"id": 387,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_360": {
									"entryPoint": 7985,
									"id": 360,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stakeAmount_1826": {
									"entryPoint": 4592,
									"id": 1826,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@stakeUnlockTime_1782": {
									"entryPoint": 5492,
									"id": 1782,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalStaked_1508": {
									"entryPoint": 5378,
									"id": 1508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 6007,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 8836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack": {
									"entryPoint": 9040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10619,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10580,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed": {
									"entryPoint": 9055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$315_to_t_address": {
									"entryPoint": 9023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 8964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9508,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9708,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8597,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85": {
									"entryPoint": 10268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1": {
									"entryPoint": 10060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b": {
									"entryPoint": 10476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 9852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8": {
									"entryPoint": 9404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e": {
									"entryPoint": 10372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95": {
									"entryPoint": 9300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e": {
									"entryPoint": 9956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077": {
									"entryPoint": 9604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a": {
									"entryPoint": 10164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17112:12",
										"nodeType": "YulBlock",
										"src": "0:17112:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "748:87:12",
													"nodeType": "YulBlock",
													"src": "748:87:12",
													"statements": [
														{
															"nativeSrc": "758:29:12",
															"nodeType": "YulAssignment",
															"src": "758:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:12"
																},
																"nativeSrc": "767:20:12",
																"nodeType": "YulFunctionCall",
																"src": "767:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:12"
																},
																"nativeSrc": "796:33:12",
																"nodeType": "YulFunctionCall",
																"src": "796:33:12"
															},
															"nativeSrc": "796:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:12",
														"nodeType": "YulTypedName",
														"src": "726:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:12",
														"nodeType": "YulTypedName",
														"src": "734:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:12",
														"nodeType": "YulTypedName",
														"src": "742:5:12",
														"type": ""
													}
												],
												"src": "696:139:12"
											},
											{
												"body": {
													"nativeSrc": "907:263:12",
													"nodeType": "YulBlock",
													"src": "907:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:12",
																"nodeType": "YulBlock",
																"src": "953:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:12"
																			},
																			"nativeSrc": "955:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:12"
																		},
																		"nativeSrc": "955:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:12"
																		},
																		"nativeSrc": "924:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:12",
																		"nodeType": "YulLiteral",
																		"src": "949:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:12"
																},
																"nativeSrc": "920:32:12",
																"nodeType": "YulFunctionCall",
																"src": "920:32:12"
															},
															"nativeSrc": "917:119:12",
															"nodeType": "YulIf",
															"src": "917:119:12"
														},
														{
															"nativeSrc": "1046:117:12",
															"nodeType": "YulBlock",
															"src": "1046:117:12",
															"statements": [
																{
																	"nativeSrc": "1061:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:12"
																				},
																				"nativeSrc": "1121:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:12"
																		},
																		"nativeSrc": "1100:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:12",
														"nodeType": "YulTypedName",
														"src": "877:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:12",
														"nodeType": "YulTypedName",
														"src": "888:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:12",
														"nodeType": "YulTypedName",
														"src": "900:6:12",
														"type": ""
													}
												],
												"src": "841:329:12"
											},
											{
												"body": {
													"nativeSrc": "1221:32:12",
													"nodeType": "YulBlock",
													"src": "1221:32:12",
													"statements": [
														{
															"nativeSrc": "1231:16:12",
															"nodeType": "YulAssignment",
															"src": "1231:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:12",
																"nodeType": "YulIdentifier",
																"src": "1242:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:12",
														"nodeType": "YulTypedName",
														"src": "1203:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:12",
														"nodeType": "YulTypedName",
														"src": "1213:7:12",
														"type": ""
													}
												],
												"src": "1176:77:12"
											},
											{
												"body": {
													"nativeSrc": "1324:53:12",
													"nodeType": "YulBlock",
													"src": "1324:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:12"
																		},
																		"nativeSrc": "1346:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:12"
																},
																"nativeSrc": "1334:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:12"
															},
															"nativeSrc": "1334:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:12",
														"nodeType": "YulTypedName",
														"src": "1312:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:12",
														"nodeType": "YulTypedName",
														"src": "1319:3:12",
														"type": ""
													}
												],
												"src": "1259:118:12"
											},
											{
												"body": {
													"nativeSrc": "1481:124:12",
													"nodeType": "YulBlock",
													"src": "1481:124:12",
													"statements": [
														{
															"nativeSrc": "1491:26:12",
															"nodeType": "YulAssignment",
															"src": "1491:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:12"
																},
																"nativeSrc": "1499:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:12"
																		},
																		"nativeSrc": "1580:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:12"
																},
																"nativeSrc": "1527:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:12"
															},
															"nativeSrc": "1527:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:12",
														"nodeType": "YulTypedName",
														"src": "1453:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:12",
														"nodeType": "YulTypedName",
														"src": "1465:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:12",
														"nodeType": "YulTypedName",
														"src": "1476:4:12",
														"type": ""
													}
												],
												"src": "1383:222:12"
											},
											{
												"body": {
													"nativeSrc": "1653:48:12",
													"nodeType": "YulBlock",
													"src": "1653:48:12",
													"statements": [
														{
															"nativeSrc": "1663:32:12",
															"nodeType": "YulAssignment",
															"src": "1663:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1688:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1688:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1681:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1681:6:12"
																		},
																		"nativeSrc": "1681:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1674:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:12"
																},
																"nativeSrc": "1674:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1674:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1663:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1663:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1611:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1635:5:12",
														"nodeType": "YulTypedName",
														"src": "1635:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1645:7:12",
														"nodeType": "YulTypedName",
														"src": "1645:7:12",
														"type": ""
													}
												],
												"src": "1611:90:12"
											},
											{
												"body": {
													"nativeSrc": "1747:76:12",
													"nodeType": "YulBlock",
													"src": "1747:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1801:16:12",
																"nodeType": "YulBlock",
																"src": "1801:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1810:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1810:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1813:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1813:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1803:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1803:6:12"
																			},
																			"nativeSrc": "1803:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1803:12:12"
																		},
																		"nativeSrc": "1803:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1803:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1770:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1770:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1792:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1792:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "1777:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "1777:14:12"
																				},
																				"nativeSrc": "1777:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1777:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1767:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1767:2:12"
																		},
																		"nativeSrc": "1767:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1767:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1760:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1760:6:12"
																},
																"nativeSrc": "1760:40:12",
																"nodeType": "YulFunctionCall",
																"src": "1760:40:12"
															},
															"nativeSrc": "1757:60:12",
															"nodeType": "YulIf",
															"src": "1757:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "1707:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1740:5:12",
														"nodeType": "YulTypedName",
														"src": "1740:5:12",
														"type": ""
													}
												],
												"src": "1707:116:12"
											},
											{
												"body": {
													"nativeSrc": "1878:84:12",
													"nodeType": "YulBlock",
													"src": "1878:84:12",
													"statements": [
														{
															"nativeSrc": "1888:29:12",
															"nodeType": "YulAssignment",
															"src": "1888:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1910:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1910:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1897:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1897:12:12"
																},
																"nativeSrc": "1897:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1897:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1888:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1888:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1950:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1950:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "1926:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "1926:23:12"
																},
																"nativeSrc": "1926:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1926:30:12"
															},
															"nativeSrc": "1926:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "1926:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "1829:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1856:6:12",
														"nodeType": "YulTypedName",
														"src": "1856:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1864:3:12",
														"nodeType": "YulTypedName",
														"src": "1864:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1872:5:12",
														"nodeType": "YulTypedName",
														"src": "1872:5:12",
														"type": ""
													}
												],
												"src": "1829:133:12"
											},
											{
												"body": {
													"nativeSrc": "2031:260:12",
													"nodeType": "YulBlock",
													"src": "2031:260:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2077:83:12",
																"nodeType": "YulBlock",
																"src": "2077:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2079:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2079:77:12"
																			},
																			"nativeSrc": "2079:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2079:79:12"
																		},
																		"nativeSrc": "2079:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2079:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2052:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2052:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2061:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2061:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2048:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2048:3:12"
																		},
																		"nativeSrc": "2048:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2048:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2073:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2073:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2044:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2044:3:12"
																},
																"nativeSrc": "2044:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2044:32:12"
															},
															"nativeSrc": "2041:119:12",
															"nodeType": "YulIf",
															"src": "2041:119:12"
														},
														{
															"nativeSrc": "2170:114:12",
															"nodeType": "YulBlock",
															"src": "2170:114:12",
															"statements": [
																{
																	"nativeSrc": "2185:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2185:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2199:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2199:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2189:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2189:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2214:60:12",
																	"nodeType": "YulAssignment",
																	"src": "2214:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2246:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2246:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2257:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2257:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2242:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2242:3:12"
																				},
																				"nativeSrc": "2242:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2242:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2266:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2266:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "2224:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2224:17:12"
																		},
																		"nativeSrc": "2224:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2224:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2214:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2214:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "1968:323:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2001:9:12",
														"nodeType": "YulTypedName",
														"src": "2001:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2012:7:12",
														"nodeType": "YulTypedName",
														"src": "2012:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2024:6:12",
														"nodeType": "YulTypedName",
														"src": "2024:6:12",
														"type": ""
													}
												],
												"src": "1968:323:12"
											},
											{
												"body": {
													"nativeSrc": "2340:79:12",
													"nodeType": "YulBlock",
													"src": "2340:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2397:16:12",
																"nodeType": "YulBlock",
																"src": "2397:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2406:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2406:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2409:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2409:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2399:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2399:6:12"
																			},
																			"nativeSrc": "2399:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2399:12:12"
																		},
																		"nativeSrc": "2399:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2399:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2363:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2363:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2388:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2388:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2370:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2370:17:12"
																				},
																				"nativeSrc": "2370:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2370:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2360:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2360:2:12"
																		},
																		"nativeSrc": "2360:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2360:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2353:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:12"
																},
																"nativeSrc": "2353:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2353:43:12"
															},
															"nativeSrc": "2350:63:12",
															"nodeType": "YulIf",
															"src": "2350:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2297:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2333:5:12",
														"nodeType": "YulTypedName",
														"src": "2333:5:12",
														"type": ""
													}
												],
												"src": "2297:122:12"
											},
											{
												"body": {
													"nativeSrc": "2477:87:12",
													"nodeType": "YulBlock",
													"src": "2477:87:12",
													"statements": [
														{
															"nativeSrc": "2487:29:12",
															"nodeType": "YulAssignment",
															"src": "2487:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2509:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2509:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2496:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2496:12:12"
																},
																"nativeSrc": "2496:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2496:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2487:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2487:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2552:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2552:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2525:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2525:26:12"
																},
																"nativeSrc": "2525:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2525:33:12"
															},
															"nativeSrc": "2525:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2525:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2425:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2455:6:12",
														"nodeType": "YulTypedName",
														"src": "2455:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2463:3:12",
														"nodeType": "YulTypedName",
														"src": "2463:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2471:5:12",
														"nodeType": "YulTypedName",
														"src": "2471:5:12",
														"type": ""
													}
												],
												"src": "2425:139:12"
											},
											{
												"body": {
													"nativeSrc": "2636:263:12",
													"nodeType": "YulBlock",
													"src": "2636:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2682:83:12",
																"nodeType": "YulBlock",
																"src": "2682:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2684:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2684:77:12"
																			},
																			"nativeSrc": "2684:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2684:79:12"
																		},
																		"nativeSrc": "2684:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2684:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2657:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2657:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2666:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2666:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2653:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2653:3:12"
																		},
																		"nativeSrc": "2653:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2653:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2678:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2678:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2649:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2649:3:12"
																},
																"nativeSrc": "2649:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2649:32:12"
															},
															"nativeSrc": "2646:119:12",
															"nodeType": "YulIf",
															"src": "2646:119:12"
														},
														{
															"nativeSrc": "2775:117:12",
															"nodeType": "YulBlock",
															"src": "2775:117:12",
															"statements": [
																{
																	"nativeSrc": "2790:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2790:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2804:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2804:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2794:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2794:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2819:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2819:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2854:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2854:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2865:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2865:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2850:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2850:3:12"
																				},
																				"nativeSrc": "2850:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2850:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2874:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2874:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2829:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2829:20:12"
																		},
																		"nativeSrc": "2829:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2829:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2819:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2819:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2570:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2606:9:12",
														"nodeType": "YulTypedName",
														"src": "2606:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2617:7:12",
														"nodeType": "YulTypedName",
														"src": "2617:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2629:6:12",
														"nodeType": "YulTypedName",
														"src": "2629:6:12",
														"type": ""
													}
												],
												"src": "2570:329:12"
											},
											{
												"body": {
													"nativeSrc": "2937:28:12",
													"nodeType": "YulBlock",
													"src": "2937:28:12",
													"statements": [
														{
															"nativeSrc": "2947:12:12",
															"nodeType": "YulAssignment",
															"src": "2947:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "2954:5:12",
																"nodeType": "YulIdentifier",
																"src": "2954:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2947:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2947:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2905:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2923:5:12",
														"nodeType": "YulTypedName",
														"src": "2923:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2933:3:12",
														"nodeType": "YulTypedName",
														"src": "2933:3:12",
														"type": ""
													}
												],
												"src": "2905:60:12"
											},
											{
												"body": {
													"nativeSrc": "3031:82:12",
													"nodeType": "YulBlock",
													"src": "3031:82:12",
													"statements": [
														{
															"nativeSrc": "3041:66:12",
															"nodeType": "YulAssignment",
															"src": "3041:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3099:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3099:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3081:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3081:17:12"
																				},
																				"nativeSrc": "3081:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3072:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "3072:8:12"
																		},
																		"nativeSrc": "3072:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3072:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3054:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3054:17:12"
																},
																"nativeSrc": "3054:53:12",
																"nodeType": "YulFunctionCall",
																"src": "3054:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3041:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "3041:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2971:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3011:5:12",
														"nodeType": "YulTypedName",
														"src": "3011:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3021:9:12",
														"nodeType": "YulTypedName",
														"src": "3021:9:12",
														"type": ""
													}
												],
												"src": "2971:142:12"
											},
											{
												"body": {
													"nativeSrc": "3179:66:12",
													"nodeType": "YulBlock",
													"src": "3179:66:12",
													"statements": [
														{
															"nativeSrc": "3189:50:12",
															"nodeType": "YulAssignment",
															"src": "3189:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3233:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3233:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3202:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "3202:30:12"
																},
																"nativeSrc": "3202:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3202:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3189:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "3189:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3119:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3159:5:12",
														"nodeType": "YulTypedName",
														"src": "3159:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3169:9:12",
														"nodeType": "YulTypedName",
														"src": "3169:9:12",
														"type": ""
													}
												],
												"src": "3119:126:12"
											},
											{
												"body": {
													"nativeSrc": "3325:66:12",
													"nodeType": "YulBlock",
													"src": "3325:66:12",
													"statements": [
														{
															"nativeSrc": "3335:50:12",
															"nodeType": "YulAssignment",
															"src": "3335:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3379:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3379:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3348:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "3348:30:12"
																},
																"nativeSrc": "3348:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3348:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3335:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "3335:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$315_to_t_address",
												"nativeSrc": "3251:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3305:5:12",
														"nodeType": "YulTypedName",
														"src": "3305:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3315:9:12",
														"nodeType": "YulTypedName",
														"src": "3315:9:12",
														"type": ""
													}
												],
												"src": "3251:140:12"
											},
											{
												"body": {
													"nativeSrc": "3476:80:12",
													"nodeType": "YulBlock",
													"src": "3476:80:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3493:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3493:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3543:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3543:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$315_to_t_address",
																			"nativeSrc": "3498:44:12",
																			"nodeType": "YulIdentifier",
																			"src": "3498:44:12"
																		},
																		"nativeSrc": "3498:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3498:51:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3486:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3486:6:12"
																},
																"nativeSrc": "3486:64:12",
																"nodeType": "YulFunctionCall",
																"src": "3486:64:12"
															},
															"nativeSrc": "3486:64:12",
															"nodeType": "YulExpressionStatement",
															"src": "3486:64:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
												"nativeSrc": "3397:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3464:5:12",
														"nodeType": "YulTypedName",
														"src": "3464:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3471:3:12",
														"nodeType": "YulTypedName",
														"src": "3471:3:12",
														"type": ""
													}
												],
												"src": "3397:159:12"
											},
											{
												"body": {
													"nativeSrc": "3674:138:12",
													"nodeType": "YulBlock",
													"src": "3674:138:12",
													"statements": [
														{
															"nativeSrc": "3684:26:12",
															"nodeType": "YulAssignment",
															"src": "3684:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3696:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3696:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3707:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3707:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3692:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3692:3:12"
																},
																"nativeSrc": "3692:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3692:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3684:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3684:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3778:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3778:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3791:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3791:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3802:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3802:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3787:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:12"
																		},
																		"nativeSrc": "3787:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3787:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
																	"nativeSrc": "3720:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "3720:57:12"
																},
																"nativeSrc": "3720:85:12",
																"nodeType": "YulFunctionCall",
																"src": "3720:85:12"
															},
															"nativeSrc": "3720:85:12",
															"nodeType": "YulExpressionStatement",
															"src": "3720:85:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed",
												"nativeSrc": "3562:250:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3646:9:12",
														"nodeType": "YulTypedName",
														"src": "3646:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3658:6:12",
														"nodeType": "YulTypedName",
														"src": "3658:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3669:4:12",
														"nodeType": "YulTypedName",
														"src": "3669:4:12",
														"type": ""
													}
												],
												"src": "3562:250:12"
											},
											{
												"body": {
													"nativeSrc": "3901:391:12",
													"nodeType": "YulBlock",
													"src": "3901:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3947:83:12",
																"nodeType": "YulBlock",
																"src": "3947:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3949:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3949:77:12"
																			},
																			"nativeSrc": "3949:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3949:79:12"
																		},
																		"nativeSrc": "3949:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3949:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3922:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3922:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3931:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3931:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3918:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3918:3:12"
																		},
																		"nativeSrc": "3918:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3918:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3943:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3943:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3914:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:12"
																},
																"nativeSrc": "3914:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3914:32:12"
															},
															"nativeSrc": "3911:119:12",
															"nodeType": "YulIf",
															"src": "3911:119:12"
														},
														{
															"nativeSrc": "4040:117:12",
															"nodeType": "YulBlock",
															"src": "4040:117:12",
															"statements": [
																{
																	"nativeSrc": "4055:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4055:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4069:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4069:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4059:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4059:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4084:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4084:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4119:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4119:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4130:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4130:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4115:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4115:3:12"
																				},
																				"nativeSrc": "4115:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4115:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4139:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4139:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4094:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4094:20:12"
																		},
																		"nativeSrc": "4094:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4094:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4084:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4084:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4167:118:12",
															"nodeType": "YulBlock",
															"src": "4167:118:12",
															"statements": [
																{
																	"nativeSrc": "4182:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4182:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4196:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4196:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4186:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4186:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4212:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4212:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4247:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4247:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4258:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4258:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4243:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4243:3:12"
																				},
																				"nativeSrc": "4243:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4243:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4267:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4267:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4222:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4222:20:12"
																		},
																		"nativeSrc": "4222:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4222:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4212:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4212:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3818:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3863:9:12",
														"nodeType": "YulTypedName",
														"src": "3863:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3874:7:12",
														"nodeType": "YulTypedName",
														"src": "3874:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3886:6:12",
														"nodeType": "YulTypedName",
														"src": "3886:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3894:6:12",
														"nodeType": "YulTypedName",
														"src": "3894:6:12",
														"type": ""
													}
												],
												"src": "3818:474:12"
											},
											{
												"body": {
													"nativeSrc": "4357:50:12",
													"nodeType": "YulBlock",
													"src": "4357:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4374:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4374:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4394:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4394:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4379:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "4379:14:12"
																		},
																		"nativeSrc": "4379:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4379:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4367:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4367:6:12"
																},
																"nativeSrc": "4367:34:12",
																"nodeType": "YulFunctionCall",
																"src": "4367:34:12"
															},
															"nativeSrc": "4367:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "4367:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "4298:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4345:5:12",
														"nodeType": "YulTypedName",
														"src": "4345:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4352:3:12",
														"nodeType": "YulTypedName",
														"src": "4352:3:12",
														"type": ""
													}
												],
												"src": "4298:109:12"
											},
											{
												"body": {
													"nativeSrc": "4505:118:12",
													"nodeType": "YulBlock",
													"src": "4505:118:12",
													"statements": [
														{
															"nativeSrc": "4515:26:12",
															"nodeType": "YulAssignment",
															"src": "4515:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4527:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4527:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4538:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4538:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4523:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4523:3:12"
																},
																"nativeSrc": "4523:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4523:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4515:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4515:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4589:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4589:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4602:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4602:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4613:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4613:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4598:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4598:3:12"
																		},
																		"nativeSrc": "4598:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4551:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "4551:37:12"
																},
																"nativeSrc": "4551:65:12",
																"nodeType": "YulFunctionCall",
																"src": "4551:65:12"
															},
															"nativeSrc": "4551:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "4551:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4413:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4477:9:12",
														"nodeType": "YulTypedName",
														"src": "4477:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4489:6:12",
														"nodeType": "YulTypedName",
														"src": "4489:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4500:4:12",
														"nodeType": "YulTypedName",
														"src": "4500:4:12",
														"type": ""
													}
												],
												"src": "4413:210:12"
											},
											{
												"body": {
													"nativeSrc": "4694:53:12",
													"nodeType": "YulBlock",
													"src": "4694:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4711:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4711:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4734:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4734:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4716:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4716:17:12"
																		},
																		"nativeSrc": "4716:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4716:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4704:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4704:6:12"
																},
																"nativeSrc": "4704:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4704:37:12"
															},
															"nativeSrc": "4704:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4704:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4629:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4682:5:12",
														"nodeType": "YulTypedName",
														"src": "4682:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4689:3:12",
														"nodeType": "YulTypedName",
														"src": "4689:3:12",
														"type": ""
													}
												],
												"src": "4629:118:12"
											},
											{
												"body": {
													"nativeSrc": "4851:124:12",
													"nodeType": "YulBlock",
													"src": "4851:124:12",
													"statements": [
														{
															"nativeSrc": "4861:26:12",
															"nodeType": "YulAssignment",
															"src": "4861:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4873:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4873:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4884:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4884:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4869:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4869:3:12"
																},
																"nativeSrc": "4869:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4869:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4861:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4861:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4941:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4941:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4954:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4954:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4965:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4965:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4950:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4950:3:12"
																		},
																		"nativeSrc": "4950:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4950:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4897:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4897:43:12"
																},
																"nativeSrc": "4897:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4897:71:12"
															},
															"nativeSrc": "4897:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4897:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4753:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4823:9:12",
														"nodeType": "YulTypedName",
														"src": "4823:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4835:6:12",
														"nodeType": "YulTypedName",
														"src": "4835:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4846:4:12",
														"nodeType": "YulTypedName",
														"src": "4846:4:12",
														"type": ""
													}
												],
												"src": "4753:222:12"
											},
											{
												"body": {
													"nativeSrc": "5064:391:12",
													"nodeType": "YulBlock",
													"src": "5064:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5110:83:12",
																"nodeType": "YulBlock",
																"src": "5110:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5112:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5112:77:12"
																			},
																			"nativeSrc": "5112:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5112:79:12"
																		},
																		"nativeSrc": "5112:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5112:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5085:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5085:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5094:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5094:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5081:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5081:3:12"
																		},
																		"nativeSrc": "5081:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5081:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5106:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5106:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5077:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5077:3:12"
																},
																"nativeSrc": "5077:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5077:32:12"
															},
															"nativeSrc": "5074:119:12",
															"nodeType": "YulIf",
															"src": "5074:119:12"
														},
														{
															"nativeSrc": "5203:117:12",
															"nodeType": "YulBlock",
															"src": "5203:117:12",
															"statements": [
																{
																	"nativeSrc": "5218:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5218:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5232:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5232:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5222:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5222:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5247:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5247:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5282:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5282:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5293:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5293:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5278:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5278:3:12"
																				},
																				"nativeSrc": "5278:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5278:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5302:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5302:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5257:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5257:20:12"
																		},
																		"nativeSrc": "5257:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5257:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5247:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5247:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5330:118:12",
															"nodeType": "YulBlock",
															"src": "5330:118:12",
															"statements": [
																{
																	"nativeSrc": "5345:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5345:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5359:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5359:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5349:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5349:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5375:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5375:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5410:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5410:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5421:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5421:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5406:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5406:3:12"
																				},
																				"nativeSrc": "5406:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5406:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5430:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5430:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5385:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5385:20:12"
																		},
																		"nativeSrc": "5385:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5385:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5375:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5375:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "4981:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5026:9:12",
														"nodeType": "YulTypedName",
														"src": "5026:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5037:7:12",
														"nodeType": "YulTypedName",
														"src": "5037:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5049:6:12",
														"nodeType": "YulTypedName",
														"src": "5049:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5057:6:12",
														"nodeType": "YulTypedName",
														"src": "5057:6:12",
														"type": ""
													}
												],
												"src": "4981:474:12"
											},
											{
												"body": {
													"nativeSrc": "5557:73:12",
													"nodeType": "YulBlock",
													"src": "5557:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5574:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5574:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5579:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5579:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5567:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5567:6:12"
																},
																"nativeSrc": "5567:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5567:19:12"
															},
															"nativeSrc": "5567:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "5567:19:12"
														},
														{
															"nativeSrc": "5595:29:12",
															"nodeType": "YulAssignment",
															"src": "5595:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5614:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5614:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5619:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5619:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5610:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5610:3:12"
																},
																"nativeSrc": "5610:14:12",
																"nodeType": "YulFunctionCall",
																"src": "5610:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5595:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "5595:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5461:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5529:3:12",
														"nodeType": "YulTypedName",
														"src": "5529:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5534:6:12",
														"nodeType": "YulTypedName",
														"src": "5534:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5545:11:12",
														"nodeType": "YulTypedName",
														"src": "5545:11:12",
														"type": ""
													}
												],
												"src": "5461:169:12"
											},
											{
												"body": {
													"nativeSrc": "5742:55:12",
													"nodeType": "YulBlock",
													"src": "5742:55:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5764:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5764:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5772:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5772:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5760:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5760:3:12"
																		},
																		"nativeSrc": "5760:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5760:14:12"
																	},
																	{
																		"hexValue": "496e76616c696420626f78",
																		"kind": "string",
																		"nativeSrc": "5776:13:12",
																		"nodeType": "YulLiteral",
																		"src": "5776:13:12",
																		"type": "",
																		"value": "Invalid box"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5753:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5753:6:12"
																},
																"nativeSrc": "5753:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5753:37:12"
															},
															"nativeSrc": "5753:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5753:37:12"
														}
													]
												},
												"name": "store_literal_in_memory_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95",
												"nativeSrc": "5636:161:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5734:6:12",
														"nodeType": "YulTypedName",
														"src": "5734:6:12",
														"type": ""
													}
												],
												"src": "5636:161:12"
											},
											{
												"body": {
													"nativeSrc": "5949:220:12",
													"nodeType": "YulBlock",
													"src": "5949:220:12",
													"statements": [
														{
															"nativeSrc": "5959:74:12",
															"nodeType": "YulAssignment",
															"src": "5959:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6025:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6025:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6030:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6030:2:12",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5966:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "5966:58:12"
																},
																"nativeSrc": "5966:67:12",
																"nodeType": "YulFunctionCall",
																"src": "5966:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5959:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5959:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6131:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6131:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95",
																	"nativeSrc": "6042:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "6042:88:12"
																},
																"nativeSrc": "6042:93:12",
																"nodeType": "YulFunctionCall",
																"src": "6042:93:12"
															},
															"nativeSrc": "6042:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "6042:93:12"
														},
														{
															"nativeSrc": "6144:19:12",
															"nodeType": "YulAssignment",
															"src": "6144:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6155:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6155:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6160:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6160:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6151:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6151:3:12"
																},
																"nativeSrc": "6151:12:12",
																"nodeType": "YulFunctionCall",
																"src": "6151:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6144:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6144:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5803:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5937:3:12",
														"nodeType": "YulTypedName",
														"src": "5937:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5945:3:12",
														"nodeType": "YulTypedName",
														"src": "5945:3:12",
														"type": ""
													}
												],
												"src": "5803:366:12"
											},
											{
												"body": {
													"nativeSrc": "6346:248:12",
													"nodeType": "YulBlock",
													"src": "6346:248:12",
													"statements": [
														{
															"nativeSrc": "6356:26:12",
															"nodeType": "YulAssignment",
															"src": "6356:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6368:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6368:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6379:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6379:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6364:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6364:3:12"
																},
																"nativeSrc": "6364:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6364:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6356:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6356:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6403:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6403:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6414:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6414:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6399:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6399:3:12"
																		},
																		"nativeSrc": "6399:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6399:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6422:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6422:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6428:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6428:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6418:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6418:3:12"
																		},
																		"nativeSrc": "6418:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6418:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6392:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6392:6:12"
																},
																"nativeSrc": "6392:47:12",
																"nodeType": "YulFunctionCall",
																"src": "6392:47:12"
															},
															"nativeSrc": "6392:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "6392:47:12"
														},
														{
															"nativeSrc": "6448:139:12",
															"nodeType": "YulAssignment",
															"src": "6448:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6582:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6582:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6456:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "6456:124:12"
																},
																"nativeSrc": "6456:131:12",
																"nodeType": "YulFunctionCall",
																"src": "6456:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6448:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6448:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6175:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6326:9:12",
														"nodeType": "YulTypedName",
														"src": "6326:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6341:4:12",
														"nodeType": "YulTypedName",
														"src": "6341:4:12",
														"type": ""
													}
												],
												"src": "6175:419:12"
											},
											{
												"body": {
													"nativeSrc": "6706:52:12",
													"nodeType": "YulBlock",
													"src": "6706:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6728:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6728:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6736:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6736:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6724:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6724:3:12"
																		},
																		"nativeSrc": "6724:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6724:14:12"
																	},
																	{
																		"hexValue": "4e6f207374616b65",
																		"kind": "string",
																		"nativeSrc": "6740:10:12",
																		"nodeType": "YulLiteral",
																		"src": "6740:10:12",
																		"type": "",
																		"value": "No stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6717:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6717:6:12"
																},
																"nativeSrc": "6717:34:12",
																"nodeType": "YulFunctionCall",
																"src": "6717:34:12"
															},
															"nativeSrc": "6717:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "6717:34:12"
														}
													]
												},
												"name": "store_literal_in_memory_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8",
												"nativeSrc": "6600:158:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6698:6:12",
														"nodeType": "YulTypedName",
														"src": "6698:6:12",
														"type": ""
													}
												],
												"src": "6600:158:12"
											},
											{
												"body": {
													"nativeSrc": "6910:219:12",
													"nodeType": "YulBlock",
													"src": "6910:219:12",
													"statements": [
														{
															"nativeSrc": "6920:73:12",
															"nodeType": "YulAssignment",
															"src": "6920:73:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6986:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6986:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6991:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6927:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "6927:58:12"
																},
																"nativeSrc": "6927:66:12",
																"nodeType": "YulFunctionCall",
																"src": "6927:66:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6920:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6920:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7091:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7091:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8",
																	"nativeSrc": "7002:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "7002:88:12"
																},
																"nativeSrc": "7002:93:12",
																"nodeType": "YulFunctionCall",
																"src": "7002:93:12"
															},
															"nativeSrc": "7002:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "7002:93:12"
														},
														{
															"nativeSrc": "7104:19:12",
															"nodeType": "YulAssignment",
															"src": "7104:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7115:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7115:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7120:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7120:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7111:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7111:3:12"
																},
																"nativeSrc": "7111:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7111:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7104:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7104:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6764:365:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6898:3:12",
														"nodeType": "YulTypedName",
														"src": "6898:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6906:3:12",
														"nodeType": "YulTypedName",
														"src": "6906:3:12",
														"type": ""
													}
												],
												"src": "6764:365:12"
											},
											{
												"body": {
													"nativeSrc": "7306:248:12",
													"nodeType": "YulBlock",
													"src": "7306:248:12",
													"statements": [
														{
															"nativeSrc": "7316:26:12",
															"nodeType": "YulAssignment",
															"src": "7316:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7328:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7328:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7339:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7339:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7324:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7324:3:12"
																},
																"nativeSrc": "7324:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7324:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7316:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7316:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7363:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7363:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7374:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7374:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7359:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7359:3:12"
																		},
																		"nativeSrc": "7359:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7359:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7382:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "7382:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7388:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7388:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7378:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7378:3:12"
																		},
																		"nativeSrc": "7378:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7378:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7352:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7352:6:12"
																},
																"nativeSrc": "7352:47:12",
																"nodeType": "YulFunctionCall",
																"src": "7352:47:12"
															},
															"nativeSrc": "7352:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "7352:47:12"
														},
														{
															"nativeSrc": "7408:139:12",
															"nodeType": "YulAssignment",
															"src": "7408:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7542:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7542:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7416:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "7416:124:12"
																},
																"nativeSrc": "7416:131:12",
																"nodeType": "YulFunctionCall",
																"src": "7416:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7408:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7408:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7135:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7286:9:12",
														"nodeType": "YulTypedName",
														"src": "7286:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7301:4:12",
														"nodeType": "YulTypedName",
														"src": "7301:4:12",
														"type": ""
													}
												],
												"src": "7135:419:12"
											},
											{
												"body": {
													"nativeSrc": "7588:152:12",
													"nodeType": "YulBlock",
													"src": "7588:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7605:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7605:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7608:77:12",
																		"nodeType": "YulLiteral",
																		"src": "7608:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7598:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7598:6:12"
																},
																"nativeSrc": "7598:88:12",
																"nodeType": "YulFunctionCall",
																"src": "7598:88:12"
															},
															"nativeSrc": "7598:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "7598:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7702:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7702:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7705:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7705:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7695:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7695:6:12"
																},
																"nativeSrc": "7695:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7695:15:12"
															},
															"nativeSrc": "7695:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7695:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7726:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7726:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7729:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7729:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7719:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7719:6:12"
																},
																"nativeSrc": "7719:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7719:15:12"
															},
															"nativeSrc": "7719:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7719:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7560:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7560:180:12"
											},
											{
												"body": {
													"nativeSrc": "7790:147:12",
													"nodeType": "YulBlock",
													"src": "7790:147:12",
													"statements": [
														{
															"nativeSrc": "7800:25:12",
															"nodeType": "YulAssignment",
															"src": "7800:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7823:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7823:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7805:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7805:17:12"
																},
																"nativeSrc": "7805:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7805:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7800:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7800:1:12"
																}
															]
														},
														{
															"nativeSrc": "7834:25:12",
															"nodeType": "YulAssignment",
															"src": "7834:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7857:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7857:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7839:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7839:17:12"
																},
																"nativeSrc": "7839:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7839:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7834:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7834:1:12"
																}
															]
														},
														{
															"nativeSrc": "7868:16:12",
															"nodeType": "YulAssignment",
															"src": "7868:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7879:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7879:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7882:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7882:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7875:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7875:3:12"
																},
																"nativeSrc": "7875:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7875:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7868:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7868:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7908:22:12",
																"nodeType": "YulBlock",
																"src": "7908:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7910:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7910:16:12"
																			},
																			"nativeSrc": "7910:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7910:18:12"
																		},
																		"nativeSrc": "7910:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7910:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7900:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7900:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7903:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7903:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7897:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7897:2:12"
																},
																"nativeSrc": "7897:10:12",
																"nodeType": "YulFunctionCall",
																"src": "7897:10:12"
															},
															"nativeSrc": "7894:36:12",
															"nodeType": "YulIf",
															"src": "7894:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7746:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7777:1:12",
														"nodeType": "YulTypedName",
														"src": "7777:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7780:1:12",
														"nodeType": "YulTypedName",
														"src": "7780:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7786:3:12",
														"nodeType": "YulTypedName",
														"src": "7786:3:12",
														"type": ""
													}
												],
												"src": "7746:191:12"
											},
											{
												"body": {
													"nativeSrc": "8049:56:12",
													"nodeType": "YulBlock",
													"src": "8049:56:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8071:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8071:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8079:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8079:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8067:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8067:3:12"
																		},
																		"nativeSrc": "8067:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8067:14:12"
																	},
																	{
																		"hexValue": "4e6f7420756e6c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "8083:14:12",
																		"nodeType": "YulLiteral",
																		"src": "8083:14:12",
																		"type": "",
																		"value": "Not unlocked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8060:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8060:6:12"
																},
																"nativeSrc": "8060:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8060:38:12"
															},
															"nativeSrc": "8060:38:12",
															"nodeType": "YulExpressionStatement",
															"src": "8060:38:12"
														}
													]
												},
												"name": "store_literal_in_memory_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077",
												"nativeSrc": "7943:162:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8041:6:12",
														"nodeType": "YulTypedName",
														"src": "8041:6:12",
														"type": ""
													}
												],
												"src": "7943:162:12"
											},
											{
												"body": {
													"nativeSrc": "8257:220:12",
													"nodeType": "YulBlock",
													"src": "8257:220:12",
													"statements": [
														{
															"nativeSrc": "8267:74:12",
															"nodeType": "YulAssignment",
															"src": "8267:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8333:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8333:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8338:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8338:2:12",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8274:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "8274:58:12"
																},
																"nativeSrc": "8274:67:12",
																"nodeType": "YulFunctionCall",
																"src": "8274:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8267:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8267:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8439:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8439:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077",
																	"nativeSrc": "8350:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "8350:88:12"
																},
																"nativeSrc": "8350:93:12",
																"nodeType": "YulFunctionCall",
																"src": "8350:93:12"
															},
															"nativeSrc": "8350:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "8350:93:12"
														},
														{
															"nativeSrc": "8452:19:12",
															"nodeType": "YulAssignment",
															"src": "8452:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8463:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8463:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8468:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8468:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8459:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8459:3:12"
																},
																"nativeSrc": "8459:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8459:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8452:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8452:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8111:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8245:3:12",
														"nodeType": "YulTypedName",
														"src": "8245:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8253:3:12",
														"nodeType": "YulTypedName",
														"src": "8253:3:12",
														"type": ""
													}
												],
												"src": "8111:366:12"
											},
											{
												"body": {
													"nativeSrc": "8654:248:12",
													"nodeType": "YulBlock",
													"src": "8654:248:12",
													"statements": [
														{
															"nativeSrc": "8664:26:12",
															"nodeType": "YulAssignment",
															"src": "8664:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8676:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8676:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8687:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8687:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8672:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8672:3:12"
																},
																"nativeSrc": "8672:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8672:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8664:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8664:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8711:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8711:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8722:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8722:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8707:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8707:3:12"
																		},
																		"nativeSrc": "8707:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8707:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8730:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "8730:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8736:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8736:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8726:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8726:3:12"
																		},
																		"nativeSrc": "8726:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8726:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8700:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8700:6:12"
																},
																"nativeSrc": "8700:47:12",
																"nodeType": "YulFunctionCall",
																"src": "8700:47:12"
															},
															"nativeSrc": "8700:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "8700:47:12"
														},
														{
															"nativeSrc": "8756:139:12",
															"nodeType": "YulAssignment",
															"src": "8756:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8890:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8890:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8764:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "8764:124:12"
																},
																"nativeSrc": "8764:131:12",
																"nodeType": "YulFunctionCall",
																"src": "8764:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8756:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8756:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8483:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8634:9:12",
														"nodeType": "YulTypedName",
														"src": "8634:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8649:4:12",
														"nodeType": "YulTypedName",
														"src": "8649:4:12",
														"type": ""
													}
												],
												"src": "8483:419:12"
											},
											{
												"body": {
													"nativeSrc": "8936:152:12",
													"nodeType": "YulBlock",
													"src": "8936:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8953:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8953:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8956:77:12",
																		"nodeType": "YulLiteral",
																		"src": "8956:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8946:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8946:6:12"
																},
																"nativeSrc": "8946:88:12",
																"nodeType": "YulFunctionCall",
																"src": "8946:88:12"
															},
															"nativeSrc": "8946:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "8946:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9050:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9050:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9053:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9053:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9043:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9043:6:12"
																},
																"nativeSrc": "9043:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9043:15:12"
															},
															"nativeSrc": "9043:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9043:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9074:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9074:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9077:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9077:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9067:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9067:6:12"
																},
																"nativeSrc": "9067:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9067:15:12"
															},
															"nativeSrc": "9067:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9067:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8908:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "8908:180:12"
											},
											{
												"body": {
													"nativeSrc": "9136:143:12",
													"nodeType": "YulBlock",
													"src": "9136:143:12",
													"statements": [
														{
															"nativeSrc": "9146:25:12",
															"nodeType": "YulAssignment",
															"src": "9146:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9169:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9169:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9151:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9151:17:12"
																},
																"nativeSrc": "9151:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9151:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9146:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9146:1:12"
																}
															]
														},
														{
															"nativeSrc": "9180:25:12",
															"nodeType": "YulAssignment",
															"src": "9180:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9203:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9203:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9185:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9185:17:12"
																},
																"nativeSrc": "9185:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9185:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9180:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9180:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9227:22:12",
																"nodeType": "YulBlock",
																"src": "9227:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9229:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9229:16:12"
																			},
																			"nativeSrc": "9229:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9229:18:12"
																		},
																		"nativeSrc": "9229:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9229:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9224:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9224:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9217:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9217:6:12"
																},
																"nativeSrc": "9217:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9217:9:12"
															},
															"nativeSrc": "9214:35:12",
															"nodeType": "YulIf",
															"src": "9214:35:12"
														},
														{
															"nativeSrc": "9259:14:12",
															"nodeType": "YulAssignment",
															"src": "9259:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9268:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9268:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9271:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9271:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9264:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9264:3:12"
																},
																"nativeSrc": "9264:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9264:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9259:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9259:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9094:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9125:1:12",
														"nodeType": "YulTypedName",
														"src": "9125:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9128:1:12",
														"nodeType": "YulTypedName",
														"src": "9128:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9134:1:12",
														"nodeType": "YulTypedName",
														"src": "9134:1:12",
														"type": ""
													}
												],
												"src": "9094:185:12"
											},
											{
												"body": {
													"nativeSrc": "9330:149:12",
													"nodeType": "YulBlock",
													"src": "9330:149:12",
													"statements": [
														{
															"nativeSrc": "9340:25:12",
															"nodeType": "YulAssignment",
															"src": "9340:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9363:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9363:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9345:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9345:17:12"
																},
																"nativeSrc": "9345:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9345:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9340:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9340:1:12"
																}
															]
														},
														{
															"nativeSrc": "9374:25:12",
															"nodeType": "YulAssignment",
															"src": "9374:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9397:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9397:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9379:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9379:17:12"
																},
																"nativeSrc": "9379:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9379:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9374:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9374:1:12"
																}
															]
														},
														{
															"nativeSrc": "9408:17:12",
															"nodeType": "YulAssignment",
															"src": "9408:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9420:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9420:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9423:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9423:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9416:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9416:3:12"
																},
																"nativeSrc": "9416:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9416:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9408:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9408:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9450:22:12",
																"nodeType": "YulBlock",
																"src": "9450:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9452:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9452:16:12"
																			},
																			"nativeSrc": "9452:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9452:18:12"
																		},
																		"nativeSrc": "9452:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9452:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9441:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9441:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9447:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9447:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9438:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9438:2:12"
																},
																"nativeSrc": "9438:11:12",
																"nodeType": "YulFunctionCall",
																"src": "9438:11:12"
															},
															"nativeSrc": "9435:37:12",
															"nodeType": "YulIf",
															"src": "9435:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9285:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9316:1:12",
														"nodeType": "YulTypedName",
														"src": "9316:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9319:1:12",
														"nodeType": "YulTypedName",
														"src": "9319:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9325:4:12",
														"nodeType": "YulTypedName",
														"src": "9325:4:12",
														"type": ""
													}
												],
												"src": "9285:194:12"
											},
											{
												"body": {
													"nativeSrc": "9591:58:12",
													"nodeType": "YulBlock",
													"src": "9591:58:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9613:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9613:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9621:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9621:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9609:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9609:3:12"
																		},
																		"nativeSrc": "9609:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9609:14:12"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "9625:16:12",
																		"nodeType": "YulLiteral",
																		"src": "9625:16:12",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9602:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9602:6:12"
																},
																"nativeSrc": "9602:40:12",
																"nodeType": "YulFunctionCall",
																"src": "9602:40:12"
															},
															"nativeSrc": "9602:40:12",
															"nodeType": "YulExpressionStatement",
															"src": "9602:40:12"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nativeSrc": "9485:164:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9583:6:12",
														"nodeType": "YulTypedName",
														"src": "9583:6:12",
														"type": ""
													}
												],
												"src": "9485:164:12"
											},
											{
												"body": {
													"nativeSrc": "9801:220:12",
													"nodeType": "YulBlock",
													"src": "9801:220:12",
													"statements": [
														{
															"nativeSrc": "9811:74:12",
															"nodeType": "YulAssignment",
															"src": "9811:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9877:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9877:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9882:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9882:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9818:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "9818:58:12"
																},
																"nativeSrc": "9818:67:12",
																"nodeType": "YulFunctionCall",
																"src": "9818:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9811:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9811:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9983:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9983:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nativeSrc": "9894:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "9894:88:12"
																},
																"nativeSrc": "9894:93:12",
																"nodeType": "YulFunctionCall",
																"src": "9894:93:12"
															},
															"nativeSrc": "9894:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "9894:93:12"
														},
														{
															"nativeSrc": "9996:19:12",
															"nodeType": "YulAssignment",
															"src": "9996:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10007:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10007:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10012:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10012:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10003:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10003:3:12"
																},
																"nativeSrc": "10003:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10003:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9996:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9996:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9655:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9789:3:12",
														"nodeType": "YulTypedName",
														"src": "9789:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9797:3:12",
														"nodeType": "YulTypedName",
														"src": "9797:3:12",
														"type": ""
													}
												],
												"src": "9655:366:12"
											},
											{
												"body": {
													"nativeSrc": "10198:248:12",
													"nodeType": "YulBlock",
													"src": "10198:248:12",
													"statements": [
														{
															"nativeSrc": "10208:26:12",
															"nodeType": "YulAssignment",
															"src": "10208:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10220:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10220:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10231:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10231:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10216:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10216:3:12"
																},
																"nativeSrc": "10216:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10216:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10208:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10208:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10255:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10255:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10266:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10266:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10251:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10251:3:12"
																		},
																		"nativeSrc": "10251:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10251:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10274:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10274:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10280:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10280:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10270:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10270:3:12"
																		},
																		"nativeSrc": "10270:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10270:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10244:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10244:6:12"
																},
																"nativeSrc": "10244:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10244:47:12"
															},
															"nativeSrc": "10244:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10244:47:12"
														},
														{
															"nativeSrc": "10300:139:12",
															"nodeType": "YulAssignment",
															"src": "10300:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10434:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10434:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10308:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "10308:124:12"
																},
																"nativeSrc": "10308:131:12",
																"nodeType": "YulFunctionCall",
																"src": "10308:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10300:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10300:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10027:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10178:9:12",
														"nodeType": "YulTypedName",
														"src": "10178:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10193:4:12",
														"nodeType": "YulTypedName",
														"src": "10193:4:12",
														"type": ""
													}
												],
												"src": "10027:419:12"
											},
											{
												"body": {
													"nativeSrc": "10558:62:12",
													"nodeType": "YulBlock",
													"src": "10558:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10580:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10580:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10588:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10588:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10576:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10576:3:12"
																		},
																		"nativeSrc": "10576:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10576:14:12"
																	},
																	{
																		"hexValue": "556e6c6f636b206d6f646520616374697665",
																		"kind": "string",
																		"nativeSrc": "10592:20:12",
																		"nodeType": "YulLiteral",
																		"src": "10592:20:12",
																		"type": "",
																		"value": "Unlock mode active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10569:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10569:6:12"
																},
																"nativeSrc": "10569:44:12",
																"nodeType": "YulFunctionCall",
																"src": "10569:44:12"
															},
															"nativeSrc": "10569:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "10569:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e",
												"nativeSrc": "10452:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10550:6:12",
														"nodeType": "YulTypedName",
														"src": "10550:6:12",
														"type": ""
													}
												],
												"src": "10452:168:12"
											},
											{
												"body": {
													"nativeSrc": "10772:220:12",
													"nodeType": "YulBlock",
													"src": "10772:220:12",
													"statements": [
														{
															"nativeSrc": "10782:74:12",
															"nodeType": "YulAssignment",
															"src": "10782:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10848:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10848:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10853:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10853:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10789:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10789:58:12"
																},
																"nativeSrc": "10789:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10789:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10782:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10782:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10954:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10954:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e",
																	"nativeSrc": "10865:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "10865:88:12"
																},
																"nativeSrc": "10865:93:12",
																"nodeType": "YulFunctionCall",
																"src": "10865:93:12"
															},
															"nativeSrc": "10865:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "10865:93:12"
														},
														{
															"nativeSrc": "10967:19:12",
															"nodeType": "YulAssignment",
															"src": "10967:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10978:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10978:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10983:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10983:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10974:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10974:3:12"
																},
																"nativeSrc": "10974:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10974:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10967:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10967:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10626:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10760:3:12",
														"nodeType": "YulTypedName",
														"src": "10760:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10768:3:12",
														"nodeType": "YulTypedName",
														"src": "10768:3:12",
														"type": ""
													}
												],
												"src": "10626:366:12"
											},
											{
												"body": {
													"nativeSrc": "11169:248:12",
													"nodeType": "YulBlock",
													"src": "11169:248:12",
													"statements": [
														{
															"nativeSrc": "11179:26:12",
															"nodeType": "YulAssignment",
															"src": "11179:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11191:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11191:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11202:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11202:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11187:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11187:3:12"
																},
																"nativeSrc": "11187:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11187:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11179:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11179:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11226:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11226:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11237:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11237:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11222:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11222:3:12"
																		},
																		"nativeSrc": "11222:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11222:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11245:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11245:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11251:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11251:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11241:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11241:3:12"
																		},
																		"nativeSrc": "11241:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11241:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11215:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11215:6:12"
																},
																"nativeSrc": "11215:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11215:47:12"
															},
															"nativeSrc": "11215:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11215:47:12"
														},
														{
															"nativeSrc": "11271:139:12",
															"nodeType": "YulAssignment",
															"src": "11271:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11405:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11405:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11279:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11279:124:12"
																},
																"nativeSrc": "11279:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11279:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11271:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11271:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10998:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11149:9:12",
														"nodeType": "YulTypedName",
														"src": "11149:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11164:4:12",
														"nodeType": "YulTypedName",
														"src": "11164:4:12",
														"type": ""
													}
												],
												"src": "10998:419:12"
											},
											{
												"body": {
													"nativeSrc": "11529:57:12",
													"nodeType": "YulBlock",
													"src": "11529:57:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11551:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11551:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11559:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11559:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11547:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11547:3:12"
																		},
																		"nativeSrc": "11547:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11547:14:12"
																	},
																	{
																		"hexValue": "5374616b696e6720656e646564",
																		"kind": "string",
																		"nativeSrc": "11563:15:12",
																		"nodeType": "YulLiteral",
																		"src": "11563:15:12",
																		"type": "",
																		"value": "Staking ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11540:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11540:6:12"
																},
																"nativeSrc": "11540:39:12",
																"nodeType": "YulFunctionCall",
																"src": "11540:39:12"
															},
															"nativeSrc": "11540:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "11540:39:12"
														}
													]
												},
												"name": "store_literal_in_memory_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1",
												"nativeSrc": "11423:163:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11521:6:12",
														"nodeType": "YulTypedName",
														"src": "11521:6:12",
														"type": ""
													}
												],
												"src": "11423:163:12"
											},
											{
												"body": {
													"nativeSrc": "11738:220:12",
													"nodeType": "YulBlock",
													"src": "11738:220:12",
													"statements": [
														{
															"nativeSrc": "11748:74:12",
															"nodeType": "YulAssignment",
															"src": "11748:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11814:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11814:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11819:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11819:2:12",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11755:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11755:58:12"
																},
																"nativeSrc": "11755:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11755:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11748:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11748:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11920:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11920:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1",
																	"nativeSrc": "11831:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11831:88:12"
																},
																"nativeSrc": "11831:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11831:93:12"
															},
															"nativeSrc": "11831:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11831:93:12"
														},
														{
															"nativeSrc": "11933:19:12",
															"nodeType": "YulAssignment",
															"src": "11933:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11944:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11944:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11949:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11949:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11940:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11940:3:12"
																},
																"nativeSrc": "11940:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11940:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11933:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11933:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11592:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11726:3:12",
														"nodeType": "YulTypedName",
														"src": "11726:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11734:3:12",
														"nodeType": "YulTypedName",
														"src": "11734:3:12",
														"type": ""
													}
												],
												"src": "11592:366:12"
											},
											{
												"body": {
													"nativeSrc": "12135:248:12",
													"nodeType": "YulBlock",
													"src": "12135:248:12",
													"statements": [
														{
															"nativeSrc": "12145:26:12",
															"nodeType": "YulAssignment",
															"src": "12145:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12157:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12157:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12168:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12168:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12153:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12153:3:12"
																},
																"nativeSrc": "12153:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12153:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12145:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12145:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12192:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12192:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12203:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12203:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12188:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12188:3:12"
																		},
																		"nativeSrc": "12188:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12188:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12211:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12211:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12217:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12217:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12207:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12207:3:12"
																		},
																		"nativeSrc": "12207:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12207:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12181:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12181:6:12"
																},
																"nativeSrc": "12181:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12181:47:12"
															},
															"nativeSrc": "12181:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12181:47:12"
														},
														{
															"nativeSrc": "12237:139:12",
															"nodeType": "YulAssignment",
															"src": "12237:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12371:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12371:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12245:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12245:124:12"
																},
																"nativeSrc": "12245:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12245:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12237:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12237:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11964:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12115:9:12",
														"nodeType": "YulTypedName",
														"src": "12115:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12130:4:12",
														"nodeType": "YulTypedName",
														"src": "12130:4:12",
														"type": ""
													}
												],
												"src": "11964:419:12"
											},
											{
												"body": {
													"nativeSrc": "12495:76:12",
													"nodeType": "YulBlock",
													"src": "12495:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12517:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12517:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12525:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12525:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12513:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12513:3:12"
																		},
																		"nativeSrc": "12513:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12513:14:12"
																	},
																	{
																		"hexValue": "426f7820312064697361626c6564206f7220616c7265616479207374616b6564",
																		"kind": "string",
																		"nativeSrc": "12529:34:12",
																		"nodeType": "YulLiteral",
																		"src": "12529:34:12",
																		"type": "",
																		"value": "Box 1 disabled or already staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12506:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12506:6:12"
																},
																"nativeSrc": "12506:58:12",
																"nodeType": "YulFunctionCall",
																"src": "12506:58:12"
															},
															"nativeSrc": "12506:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "12506:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a",
												"nativeSrc": "12389:182:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12487:6:12",
														"nodeType": "YulTypedName",
														"src": "12487:6:12",
														"type": ""
													}
												],
												"src": "12389:182:12"
											},
											{
												"body": {
													"nativeSrc": "12723:220:12",
													"nodeType": "YulBlock",
													"src": "12723:220:12",
													"statements": [
														{
															"nativeSrc": "12733:74:12",
															"nodeType": "YulAssignment",
															"src": "12733:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12799:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12799:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12804:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12804:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12740:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12740:58:12"
																},
																"nativeSrc": "12740:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12740:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12733:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12733:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12905:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12905:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a",
																	"nativeSrc": "12816:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12816:88:12"
																},
																"nativeSrc": "12816:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12816:93:12"
															},
															"nativeSrc": "12816:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12816:93:12"
														},
														{
															"nativeSrc": "12918:19:12",
															"nodeType": "YulAssignment",
															"src": "12918:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12929:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12929:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12934:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12934:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12925:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12925:3:12"
																},
																"nativeSrc": "12925:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12925:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12918:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12918:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12577:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12711:3:12",
														"nodeType": "YulTypedName",
														"src": "12711:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12719:3:12",
														"nodeType": "YulTypedName",
														"src": "12719:3:12",
														"type": ""
													}
												],
												"src": "12577:366:12"
											},
											{
												"body": {
													"nativeSrc": "13120:248:12",
													"nodeType": "YulBlock",
													"src": "13120:248:12",
													"statements": [
														{
															"nativeSrc": "13130:26:12",
															"nodeType": "YulAssignment",
															"src": "13130:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13142:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13142:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13153:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13153:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13138:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13138:3:12"
																},
																"nativeSrc": "13138:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13138:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13130:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13130:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13177:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13177:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13188:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13188:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13173:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13173:3:12"
																		},
																		"nativeSrc": "13173:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13173:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13196:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13196:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13202:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13202:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13192:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13192:3:12"
																		},
																		"nativeSrc": "13192:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13192:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13166:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13166:6:12"
																},
																"nativeSrc": "13166:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13166:47:12"
															},
															"nativeSrc": "13166:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13166:47:12"
														},
														{
															"nativeSrc": "13222:139:12",
															"nodeType": "YulAssignment",
															"src": "13222:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13356:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13356:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13230:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13230:124:12"
																},
																"nativeSrc": "13230:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13230:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13222:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13222:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12949:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13100:9:12",
														"nodeType": "YulTypedName",
														"src": "13100:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13115:4:12",
														"nodeType": "YulTypedName",
														"src": "13115:4:12",
														"type": ""
													}
												],
												"src": "12949:419:12"
											},
											{
												"body": {
													"nativeSrc": "13480:76:12",
													"nodeType": "YulBlock",
													"src": "13480:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13502:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13502:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13510:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13510:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13498:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13498:3:12"
																		},
																		"nativeSrc": "13498:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13498:14:12"
																	},
																	{
																		"hexValue": "426f7820322064697361626c6564206f7220616c7265616479207374616b6564",
																		"kind": "string",
																		"nativeSrc": "13514:34:12",
																		"nodeType": "YulLiteral",
																		"src": "13514:34:12",
																		"type": "",
																		"value": "Box 2 disabled or already staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13491:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13491:6:12"
																},
																"nativeSrc": "13491:58:12",
																"nodeType": "YulFunctionCall",
																"src": "13491:58:12"
															},
															"nativeSrc": "13491:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "13491:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85",
												"nativeSrc": "13374:182:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13472:6:12",
														"nodeType": "YulTypedName",
														"src": "13472:6:12",
														"type": ""
													}
												],
												"src": "13374:182:12"
											},
											{
												"body": {
													"nativeSrc": "13708:220:12",
													"nodeType": "YulBlock",
													"src": "13708:220:12",
													"statements": [
														{
															"nativeSrc": "13718:74:12",
															"nodeType": "YulAssignment",
															"src": "13718:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13784:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13784:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13789:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13789:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13725:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13725:58:12"
																},
																"nativeSrc": "13725:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13725:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13718:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13718:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13890:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13890:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85",
																	"nativeSrc": "13801:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13801:88:12"
																},
																"nativeSrc": "13801:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13801:93:12"
															},
															"nativeSrc": "13801:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13801:93:12"
														},
														{
															"nativeSrc": "13903:19:12",
															"nodeType": "YulAssignment",
															"src": "13903:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13914:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13914:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13919:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13919:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13910:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13910:3:12"
																},
																"nativeSrc": "13910:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13910:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13903:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13903:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13562:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13696:3:12",
														"nodeType": "YulTypedName",
														"src": "13696:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13704:3:12",
														"nodeType": "YulTypedName",
														"src": "13704:3:12",
														"type": ""
													}
												],
												"src": "13562:366:12"
											},
											{
												"body": {
													"nativeSrc": "14105:248:12",
													"nodeType": "YulBlock",
													"src": "14105:248:12",
													"statements": [
														{
															"nativeSrc": "14115:26:12",
															"nodeType": "YulAssignment",
															"src": "14115:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14127:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14127:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14138:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14138:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14123:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14123:3:12"
																},
																"nativeSrc": "14123:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14123:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14115:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14115:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14162:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14162:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14173:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14173:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14158:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14158:3:12"
																		},
																		"nativeSrc": "14158:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14158:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14181:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14181:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14187:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14187:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14177:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14177:3:12"
																		},
																		"nativeSrc": "14177:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14177:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14151:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14151:6:12"
																},
																"nativeSrc": "14151:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14151:47:12"
															},
															"nativeSrc": "14151:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14151:47:12"
														},
														{
															"nativeSrc": "14207:139:12",
															"nodeType": "YulAssignment",
															"src": "14207:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14341:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14341:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14215:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14215:124:12"
																},
																"nativeSrc": "14215:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14215:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14207:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14207:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13934:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14085:9:12",
														"nodeType": "YulTypedName",
														"src": "14085:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14100:4:12",
														"nodeType": "YulTypedName",
														"src": "14100:4:12",
														"type": ""
													}
												],
												"src": "13934:419:12"
											},
											{
												"body": {
													"nativeSrc": "14465:76:12",
													"nodeType": "YulBlock",
													"src": "14465:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14487:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14487:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14495:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14495:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14483:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14483:3:12"
																		},
																		"nativeSrc": "14483:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14483:14:12"
																	},
																	{
																		"hexValue": "426f7820332064697361626c6564206f7220616c7265616479207374616b6564",
																		"kind": "string",
																		"nativeSrc": "14499:34:12",
																		"nodeType": "YulLiteral",
																		"src": "14499:34:12",
																		"type": "",
																		"value": "Box 3 disabled or already staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14476:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14476:6:12"
																},
																"nativeSrc": "14476:58:12",
																"nodeType": "YulFunctionCall",
																"src": "14476:58:12"
															},
															"nativeSrc": "14476:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "14476:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e",
												"nativeSrc": "14359:182:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14457:6:12",
														"nodeType": "YulTypedName",
														"src": "14457:6:12",
														"type": ""
													}
												],
												"src": "14359:182:12"
											},
											{
												"body": {
													"nativeSrc": "14693:220:12",
													"nodeType": "YulBlock",
													"src": "14693:220:12",
													"statements": [
														{
															"nativeSrc": "14703:74:12",
															"nodeType": "YulAssignment",
															"src": "14703:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14769:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14769:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14774:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14774:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14710:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14710:58:12"
																},
																"nativeSrc": "14710:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14710:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14703:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14703:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14875:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14875:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e",
																	"nativeSrc": "14786:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14786:88:12"
																},
																"nativeSrc": "14786:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14786:93:12"
															},
															"nativeSrc": "14786:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14786:93:12"
														},
														{
															"nativeSrc": "14888:19:12",
															"nodeType": "YulAssignment",
															"src": "14888:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14899:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14899:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14904:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14904:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14895:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14895:3:12"
																},
																"nativeSrc": "14895:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14895:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14888:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14888:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14547:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14681:3:12",
														"nodeType": "YulTypedName",
														"src": "14681:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14689:3:12",
														"nodeType": "YulTypedName",
														"src": "14689:3:12",
														"type": ""
													}
												],
												"src": "14547:366:12"
											},
											{
												"body": {
													"nativeSrc": "15090:248:12",
													"nodeType": "YulBlock",
													"src": "15090:248:12",
													"statements": [
														{
															"nativeSrc": "15100:26:12",
															"nodeType": "YulAssignment",
															"src": "15100:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15112:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15112:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15123:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15123:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15108:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15108:3:12"
																},
																"nativeSrc": "15108:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15108:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15100:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15100:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15147:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15147:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15158:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15158:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15143:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15143:3:12"
																		},
																		"nativeSrc": "15143:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15143:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15166:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15166:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15172:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15172:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15162:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15162:3:12"
																		},
																		"nativeSrc": "15162:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15162:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15136:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15136:6:12"
																},
																"nativeSrc": "15136:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15136:47:12"
															},
															"nativeSrc": "15136:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15136:47:12"
														},
														{
															"nativeSrc": "15192:139:12",
															"nodeType": "YulAssignment",
															"src": "15192:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15326:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15326:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15200:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15200:124:12"
																},
																"nativeSrc": "15200:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15200:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15192:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15192:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14919:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15070:9:12",
														"nodeType": "YulTypedName",
														"src": "15070:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15085:4:12",
														"nodeType": "YulTypedName",
														"src": "15085:4:12",
														"type": ""
													}
												],
												"src": "14919:419:12"
											},
											{
												"body": {
													"nativeSrc": "15450:76:12",
													"nodeType": "YulBlock",
													"src": "15450:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15472:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15472:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15480:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15480:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15468:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15468:3:12"
																		},
																		"nativeSrc": "15468:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15468:14:12"
																	},
																	{
																		"hexValue": "426f7820342064697361626c6564206f7220616c7265616479207374616b6564",
																		"kind": "string",
																		"nativeSrc": "15484:34:12",
																		"nodeType": "YulLiteral",
																		"src": "15484:34:12",
																		"type": "",
																		"value": "Box 4 disabled or already staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15461:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15461:6:12"
																},
																"nativeSrc": "15461:58:12",
																"nodeType": "YulFunctionCall",
																"src": "15461:58:12"
															},
															"nativeSrc": "15461:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "15461:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b",
												"nativeSrc": "15344:182:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15442:6:12",
														"nodeType": "YulTypedName",
														"src": "15442:6:12",
														"type": ""
													}
												],
												"src": "15344:182:12"
											},
											{
												"body": {
													"nativeSrc": "15678:220:12",
													"nodeType": "YulBlock",
													"src": "15678:220:12",
													"statements": [
														{
															"nativeSrc": "15688:74:12",
															"nodeType": "YulAssignment",
															"src": "15688:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15754:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15754:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15759:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15759:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15695:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "15695:58:12"
																},
																"nativeSrc": "15695:67:12",
																"nodeType": "YulFunctionCall",
																"src": "15695:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15688:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15688:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15860:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15860:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b",
																	"nativeSrc": "15771:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15771:88:12"
																},
																"nativeSrc": "15771:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15771:93:12"
															},
															"nativeSrc": "15771:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15771:93:12"
														},
														{
															"nativeSrc": "15873:19:12",
															"nodeType": "YulAssignment",
															"src": "15873:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15884:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15884:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15889:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15889:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15880:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15880:3:12"
																},
																"nativeSrc": "15880:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15880:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15873:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15873:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15532:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15666:3:12",
														"nodeType": "YulTypedName",
														"src": "15666:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15674:3:12",
														"nodeType": "YulTypedName",
														"src": "15674:3:12",
														"type": ""
													}
												],
												"src": "15532:366:12"
											},
											{
												"body": {
													"nativeSrc": "16075:248:12",
													"nodeType": "YulBlock",
													"src": "16075:248:12",
													"statements": [
														{
															"nativeSrc": "16085:26:12",
															"nodeType": "YulAssignment",
															"src": "16085:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16097:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16097:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16108:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16108:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16093:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16093:3:12"
																},
																"nativeSrc": "16093:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16093:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16085:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16085:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16132:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16132:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16143:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16143:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16128:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16128:3:12"
																		},
																		"nativeSrc": "16128:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16128:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16151:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16151:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16157:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16157:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16147:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16147:3:12"
																		},
																		"nativeSrc": "16147:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16147:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16121:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16121:6:12"
																},
																"nativeSrc": "16121:47:12",
																"nodeType": "YulFunctionCall",
																"src": "16121:47:12"
															},
															"nativeSrc": "16121:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "16121:47:12"
														},
														{
															"nativeSrc": "16177:139:12",
															"nodeType": "YulAssignment",
															"src": "16177:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16311:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16311:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16185:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "16185:124:12"
																},
																"nativeSrc": "16185:131:12",
																"nodeType": "YulFunctionCall",
																"src": "16185:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16177:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16177:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15904:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16055:9:12",
														"nodeType": "YulTypedName",
														"src": "16055:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16070:4:12",
														"nodeType": "YulTypedName",
														"src": "16070:4:12",
														"type": ""
													}
												],
												"src": "15904:419:12"
											},
											{
												"body": {
													"nativeSrc": "16455:206:12",
													"nodeType": "YulBlock",
													"src": "16455:206:12",
													"statements": [
														{
															"nativeSrc": "16465:26:12",
															"nodeType": "YulAssignment",
															"src": "16465:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16477:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16477:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16488:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16488:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16473:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16473:3:12"
																},
																"nativeSrc": "16473:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16473:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16465:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16465:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16545:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16545:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16558:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16558:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16569:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16569:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16554:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16554:3:12"
																		},
																		"nativeSrc": "16554:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16554:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16501:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16501:43:12"
																},
																"nativeSrc": "16501:71:12",
																"nodeType": "YulFunctionCall",
																"src": "16501:71:12"
															},
															"nativeSrc": "16501:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "16501:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16626:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16626:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16639:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16639:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16650:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16650:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16635:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16635:3:12"
																		},
																		"nativeSrc": "16635:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16635:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16582:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16582:43:12"
																},
																"nativeSrc": "16582:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16582:72:12"
															},
															"nativeSrc": "16582:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16582:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16329:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16419:9:12",
														"nodeType": "YulTypedName",
														"src": "16419:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16431:6:12",
														"nodeType": "YulTypedName",
														"src": "16431:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16439:6:12",
														"nodeType": "YulTypedName",
														"src": "16439:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16450:4:12",
														"nodeType": "YulTypedName",
														"src": "16450:4:12",
														"type": ""
													}
												],
												"src": "16329:332:12"
											},
											{
												"body": {
													"nativeSrc": "16821:288:12",
													"nodeType": "YulBlock",
													"src": "16821:288:12",
													"statements": [
														{
															"nativeSrc": "16831:26:12",
															"nodeType": "YulAssignment",
															"src": "16831:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16843:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16843:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16854:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16854:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16839:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16839:3:12"
																},
																"nativeSrc": "16839:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16839:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16831:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16831:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16911:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16911:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16924:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16924:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16935:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16935:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16920:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16920:3:12"
																		},
																		"nativeSrc": "16920:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16920:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16867:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16867:43:12"
																},
																"nativeSrc": "16867:71:12",
																"nodeType": "YulFunctionCall",
																"src": "16867:71:12"
															},
															"nativeSrc": "16867:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "16867:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16992:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16992:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17005:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17005:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17016:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17016:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17001:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17001:3:12"
																		},
																		"nativeSrc": "17001:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17001:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16948:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16948:43:12"
																},
																"nativeSrc": "16948:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16948:72:12"
															},
															"nativeSrc": "16948:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16948:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17074:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17074:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17087:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17087:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17098:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17098:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17083:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17083:3:12"
																		},
																		"nativeSrc": "17083:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17083:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17030:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17030:43:12"
																},
																"nativeSrc": "17030:72:12",
																"nodeType": "YulFunctionCall",
																"src": "17030:72:12"
															},
															"nativeSrc": "17030:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "17030:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16667:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16777:9:12",
														"nodeType": "YulTypedName",
														"src": "16777:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16789:6:12",
														"nodeType": "YulTypedName",
														"src": "16789:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16797:6:12",
														"nodeType": "YulTypedName",
														"src": "16797:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16805:6:12",
														"nodeType": "YulTypedName",
														"src": "16805:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16816:4:12",
														"nodeType": "YulTypedName",
														"src": "16816:4:12",
														"type": ""
													}
												],
												"src": "16667:442:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$315_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$315_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid box\")\n\n    }\n\n    function abi_encode_t_stringliteral_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8(memPtr) {\n\n        mstore(add(memPtr, 0), \"No stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not unlocked\")\n\n    }\n\n    function abi_encode_t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unlock mode active\")\n\n    }\n\n    function abi_encode_t_stringliteral_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Box 1 disabled or already staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85(memPtr) {\n\n        mstore(add(memPtr, 0), \"Box 2 disabled or already staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Box 3 disabled or already staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Box 4 disabled or already staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1439": [
									{
										"length": 32,
										"start": 2210
									},
									{
										"length": 32,
										"start": 4278
									},
									{
										"length": 32,
										"start": 4382
									},
									{
										"length": 32,
										"start": 4462
									},
									{
										"length": 32,
										"start": 7775
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610272575f3560e01c80637b3e920c1161014f578063d0bcc009116100c1578063e7de2ceb11610085578063e7de2ceb1461078c578063ea1b28e0146107aa578063f1cddd55146107c8578063f2fde38b146107e4578063f908dc1314610800578063fd2b52021461081e57610272565b8063d0bcc009146106f8578063d19b090e14610716578063d47c56e514610734578063d5c41d6914610752578063d7d4918e1461076e57610272565b806394387289116101135780639438728914610636578063b39dc99614610652578063bba4fefd14610670578063bef7d12e1461068e578063c3630edb146106be578063cd5692ee146106dc57610272565b80637b3e920c1461057c578063817b1cd2146105ac57806389b0040a146105ca5780638a170ac1146105fa5780638da5cb5b1461061857610272565b80634b0c10d8116101e85780636cbde5cf116101ac5780636cbde5cf146104cc57806370a08231146104e8578063715018a61461051857806373dec718146105225780637908542514610540578063798cbe5e1461055e57610272565b80634b0c10d8146104145780634b5effc2146104325780634f51d090146104625780635cd5a159146104925780635f75bcea146104b057610272565b8063292a6b191161023a578063292a6b191461032c5780632e5f89ef1461034a57806335e630551461037a578063375b3c0a1461039657806338dc97fb146103b45780634893afc1146103e457610272565b8063058df0e8146102765780631d95985b146102a65780631d95d52f146102c457806323dcdb89146102e057806324ebd9d2146102fc575b5f5ffd5b610290600480360381019061028b91906121f3565b61083a565b60405161029d9190612236565b60405180910390f35b6102ae61084f565b6040516102bb9190612236565b60405180910390f35b6102de60048036038101906102d99190612284565b610855565b005b6102fa60048036038101906102f591906122d9565b610879565b005b610316600480360381019061031191906121f3565b61088b565b6040516103239190612236565b60405180910390f35b6103346108a0565b604051610341919061235f565b60405180910390f35b610364600480360381019061035f91906121f3565b6108c4565b6040516103719190612236565b60405180910390f35b610394600480360381019061038f91906122d9565b6108d9565b005b61039e6111ba565b6040516103ab9190612236565b60405180910390f35b6103ce60048036038101906103c991906121f3565b6111c0565b6040516103db9190612236565b60405180910390f35b6103fe60048036038101906103f991906121f3565b6111d5565b60405161040b9190612236565b60405180910390f35b61041c6111ea565b6040516104299190612236565b60405180910390f35b61044c60048036038101906104479190612378565b6111f0565b6040516104599190612236565b60405180910390f35b61047c600480360381019061047791906121f3565b61132f565b6040516104899190612236565b60405180910390f35b61049a611344565b6040516104a791906123c5565b60405180910390f35b6104ca60048036038101906104c59190612284565b611356565b005b6104e660048036038101906104e19190612284565b61137a565b005b61050260048036038101906104fd91906121f3565b61139e565b60405161050f9190612236565b60405180910390f35b6105206114bc565b005b61052a6114cf565b60405161053791906123c5565b60405180910390f35b6105486114e1565b6040516105559190612236565b60405180910390f35b6105666114e7565b6040516105739190612236565b60405180910390f35b610596600480360381019061059191906121f3565b6114ed565b6040516105a39190612236565b60405180910390f35b6105b4611502565b6040516105c19190612236565b60405180910390f35b6105e460048036038101906105df91906121f3565b611508565b6040516105f19190612236565b60405180910390f35b61060261151d565b60405161060f91906123c5565b60405180910390f35b61062061152f565b60405161062d91906123ed565b60405180910390f35b610650600480360381019061064b91906122d9565b611556565b005b61065a611568565b6040516106679190612236565b60405180910390f35b61067861156e565b6040516106859190612236565b60405180910390f35b6106a860048036038101906106a39190612378565b611574565b6040516106b59190612236565b60405180910390f35b6106c66116e7565b6040516106d39190612236565b60405180910390f35b6106f660048036038101906106f191906122d9565b6116ed565b005b6107006116ff565b60405161070d91906123c5565b60405180910390f35b61071e611711565b60405161072b9190612236565b60405180910390f35b61073c611717565b6040516107499190612236565b60405180910390f35b61076c60048036038101906107679190612284565b61171d565b005b610776611741565b6040516107839190612236565b60405180910390f35b610794611747565b6040516107a19190612236565b60405180910390f35b6107b261174d565b6040516107bf9190612236565b60405180910390f35b6107e260048036038101906107dd9190612284565b611753565b005b6107fe60048036038101906107f991906121f3565b611777565b005b6108086117fb565b60405161081591906123c5565b60405180910390f35b61083860048036038101906108339190612406565b61180d565b005b6006602052805f5260405f205f915090505481565b600e5481565b61085d611eaa565b8060145f6101000a81548160ff02191690831515021790555050565b610881611eaa565b8060168190555050565b6010602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600b602052805f5260405f205f915090505481565b600181101580156108eb575060048111155b61092a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109219061249e565b60405180910390fd5b5f3390505f5f60018403610af65760015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116109ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b190612506565b60405180910390fd5b601b5f9054906101000a900460ff1680610a1e575060045460025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a1a9190612551565b4210155b610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a54906125ce565b60405180910390fd5b60035481610a6b9190612619565b91505f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611047565b60028403610cbc5760065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610b80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7790612506565b60405180910390fd5b601b5f9054906101000a900460ff1680610be4575060095460075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610be09190612551565b4210155b610c23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1a906125ce565b60405180910390fd5b60085481610c319190612619565b91505f60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611046565b60038403610e8257600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610d46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3d90612506565b60405180910390fd5b601b5f9054906101000a900460ff1680610daa5750600e54600c5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610da69190612551565b4210155b610de9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de0906125ce565b60405180910390fd5b600d5481610df79190612619565b91505f600b5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f600c5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611045565b600484036110445760105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610f0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0390612506565b60405180910390fd5b601b5f9054906101000a900460ff1680610f70575060135460115f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f6c9190612551565b4210155b610faf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa6906125ce565b60405180910390fd5b60125481610fbd9190612619565b91505f60105f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60115f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5b5b5b8060195f8282546110589190612649565b92505081905550601b5f9054906101000a900460ff1661108757816018546110809190612551565b6018819055505b601b5f9054906101000a900460ff166110af57816017546110a89190612649565b6017819055505b6110fa83827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f319092919063ffffffff16565b601b5f9054906101000a900460ff166111b457600484036111675761116261dead837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f319092919063ffffffff16565b6111b3565b6111b283837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f319092919063ffffffff16565b5b5b50505050565b60165481565b6011602052805f5260405f205f915090505481565b6001602052805f5260405f205f915090505481565b60045481565b5f6001820361123e5760015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050611329565b6002820361128b5760065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050611329565b600382036112d857600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050611329565b600482036113255760105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050611329565b5f90505b92915050565b6002602052805f5260405f205f915090505481565b60145f9054906101000a900460ff1681565b61135e611eaa565b80600a5f6101000a81548160ff02191690831515021790555050565b611382611eaa565b8060055f6101000a81548160ff02191690831515021790555050565b5f60105f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546114a19190612551565b6114ab9190612551565b6114b59190612551565b9050919050565b6114c4611eaa565b6114cd5f611fb0565b565b600a5f9054906101000a900460ff1681565b60185481565b60135481565b6007602052805f5260405f205f915090505481565b60195481565b600c602052805f5260405f205f915090505481565b60055f9054906101000a900460ff1681565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61155e611eaa565b80601a8190555050565b600d5481565b60175481565b5f600182036115cf5760045460025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546115c89190612551565b90506116e1565b600282036116295760095460075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546116229190612551565b90506116e1565b6003820361168357600e54600c5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461167c9190612551565b90506116e1565b600482036116dd5760135460115f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546116d69190612551565b90506116e1565b5f90505b92915050565b60125481565b6116f5611eaa565b8060158190555050565b600f5f9054906101000a900460ff1681565b601a5481565b60095481565b611725611eaa565b80600f5f6101000a81548160ff02191690831515021790555050565b60085481565b60035481565b60155481565b61175b611eaa565b80601b5f6101000a81548160ff02191690831515021790555050565b61177f611eaa565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117ef575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016117e691906123ed565b60405180910390fd5b6117f881611fb0565b50565b601b5f9054906101000a900460ff1681565b6001811015801561181f575060048111155b61185e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118559061249e565b60405180910390fd5b601654821015801561187257506015548211155b6118b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a8906126c6565b60405180910390fd5b601b5f9054906101000a900460ff1615611900576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f79061272e565b60405180910390fd5b601854601a541015611947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193e90612796565b60405180910390fd5b5f3390505f60018303611a835760055f9054906101000a900460ff1680156119ab57505f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054145b6119ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e1906127fe565b60405180910390fd5b600354846119f89190612619565b90508360015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611e27565b60028303611bba57600a5f9054906101000a900460ff168015611ae257505f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054145b611b21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b1890612866565b60405180910390fd5b60085484611b2f9190612619565b90508360065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611e26565b60038303611cf157600f5f9054906101000a900460ff168015611c1957505f600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054145b611c58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4f906128ce565b60405180910390fd5b600d5484611c669190612619565b905083600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555042600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611e25565b60048303611e245760145f9054906101000a900460ff168015611d5057505f60105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054145b611d8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8690612936565b60405180910390fd5b60125484611d9d9190612619565b90508360105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260115f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5b5b5b8060175f828254611e389190612551565b925050819055508360195f828254611e509190612551565b92505081905550611ea48230867f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16612071909392919063ffffffff16565b50505050565b611eb26120f3565b73ffffffffffffffffffffffffffffffffffffffff16611ed061152f565b73ffffffffffffffffffffffffffffffffffffffff1614611f2f57611ef36120f3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611f2691906123ed565b60405180910390fd5b565b611fab838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611f64929190612954565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120fa565b505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6120ed848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016120a69392919061297b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120fa565b50505050565b5f33905090565b5f5f60205f8451602086015f885af180612119576040513d5f823e3d81fd5b3d92505f519150505f821461213257600181141561214d565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561218f57836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161218691906123ed565b60405180910390fd5b50505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6121c282612199565b9050919050565b6121d2816121b8565b81146121dc575f5ffd5b50565b5f813590506121ed816121c9565b92915050565b5f6020828403121561220857612207612195565b5b5f612215848285016121df565b91505092915050565b5f819050919050565b6122308161221e565b82525050565b5f6020820190506122495f830184612227565b92915050565b5f8115159050919050565b6122638161224f565b811461226d575f5ffd5b50565b5f8135905061227e8161225a565b92915050565b5f6020828403121561229957612298612195565b5b5f6122a684828501612270565b91505092915050565b6122b88161221e565b81146122c2575f5ffd5b50565b5f813590506122d3816122af565b92915050565b5f602082840312156122ee576122ed612195565b5b5f6122fb848285016122c5565b91505092915050565b5f819050919050565b5f61232761232261231d84612199565b612304565b612199565b9050919050565b5f6123388261230d565b9050919050565b5f6123498261232e565b9050919050565b6123598161233f565b82525050565b5f6020820190506123725f830184612350565b92915050565b5f5f6040838503121561238e5761238d612195565b5b5f61239b858286016121df565b92505060206123ac858286016122c5565b9150509250929050565b6123bf8161224f565b82525050565b5f6020820190506123d85f8301846123b6565b92915050565b6123e7816121b8565b82525050565b5f6020820190506124005f8301846123de565b92915050565b5f5f6040838503121561241c5761241b612195565b5b5f612429858286016122c5565b925050602061243a858286016122c5565b9150509250929050565b5f82825260208201905092915050565b7f496e76616c696420626f780000000000000000000000000000000000000000005f82015250565b5f612488600b83612444565b915061249382612454565b602082019050919050565b5f6020820190508181035f8301526124b58161247c565b9050919050565b7f4e6f207374616b650000000000000000000000000000000000000000000000005f82015250565b5f6124f0600883612444565b91506124fb826124bc565b602082019050919050565b5f6020820190508181035f83015261251d816124e4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61255b8261221e565b91506125668361221e565b925082820190508082111561257e5761257d612524565b5b92915050565b7f4e6f7420756e6c6f636b656400000000000000000000000000000000000000005f82015250565b5f6125b8600c83612444565b91506125c382612584565b602082019050919050565b5f6020820190508181035f8301526125e5816125ac565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6126238261221e565b915061262e8361221e565b92508261263e5761263d6125ec565b5b828204905092915050565b5f6126538261221e565b915061265e8361221e565b925082820390508181111561267657612675612524565b5b92915050565b7f496e76616c696420616d6f756e740000000000000000000000000000000000005f82015250565b5f6126b0600e83612444565b91506126bb8261267c565b602082019050919050565b5f6020820190508181035f8301526126dd816126a4565b9050919050565b7f556e6c6f636b206d6f64652061637469766500000000000000000000000000005f82015250565b5f612718601283612444565b9150612723826126e4565b602082019050919050565b5f6020820190508181035f8301526127458161270c565b9050919050565b7f5374616b696e6720656e646564000000000000000000000000000000000000005f82015250565b5f612780600d83612444565b915061278b8261274c565b602082019050919050565b5f6020820190508181035f8301526127ad81612774565b9050919050565b7f426f7820312064697361626c6564206f7220616c7265616479207374616b65645f82015250565b5f6127e8602083612444565b91506127f3826127b4565b602082019050919050565b5f6020820190508181035f830152612815816127dc565b9050919050565b7f426f7820322064697361626c6564206f7220616c7265616479207374616b65645f82015250565b5f612850602083612444565b915061285b8261281c565b602082019050919050565b5f6020820190508181035f83015261287d81612844565b9050919050565b7f426f7820332064697361626c6564206f7220616c7265616479207374616b65645f82015250565b5f6128b8602083612444565b91506128c382612884565b602082019050919050565b5f6020820190508181035f8301526128e5816128ac565b9050919050565b7f426f7820342064697361626c6564206f7220616c7265616479207374616b65645f82015250565b5f612920602083612444565b915061292b826128ec565b602082019050919050565b5f6020820190508181035f83015261294d81612914565b9050919050565b5f6040820190506129675f8301856123de565b6129746020830184612227565b9392505050565b5f60608201905061298e5f8301866123de565b61299b60208301856123de565b6129a86040830184612227565b94935050505056fea264697066735822122005d93b648ad3b0d7cad9c00587a635b46755b283a43b3e13239781ef7ad2f0fd64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x272 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B3E920C GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xD0BCC009 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xE7DE2CEB GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xE7DE2CEB EQ PUSH2 0x78C JUMPI DUP1 PUSH4 0xEA1B28E0 EQ PUSH2 0x7AA JUMPI DUP1 PUSH4 0xF1CDDD55 EQ PUSH2 0x7C8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7E4 JUMPI DUP1 PUSH4 0xF908DC13 EQ PUSH2 0x800 JUMPI DUP1 PUSH4 0xFD2B5202 EQ PUSH2 0x81E JUMPI PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH4 0xD0BCC009 EQ PUSH2 0x6F8 JUMPI DUP1 PUSH4 0xD19B090E EQ PUSH2 0x716 JUMPI DUP1 PUSH4 0xD47C56E5 EQ PUSH2 0x734 JUMPI DUP1 PUSH4 0xD5C41D69 EQ PUSH2 0x752 JUMPI DUP1 PUSH4 0xD7D4918E EQ PUSH2 0x76E JUMPI PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH4 0x94387289 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x94387289 EQ PUSH2 0x636 JUMPI DUP1 PUSH4 0xB39DC996 EQ PUSH2 0x652 JUMPI DUP1 PUSH4 0xBBA4FEFD EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0xBEF7D12E EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0xC3630EDB EQ PUSH2 0x6BE JUMPI DUP1 PUSH4 0xCD5692EE EQ PUSH2 0x6DC JUMPI PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH4 0x7B3E920C EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0x89B0040A EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0x8A170AC1 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x618 JUMPI PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH4 0x4B0C10D8 GT PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x6CBDE5CF GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x6CBDE5CF EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0x73DEC718 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0x79085425 EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0x798CBE5E EQ PUSH2 0x55E JUMPI PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH4 0x4B0C10D8 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x4B5EFFC2 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x4F51D090 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0x5CD5A159 EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0x5F75BCEA EQ PUSH2 0x4B0 JUMPI PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH4 0x292A6B19 GT PUSH2 0x23A JUMPI DUP1 PUSH4 0x292A6B19 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x2E5F89EF EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x35E63055 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x375B3C0A EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x38DC97FB EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x4893AFC1 EQ PUSH2 0x3E4 JUMPI PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH4 0x58DF0E8 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x1D95985B EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x1D95D52F EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x23DCDB89 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x24EBD9D2 EQ PUSH2 0x2FC JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x879 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x334 PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39E PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41C PUSH2 0x11EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49A PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x1356 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x137A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x502 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x139E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x520 PUSH2 0x14BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x52A PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x548 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x555 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x566 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x596 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B4 PUSH2 0x1502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x602 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x620 PUSH2 0x152F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x650 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x1556 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x65A PUSH2 0x1568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x678 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x685 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A3 SWAP2 SWAP1 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C6 PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F1 SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x16ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x700 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x71E PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72B SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73C PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x767 SWAP2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x171D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x776 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x794 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A1 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B2 PUSH2 0x174D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x1753 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F9 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x1777 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x808 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x815 SWAP2 SWAP1 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x838 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x2406 JUMP JUMPDEST PUSH2 0x180D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x85D PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0x14 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x881 PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0x16 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x8EB JUMPI POP PUSH1 0x4 DUP2 GT ISZERO JUMPDEST PUSH2 0x92A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x921 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH0 PUSH1 0x1 DUP5 SUB PUSH2 0xAF6 JUMPI PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B1 SWAP1 PUSH2 0x2506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA1E JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST TIMESTAMP LT ISZERO JUMPDEST PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP2 PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x2 DUP5 SUB PUSH2 0xCBC JUMPI PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB77 SWAP1 PUSH2 0x2506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xBE4 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xBE0 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST TIMESTAMP LT ISZERO JUMPDEST PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1A SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0xC31 SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x3 DUP5 SUB PUSH2 0xE82 JUMPI PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xD46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3D SWAP1 PUSH2 0x2506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xDAA JUMPI POP PUSH1 0xE SLOAD PUSH1 0xC PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDA6 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST TIMESTAMP LT ISZERO JUMPDEST PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE0 SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD DUP2 PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0xB PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xC PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x4 DUP5 SUB PUSH2 0x1044 JUMPI PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xF0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF03 SWAP1 PUSH2 0x2506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xF70 JUMPI POP PUSH1 0x13 SLOAD PUSH1 0x11 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF6C SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST TIMESTAMP LT ISZERO JUMPDEST PUSH2 0xFAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA6 SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 SLOAD DUP2 PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x10 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x11 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x19 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1058 SWAP2 SWAP1 PUSH2 0x2649 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1087 JUMPI DUP2 PUSH1 0x18 SLOAD PUSH2 0x1080 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x18 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10AF JUMPI DUP2 PUSH1 0x17 SLOAD PUSH2 0x10A8 SWAP2 SWAP1 PUSH2 0x2649 JUMP JUMPDEST PUSH1 0x17 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x10FA DUP4 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F31 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11B4 JUMPI PUSH1 0x4 DUP5 SUB PUSH2 0x1167 JUMPI PUSH2 0x1162 PUSH2 0xDEAD DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F31 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B3 JUMP JUMPDEST PUSH2 0x11B2 DUP4 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F31 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 SUB PUSH2 0x123E JUMPI PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x128B JUMPI PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH2 0x12D8 JUMPI PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x4 DUP3 SUB PUSH2 0x1325 JUMPI PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1329 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x135E PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1382 PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x10 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x14A1 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH2 0x14AB SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH2 0x14B5 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C4 PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x14CD PUSH0 PUSH2 0x1FB0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x155E PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0x1A DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 SUB PUSH2 0x15CF JUMPI PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x15C8 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x1629 JUMPI PUSH1 0x9 SLOAD PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH2 0x1683 JUMPI PUSH1 0xE SLOAD PUSH1 0xC PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x167C SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x4 DUP3 SUB PUSH2 0x16DD JUMPI PUSH1 0x13 SLOAD PUSH1 0x11 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x16D6 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP PUSH2 0x16E1 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x16F5 PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0x15 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1725 PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0xF PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x175B PUSH2 0x1EAA JUMP JUMPDEST DUP1 PUSH1 0x1B PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x177F PUSH2 0x1EAA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E6 SWAP2 SWAP1 PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17F8 DUP2 PUSH2 0x1FB0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x181F JUMPI POP PUSH1 0x4 DUP2 GT ISZERO JUMPDEST PUSH2 0x185E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1855 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x16 SLOAD DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x1872 JUMPI POP PUSH1 0x15 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x18B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A8 SWAP1 PUSH2 0x26C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1900 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F7 SWAP1 PUSH2 0x272E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x18 SLOAD PUSH1 0x1A SLOAD LT ISZERO PUSH2 0x1947 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193E SWAP1 PUSH2 0x2796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x1 DUP4 SUB PUSH2 0x1A83 JUMPI PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x19AB JUMPI POP PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x19EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E1 SWAP1 PUSH2 0x27FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP5 PUSH2 0x19F8 SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E27 JUMP JUMPDEST PUSH1 0x2 DUP4 SUB PUSH2 0x1BBA JUMPI PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1AE2 JUMPI POP PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x1B21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B18 SWAP1 PUSH2 0x2866 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP5 PUSH2 0x1B2F SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x3 DUP4 SUB PUSH2 0x1CF1 JUMPI PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1C19 JUMPI POP PUSH0 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x1C58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4F SWAP1 PUSH2 0x28CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD DUP5 PUSH2 0x1C66 SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x4 DUP4 SUB PUSH2 0x1E24 JUMPI PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1D50 JUMPI POP PUSH0 PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x1D8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D86 SWAP1 PUSH2 0x2936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 SLOAD DUP5 PUSH2 0x1D9D SWAP2 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x11 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x17 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E38 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x19 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E50 SWAP2 SWAP1 PUSH2 0x2551 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EA4 DUP3 ADDRESS DUP7 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2071 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1EB2 PUSH2 0x20F3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1ED0 PUSH2 0x152F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F2F JUMPI PUSH2 0x1EF3 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F26 SWAP2 SWAP1 PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1FAB DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F64 SWAP3 SWAP2 SWAP1 PUSH2 0x2954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x20FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x20ED DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x20A6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x297B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x20FA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x2119 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x2132 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x214D JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x218F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2186 SWAP2 SWAP1 PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21C2 DUP3 PUSH2 0x2199 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D2 DUP2 PUSH2 0x21B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x21DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21ED DUP2 PUSH2 0x21C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2208 JUMPI PUSH2 0x2207 PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2215 DUP5 DUP3 DUP6 ADD PUSH2 0x21DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2230 DUP2 PUSH2 0x221E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2249 PUSH0 DUP4 ADD DUP5 PUSH2 0x2227 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2263 DUP2 PUSH2 0x224F JUMP JUMPDEST DUP2 EQ PUSH2 0x226D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x227E DUP2 PUSH2 0x225A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2299 JUMPI PUSH2 0x2298 PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22A6 DUP5 DUP3 DUP6 ADD PUSH2 0x2270 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22B8 DUP2 PUSH2 0x221E JUMP JUMPDEST DUP2 EQ PUSH2 0x22C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22D3 DUP2 PUSH2 0x22AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22EE JUMPI PUSH2 0x22ED PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22FB DUP5 DUP3 DUP6 ADD PUSH2 0x22C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2327 PUSH2 0x2322 PUSH2 0x231D DUP5 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0x2304 JUMP JUMPDEST PUSH2 0x2199 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2338 DUP3 PUSH2 0x230D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2349 DUP3 PUSH2 0x232E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2359 DUP2 PUSH2 0x233F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2372 PUSH0 DUP4 ADD DUP5 PUSH2 0x2350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x238E JUMPI PUSH2 0x238D PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239B DUP6 DUP3 DUP7 ADD PUSH2 0x21DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23AC DUP6 DUP3 DUP7 ADD PUSH2 0x22C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x23BF DUP2 PUSH2 0x224F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x23B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23E7 DUP2 PUSH2 0x21B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2400 PUSH0 DUP4 ADD DUP5 PUSH2 0x23DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x241C JUMPI PUSH2 0x241B PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2429 DUP6 DUP3 DUP7 ADD PUSH2 0x22C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x243A DUP6 DUP3 DUP7 ADD PUSH2 0x22C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420626F78000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2488 PUSH1 0xB DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x2493 DUP3 PUSH2 0x2454 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24B5 DUP2 PUSH2 0x247C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207374616B65000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24F0 PUSH1 0x8 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FB DUP3 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x251D DUP2 PUSH2 0x24E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x255B DUP3 PUSH2 0x221E JUMP JUMPDEST SWAP2 POP PUSH2 0x2566 DUP4 PUSH2 0x221E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x257E JUMPI PUSH2 0x257D PUSH2 0x2524 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420756E6C6F636B65640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25B8 PUSH1 0xC DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C3 DUP3 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25E5 DUP2 PUSH2 0x25AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2623 DUP3 PUSH2 0x221E JUMP JUMPDEST SWAP2 POP PUSH2 0x262E DUP4 PUSH2 0x221E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x263E JUMPI PUSH2 0x263D PUSH2 0x25EC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2653 DUP3 PUSH2 0x221E JUMP JUMPDEST SWAP2 POP PUSH2 0x265E DUP4 PUSH2 0x221E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2676 JUMPI PUSH2 0x2675 PUSH2 0x2524 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26B0 PUSH1 0xE DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x26BB DUP3 PUSH2 0x267C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26DD DUP2 PUSH2 0x26A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E6C6F636B206D6F6465206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2718 PUSH1 0x12 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x2723 DUP3 PUSH2 0x26E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2745 DUP2 PUSH2 0x270C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E6720656E64656400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2780 PUSH1 0xD DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x278B DUP3 PUSH2 0x274C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27AD DUP2 PUSH2 0x2774 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F7820312064697361626C6564206F7220616C7265616479207374616B6564 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27E8 PUSH1 0x20 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x27F3 DUP3 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2815 DUP2 PUSH2 0x27DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F7820322064697361626C6564206F7220616C7265616479207374616B6564 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2850 PUSH1 0x20 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x285B DUP3 PUSH2 0x281C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x287D DUP2 PUSH2 0x2844 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F7820332064697361626C6564206F7220616C7265616479207374616B6564 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28B8 PUSH1 0x20 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x28C3 DUP3 PUSH2 0x2884 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28E5 DUP2 PUSH2 0x28AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F7820342064697361626C6564206F7220616C7265616479207374616B6564 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2920 PUSH1 0x20 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x292B DUP3 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x294D DUP2 PUSH2 0x2914 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2967 PUSH0 DUP4 ADD DUP6 PUSH2 0x23DE JUMP JUMPDEST PUSH2 0x2974 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2227 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x298E PUSH0 DUP4 ADD DUP7 PUSH2 0x23DE JUMP JUMPDEST PUSH2 0x299B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23DE JUMP JUMPDEST PUSH2 0x29A8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2227 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xD9 EXTCODESIZE PUSH5 0x8AD3B0D7CA 0xD9 0xC0 SDIV DUP8 0xA6 CALLDATALOAD 0xB4 PUSH8 0x55B283A43B3E1323 SWAP8 DUP2 0xEF PUSH27 0xD2F0FD64736F6C634300081E003300000000000000000000000000 ",
							"sourceMap": "362:7395:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;763:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1109:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2713:83;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2984:81;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1171:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;515:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;967:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5679:2075;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1495:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1225:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;559:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;701:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3720:311;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;613:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1343:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2535:83;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2446;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3161:168;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;935:23:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1561:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1313:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;817:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1594:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;731:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2802:89:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1079:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1525:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3337:375;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1283:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2897:81;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1139:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1627:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;905:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2624:83;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;875:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;671;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1465;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3071:82;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1663:22:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4039:1632;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;763:47;;;;;;;;;;;;;;;;;:::o;1109:23::-;;;;:::o;2713:83::-;1531:13:0;:11;:13::i;:::-;2787:6:11::1;2773:11;;:20;;;;;;;;;;;;;;;;;;2713:83:::0;:::o;2984:81::-;1531:13:0;:11;:13::i;:::-;3056:6:11::1;3045:8;:17;;;;2984:81:::0;:::o;1171:47::-;;;;;;;;;;;;;;;;;:::o;515:35::-;;;:::o;967:47::-;;;;;;;;;;;;;;;;;:::o;5679:2075::-;5750:1;5741:5;:10;;:24;;;;;5764:1;5755:5;:10;;5741:24;5733:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;5794:12;5809:10;5794:25;;5830:20;5861:14;5901:1;5892:5;:10;5888:1390;;5928:11;:17;5940:4;5928:17;;;;;;;;;;;;;;;;5919:26;;5977:1;5968:6;:10;5960:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;6014:10;;;;;;;;;;;:65;;;;6071:8;;6047:15;:21;6063:4;6047:21;;;;;;;;;;;;;;;;:32;;;;:::i;:::-;6028:15;:51;;6014:65;6006:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;6135:8;;6126:6;:17;;;;:::i;:::-;6111:32;;6178:1;6158:11;:17;6170:4;6158:17;;;;;;;;;;;;;;;:21;;;;6218:1;6194:15;:21;6210:4;6194:21;;;;;;;;;;;;;;;:25;;;;5888:1390;;;6250:1;6241:5;:10;6237:1041;;6277:11;:17;6289:4;6277:17;;;;;;;;;;;;;;;;6268:26;;6326:1;6317:6;:10;6309:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;6363:10;;;;;;;;;;;:65;;;;6420:8;;6396:15;:21;6412:4;6396:21;;;;;;;;;;;;;;;;:32;;;;:::i;:::-;6377:15;:51;;6363:65;6355:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;6484:8;;6475:6;:17;;;;:::i;:::-;6460:32;;6527:1;6507:11;:17;6519:4;6507:17;;;;;;;;;;;;;;;:21;;;;6567:1;6543:15;:21;6559:4;6543:21;;;;;;;;;;;;;;;:25;;;;6237:1041;;;6599:1;6590:5;:10;6586:692;;6626:11;:17;6638:4;6626:17;;;;;;;;;;;;;;;;6617:26;;6675:1;6666:6;:10;6658:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;6712:10;;;;;;;;;;;:65;;;;6769:8;;6745:15;:21;6761:4;6745:21;;;;;;;;;;;;;;;;:32;;;;:::i;:::-;6726:15;:51;;6712:65;6704:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;6833:8;;6824:6;:17;;;;:::i;:::-;6809:32;;6876:1;6856:11;:17;6868:4;6856:17;;;;;;;;;;;;;;;:21;;;;6916:1;6892:15;:21;6908:4;6892:21;;;;;;;;;;;;;;;:25;;;;6586:692;;;6948:1;6939:5;:10;6935:343;;6975:11;:17;6987:4;6975:17;;;;;;;;;;;;;;;;6966:26;;7024:1;7015:6;:10;7007:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;7061:10;;;;;;;;;;;:65;;;;7118:8;;7094:15;:21;7110:4;7094:21;;;;;;;;;;;;;;;;:32;;;;:::i;:::-;7075:15;:51;;7061:65;7053:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;7182:8;;7173:6;:17;;;;:::i;:::-;7158:32;;7225:1;7205:11;:17;7217:4;7205:17;;;;;;;;;;;;;;;:21;;;;7265:1;7241:15;:21;7257:4;7241:21;;;;;;;;;;;;;;;:25;;;;6935:343;6586:692;6237:1041;5888:1390;7305:6;7290:11;;:21;;;;;;;:::i;:::-;;;;;;;;7327:10;;;;;;;;;;;7322:57;;7367:12;7353:11;;:26;;;;:::i;:::-;7339:11;:40;;;;7322:57;7395:10;;;;;;;;;;;7390:63;;7441:12;7424:14;;:29;;;;:::i;:::-;7407:14;:46;;;;7390:63;7466:38;7491:4;7497:6;7466:11;:24;;;;:38;;;;;:::i;:::-;7522:10;;;;;;;;;;;7517:230;;7562:1;7553:5;:10;7549:187;;7584:51;1414:42;7622:12;7584:11;:24;;;;:51;;;;;:::i;:::-;7549:187;;;7676:44;7701:4;7707:12;7676:11;:24;;;;:44;;;;;:::i;:::-;7549:187;7517:230;5722:2032;;;5679:2075;:::o;1495:23::-;;;;:::o;1225:51::-;;;;;;;;;;;;;;;;;:::o;559:47::-;;;;;;;;;;;;;;;;;:::o;701:23::-;;;;:::o;3720:311::-;3791:7;3824:1;3815:5;:10;3811:40;;3834:11;:17;3846:4;3834:17;;;;;;;;;;;;;;;;3827:24;;;;3811:40;3875:1;3866:5;:10;3862:40;;3885:11;:17;3897:4;3885:17;;;;;;;;;;;;;;;;3878:24;;;;3862:40;3926:1;3917:5;:10;3913:40;;3936:11;:17;3948:4;3936:17;;;;;;;;;;;;;;;;3929:24;;;;3913:40;3977:1;3968:5;:10;3964:40;;3987:11;:17;3999:4;3987:17;;;;;;;;;;;;;;;;3980:24;;;;3964:40;4022:1;4015:8;;3720:311;;;;;:::o;613:51::-;;;;;;;;;;;;;;;;;:::o;1343:23::-;;;;;;;;;;;;;:::o;2535:83::-;1531:13:0;:11;:13::i;:::-;2609:6:11::1;2595:11;;:20;;;;;;;;;;;;;;;;;;2535:83:::0;:::o;2446:::-;1531:13:0;:11;:13::i;:::-;2520:6:11::1;2506:11;;:20;;;;;;;;;;;;;;;;;;2446:83:::0;:::o;3161:168::-;3217:7;3304:11;:17;3316:4;3304:17;;;;;;;;;;;;;;;;3284:11;:17;3296:4;3284:17;;;;;;;;;;;;;;;;3264:11;:17;3276:4;3264:17;;;;;;;;;;;;;;;;3244:11;:17;3256:4;3244:17;;;;;;;;;;;;;;;;:37;;;;:::i;:::-;:57;;;;:::i;:::-;:77;;;;:::i;:::-;3237:84;;3161:168;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;935:23:11:-;;;;;;;;;;;;;:::o;1561:26::-;;;;:::o;1313:23::-;;;;:::o;817:51::-;;;;;;;;;;;;;;;;;:::o;1594:26::-;;;;:::o;1021:51::-;;;;;;;;;;;;;;;;;:::o;731:23::-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2802:89:11:-;1531:13:0;:11;:13::i;:::-;2882:6:11::1;2867:12;:21;;;;2802:89:::0;:::o;1079:23::-;;;;:::o;1525:29::-;;;;:::o;3337:375::-;3412:7;3445:1;3436:5;:10;3432:55;;3479:8;;3455:15;:21;3471:4;3455:21;;;;;;;;;;;;;;;;:32;;;;:::i;:::-;3448:39;;;;3432:55;3511:1;3502:5;:10;3498:55;;3545:8;;3521:15;:21;3537:4;3521:21;;;;;;;;;;;;;;;;:32;;;;:::i;:::-;3514:39;;;;3498:55;3577:1;3568:5;:10;3564:55;;3611:8;;3587:15;:21;3603:4;3587:21;;;;;;;;;;;;;;;;:32;;;;:::i;:::-;3580:39;;;;3564:55;3643:1;3634:5;:10;3630:55;;3677:8;;3653:15;:21;3669:4;3653:21;;;;;;;;;;;;;;;;:32;;;;:::i;:::-;3646:39;;;;3630:55;3703:1;3696:8;;3337:375;;;;;:::o;1283:23::-;;;;:::o;2897:81::-;1531:13:0;:11;:13::i;:::-;2969:6:11::1;2958:8;:17;;;;2897:81:::0;:::o;1139:23::-;;;;;;;;;;;;;:::o;1627:27::-;;;;:::o;905:23::-;;;;:::o;2624:83::-;1531:13:0;:11;:13::i;:::-;2698:6:11::1;2684:11;;:20;;;;;;;;;;;;;;;;;;2624:83:::0;:::o;875:23::-;;;;:::o;671:::-;;;;:::o;1465:::-;;;;:::o;3071:82::-;1531:13:0;:11;:13::i;:::-;3144:6:11::1;3131:10;;:19;;;;;;;;;;;;;;;;;;3071:82:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1663:22:11:-;;;;;;;;;;;;;:::o;4039:1632::-;4125:1;4116:5;:10;;:24;;;;;4139:1;4130:5;:10;;4116:24;4108:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;4185:8;;4175:6;:18;;:40;;;;;4207:8;;4197:6;:18;;4175:40;4167:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4254:10;;;;;;;;;;;4253:11;4245:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;4322:11;;4306:12;;:27;;4298:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4364:12;4379:10;4364:25;;4400:20;4446:1;4437:5;:10;4433:1086;;4472:11;;;;;;;;;;;:37;;;;;4508:1;4487:11;:17;4499:4;4487:17;;;;;;;;;;;;;;;;:22;4472:37;4464:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;4585:8;;4576:6;:17;;;;:::i;:::-;4561:32;;4628:6;4608:11;:17;4620:4;4608:17;;;;;;;;;;;;;;;:26;;;;4673:15;4649;:21;4665:4;4649:21;;;;;;;;;;;;;;;:39;;;;4433:1086;;;4719:1;4710:5;:10;4706:813;;4745:11;;;;;;;;;;;:37;;;;;4781:1;4760:11;:17;4772:4;4760:17;;;;;;;;;;;;;;;;:22;4745:37;4737:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;4858:8;;4849:6;:17;;;;:::i;:::-;4834:32;;4901:6;4881:11;:17;4893:4;4881:17;;;;;;;;;;;;;;;:26;;;;4946:15;4922;:21;4938:4;4922:21;;;;;;;;;;;;;;;:39;;;;4706:813;;;4992:1;4983:5;:10;4979:540;;5018:11;;;;;;;;;;;:37;;;;;5054:1;5033:11;:17;5045:4;5033:17;;;;;;;;;;;;;;;;:22;5018:37;5010:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;5131:8;;5122:6;:17;;;;:::i;:::-;5107:32;;5174:6;5154:11;:17;5166:4;5154:17;;;;;;;;;;;;;;;:26;;;;5219:15;5195;:21;5211:4;5195:21;;;;;;;;;;;;;;;:39;;;;4979:540;;;5265:1;5256:5;:10;5252:267;;5291:11;;;;;;;;;;;:37;;;;;5327:1;5306:11;:17;5318:4;5306:17;;;;;;;;;;;;;;;;:22;5291:37;5283:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;5404:8;;5395:6;:17;;;;:::i;:::-;5380:32;;5447:6;5427:11;:17;5439:4;5427:17;;;;;;;;;;;;;;;:26;;;;5492:15;5468;:21;5484:4;5468:21;;;;;;;;;;;;;;;:39;;;;5252:267;4979:540;4706:813;4433:1086;5549:12;5531:14;;:30;;;;;;;:::i;:::-;;;;;;;;5587:6;5572:11;;:21;;;;;;;:::i;:::-;;;;;;;;5606:57;5635:4;5649;5656:6;5606:11;:28;;;;:57;;;;;;:::i;:::-;4097:1574;;4039:1632;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1219:160:5:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1618:188:5:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8370:720:5:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:90::-;1645:7;1688:5;1681:13;1674:21;1663:32;;1611:90;;;:::o;1707:116::-;1777:21;1792:5;1777:21;:::i;:::-;1770:5;1767:32;1757:60;;1813:1;1810;1803:12;1757:60;1707:116;:::o;1829:133::-;1872:5;1910:6;1897:20;1888:29;;1926:30;1950:5;1926:30;:::i;:::-;1829:133;;;;:::o;1968:323::-;2024:6;2073:2;2061:9;2052:7;2048:23;2044:32;2041:119;;;2079:79;;:::i;:::-;2041:119;2199:1;2224:50;2266:7;2257:6;2246:9;2242:22;2224:50;:::i;:::-;2214:60;;2170:114;1968:323;;;;:::o;2297:122::-;2370:24;2388:5;2370:24;:::i;:::-;2363:5;2360:35;2350:63;;2409:1;2406;2399:12;2350:63;2297:122;:::o;2425:139::-;2471:5;2509:6;2496:20;2487:29;;2525:33;2552:5;2525:33;:::i;:::-;2425:139;;;;:::o;2570:329::-;2629:6;2678:2;2666:9;2657:7;2653:23;2649:32;2646:119;;;2684:79;;:::i;:::-;2646:119;2804:1;2829:53;2874:7;2865:6;2854:9;2850:22;2829:53;:::i;:::-;2819:63;;2775:117;2570:329;;;;:::o;2905:60::-;2933:3;2954:5;2947:12;;2905:60;;;:::o;2971:142::-;3021:9;3054:53;3072:34;3081:24;3099:5;3081:24;:::i;:::-;3072:34;:::i;:::-;3054:53;:::i;:::-;3041:66;;2971:142;;;:::o;3119:126::-;3169:9;3202:37;3233:5;3202:37;:::i;:::-;3189:50;;3119:126;;;:::o;3251:140::-;3315:9;3348:37;3379:5;3348:37;:::i;:::-;3335:50;;3251:140;;;:::o;3397:159::-;3498:51;3543:5;3498:51;:::i;:::-;3493:3;3486:64;3397:159;;:::o;3562:250::-;3669:4;3707:2;3696:9;3692:18;3684:26;;3720:85;3802:1;3791:9;3787:17;3778:6;3720:85;:::i;:::-;3562:250;;;;:::o;3818:474::-;3886:6;3894;3943:2;3931:9;3922:7;3918:23;3914:32;3911:119;;;3949:79;;:::i;:::-;3911:119;4069:1;4094:53;4139:7;4130:6;4119:9;4115:22;4094:53;:::i;:::-;4084:63;;4040:117;4196:2;4222:53;4267:7;4258:6;4247:9;4243:22;4222:53;:::i;:::-;4212:63;;4167:118;3818:474;;;;;:::o;4298:109::-;4379:21;4394:5;4379:21;:::i;:::-;4374:3;4367:34;4298:109;;:::o;4413:210::-;4500:4;4538:2;4527:9;4523:18;4515:26;;4551:65;4613:1;4602:9;4598:17;4589:6;4551:65;:::i;:::-;4413:210;;;;:::o;4629:118::-;4716:24;4734:5;4716:24;:::i;:::-;4711:3;4704:37;4629:118;;:::o;4753:222::-;4846:4;4884:2;4873:9;4869:18;4861:26;;4897:71;4965:1;4954:9;4950:17;4941:6;4897:71;:::i;:::-;4753:222;;;;:::o;4981:474::-;5049:6;5057;5106:2;5094:9;5085:7;5081:23;5077:32;5074:119;;;5112:79;;:::i;:::-;5074:119;5232:1;5257:53;5302:7;5293:6;5282:9;5278:22;5257:53;:::i;:::-;5247:63;;5203:117;5359:2;5385:53;5430:7;5421:6;5410:9;5406:22;5385:53;:::i;:::-;5375:63;;5330:118;4981:474;;;;;:::o;5461:169::-;5545:11;5579:6;5574:3;5567:19;5619:4;5614:3;5610:14;5595:29;;5461:169;;;;:::o;5636:161::-;5776:13;5772:1;5764:6;5760:14;5753:37;5636:161;:::o;5803:366::-;5945:3;5966:67;6030:2;6025:3;5966:67;:::i;:::-;5959:74;;6042:93;6131:3;6042:93;:::i;:::-;6160:2;6155:3;6151:12;6144:19;;5803:366;;;:::o;6175:419::-;6341:4;6379:2;6368:9;6364:18;6356:26;;6428:9;6422:4;6418:20;6414:1;6403:9;6399:17;6392:47;6456:131;6582:4;6456:131;:::i;:::-;6448:139;;6175:419;;;:::o;6600:158::-;6740:10;6736:1;6728:6;6724:14;6717:34;6600:158;:::o;6764:365::-;6906:3;6927:66;6991:1;6986:3;6927:66;:::i;:::-;6920:73;;7002:93;7091:3;7002:93;:::i;:::-;7120:2;7115:3;7111:12;7104:19;;6764:365;;;:::o;7135:419::-;7301:4;7339:2;7328:9;7324:18;7316:26;;7388:9;7382:4;7378:20;7374:1;7363:9;7359:17;7352:47;7416:131;7542:4;7416:131;:::i;:::-;7408:139;;7135:419;;;:::o;7560:180::-;7608:77;7605:1;7598:88;7705:4;7702:1;7695:15;7729:4;7726:1;7719:15;7746:191;7786:3;7805:20;7823:1;7805:20;:::i;:::-;7800:25;;7839:20;7857:1;7839:20;:::i;:::-;7834:25;;7882:1;7879;7875:9;7868:16;;7903:3;7900:1;7897:10;7894:36;;;7910:18;;:::i;:::-;7894:36;7746:191;;;;:::o;7943:162::-;8083:14;8079:1;8071:6;8067:14;8060:38;7943:162;:::o;8111:366::-;8253:3;8274:67;8338:2;8333:3;8274:67;:::i;:::-;8267:74;;8350:93;8439:3;8350:93;:::i;:::-;8468:2;8463:3;8459:12;8452:19;;8111:366;;;:::o;8483:419::-;8649:4;8687:2;8676:9;8672:18;8664:26;;8736:9;8730:4;8726:20;8722:1;8711:9;8707:17;8700:47;8764:131;8890:4;8764:131;:::i;:::-;8756:139;;8483:419;;;:::o;8908:180::-;8956:77;8953:1;8946:88;9053:4;9050:1;9043:15;9077:4;9074:1;9067:15;9094:185;9134:1;9151:20;9169:1;9151:20;:::i;:::-;9146:25;;9185:20;9203:1;9185:20;:::i;:::-;9180:25;;9224:1;9214:35;;9229:18;;:::i;:::-;9214:35;9271:1;9268;9264:9;9259:14;;9094:185;;;;:::o;9285:194::-;9325:4;9345:20;9363:1;9345:20;:::i;:::-;9340:25;;9379:20;9397:1;9379:20;:::i;:::-;9374:25;;9423:1;9420;9416:9;9408:17;;9447:1;9441:4;9438:11;9435:37;;;9452:18;;:::i;:::-;9435:37;9285:194;;;;:::o;9485:164::-;9625:16;9621:1;9613:6;9609:14;9602:40;9485:164;:::o;9655:366::-;9797:3;9818:67;9882:2;9877:3;9818:67;:::i;:::-;9811:74;;9894:93;9983:3;9894:93;:::i;:::-;10012:2;10007:3;10003:12;9996:19;;9655:366;;;:::o;10027:419::-;10193:4;10231:2;10220:9;10216:18;10208:26;;10280:9;10274:4;10270:20;10266:1;10255:9;10251:17;10244:47;10308:131;10434:4;10308:131;:::i;:::-;10300:139;;10027:419;;;:::o;10452:168::-;10592:20;10588:1;10580:6;10576:14;10569:44;10452:168;:::o;10626:366::-;10768:3;10789:67;10853:2;10848:3;10789:67;:::i;:::-;10782:74;;10865:93;10954:3;10865:93;:::i;:::-;10983:2;10978:3;10974:12;10967:19;;10626:366;;;:::o;10998:419::-;11164:4;11202:2;11191:9;11187:18;11179:26;;11251:9;11245:4;11241:20;11237:1;11226:9;11222:17;11215:47;11279:131;11405:4;11279:131;:::i;:::-;11271:139;;10998:419;;;:::o;11423:163::-;11563:15;11559:1;11551:6;11547:14;11540:39;11423:163;:::o;11592:366::-;11734:3;11755:67;11819:2;11814:3;11755:67;:::i;:::-;11748:74;;11831:93;11920:3;11831:93;:::i;:::-;11949:2;11944:3;11940:12;11933:19;;11592:366;;;:::o;11964:419::-;12130:4;12168:2;12157:9;12153:18;12145:26;;12217:9;12211:4;12207:20;12203:1;12192:9;12188:17;12181:47;12245:131;12371:4;12245:131;:::i;:::-;12237:139;;11964:419;;;:::o;12389:182::-;12529:34;12525:1;12517:6;12513:14;12506:58;12389:182;:::o;12577:366::-;12719:3;12740:67;12804:2;12799:3;12740:67;:::i;:::-;12733:74;;12816:93;12905:3;12816:93;:::i;:::-;12934:2;12929:3;12925:12;12918:19;;12577:366;;;:::o;12949:419::-;13115:4;13153:2;13142:9;13138:18;13130:26;;13202:9;13196:4;13192:20;13188:1;13177:9;13173:17;13166:47;13230:131;13356:4;13230:131;:::i;:::-;13222:139;;12949:419;;;:::o;13374:182::-;13514:34;13510:1;13502:6;13498:14;13491:58;13374:182;:::o;13562:366::-;13704:3;13725:67;13789:2;13784:3;13725:67;:::i;:::-;13718:74;;13801:93;13890:3;13801:93;:::i;:::-;13919:2;13914:3;13910:12;13903:19;;13562:366;;;:::o;13934:419::-;14100:4;14138:2;14127:9;14123:18;14115:26;;14187:9;14181:4;14177:20;14173:1;14162:9;14158:17;14151:47;14215:131;14341:4;14215:131;:::i;:::-;14207:139;;13934:419;;;:::o;14359:182::-;14499:34;14495:1;14487:6;14483:14;14476:58;14359:182;:::o;14547:366::-;14689:3;14710:67;14774:2;14769:3;14710:67;:::i;:::-;14703:74;;14786:93;14875:3;14786:93;:::i;:::-;14904:2;14899:3;14895:12;14888:19;;14547:366;;;:::o;14919:419::-;15085:4;15123:2;15112:9;15108:18;15100:26;;15172:9;15166:4;15162:20;15158:1;15147:9;15143:17;15136:47;15200:131;15326:4;15200:131;:::i;:::-;15192:139;;14919:419;;;:::o;15344:182::-;15484:34;15480:1;15472:6;15468:14;15461:58;15344:182;:::o;15532:366::-;15674:3;15695:67;15759:2;15754:3;15695:67;:::i;:::-;15688:74;;15771:93;15860:3;15771:93;:::i;:::-;15889:2;15884:3;15880:12;15873:19;;15532:366;;;:::o;15904:419::-;16070:4;16108:2;16097:9;16093:18;16085:26;;16157:9;16151:4;16147:20;16143:1;16132:9;16128:17;16121:47;16185:131;16311:4;16185:131;:::i;:::-;16177:139;;15904:419;;;:::o;16329:332::-;16450:4;16488:2;16477:9;16473:18;16465:26;;16501:71;16569:1;16558:9;16554:17;16545:6;16501:71;:::i;:::-;16582:72;16650:2;16639:9;16635:18;16626:6;16582:72;:::i;:::-;16329:332;;;;;:::o;16667:442::-;16816:4;16854:2;16843:9;16839:18;16831:26;;16867:71;16935:1;16924:9;16920:17;16911:6;16867:71;:::i;:::-;16948:72;17016:2;17005:9;17001:18;16992:6;16948:72;:::i;:::-;17030;17098:2;17087:9;17083:18;17074:6;17030:72;:::i;:::-;16667:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2145200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addStake(uint256,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"box1Balance(address)": "2958",
								"box1DepositDate(address)": "2892",
								"box1Enabled()": "2578",
								"box1Rate()": "2469",
								"box1Time()": "2471",
								"box2Balance(address)": "2849",
								"box2DepositDate(address)": "2848",
								"box2Enabled()": "2577",
								"box2Rate()": "2558",
								"box2Time()": "2514",
								"box3Balance(address)": "2870",
								"box3DepositDate(address)": "2892",
								"box3Enabled()": "2511",
								"box3Rate()": "2492",
								"box3Time()": "2494",
								"box4Balance(address)": "2937",
								"box4DepositDate(address)": "2936",
								"box4Enabled()": "2578",
								"box4Rate()": "2558",
								"box4Time()": "2580",
								"changeBox1Status(bool)": "infinite",
								"changeBox2Status(bool)": "infinite",
								"changeBox3Status(bool)": "infinite",
								"changeBox4Status(bool)": "infinite",
								"changeFullUnlock(bool)": "infinite",
								"changeMaxRewardDue(uint256)": "infinite",
								"changeMaxStake(uint256)": "infinite",
								"changeMinStake(uint256)": "infinite",
								"fullUnlock()": "2598",
								"landFiToken()": "infinite",
								"maxRewardDue()": "2492",
								"maxStake()": "2491",
								"minStake()": "2537",
								"owner()": "2648",
								"pullStake(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardCount()": "2558",
								"rewardCountDue()": "2514",
								"stakeAmount(address,uint256)": "infinite",
								"stakeUnlockTime(address,uint256)": "infinite",
								"totalStaked()": "2493",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 362,
									"end": 7757,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1694,
									"end": 2416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 396,
									"end": 406,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1773,
									"end": 1774,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1775,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1748,
									"end": 1775,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1748,
									"end": 1761,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1748,
									"end": 1775,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1748,
									"end": 1775,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1748,
									"end": 1775,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1740,
									"end": 1808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 1740,
									"end": 1808,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1840,
									"end": 1853,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1819,
									"end": 1854,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1819,
									"end": 1854,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1819,
									"end": 1854,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1819,
									"end": 1854,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1819,
									"end": 1854,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1819,
									"end": 1854,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1819,
									"end": 1854,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1819,
									"end": 1854,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1819,
									"end": 1854,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1819,
									"end": 1854,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1884,
									"end": 1885,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1867,
									"end": 1881,
									"name": "PUSH",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 1867,
									"end": 1885,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1867,
									"end": 1885,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1867,
									"end": 1885,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1867,
									"end": 1885,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1910,
									"end": 1911,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 1907,
									"name": "PUSH",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1896,
									"end": 1911,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1896,
									"end": 1911,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1896,
									"end": 1911,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1896,
									"end": 1911,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1936,
									"end": 1937,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1922,
									"end": 1933,
									"name": "PUSH",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1922,
									"end": 1937,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1937,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1937,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1937,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1959,
									"end": 1972,
									"name": "PUSH",
									"source": 11,
									"value": "54B40B1F852BDA000000"
								},
								{
									"begin": 1948,
									"end": 1956,
									"name": "PUSH",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1948,
									"end": 1972,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1948,
									"end": 1972,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1948,
									"end": 1972,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1948,
									"end": 1972,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1998,
									"end": 2011,
									"name": "PUSH",
									"source": 11,
									"value": "69E10DE76676D0800000"
								},
								{
									"begin": 1983,
									"end": 1995,
									"name": "PUSH",
									"source": 11,
									"value": "1A"
								},
								{
									"begin": 1983,
									"end": 2011,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1983,
									"end": 2011,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1983,
									"end": 2011,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1983,
									"end": 2011,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2043,
									"name": "PUSH",
									"source": 11,
									"value": "2386F26FC10000"
								},
								{
									"begin": 2022,
									"end": 2030,
									"name": "PUSH",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 2022,
									"end": 2043,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2022,
									"end": 2043,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2022,
									"end": 2043,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2022,
									"end": 2043,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2067,
									"end": 2072,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2054,
									"end": 2064,
									"name": "PUSH",
									"source": 11,
									"value": "1B"
								},
								{
									"begin": 2054,
									"end": 2064,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2072,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2096,
									"end": 2099,
									"name": "PUSH",
									"source": 11,
									"value": "14D"
								},
								{
									"begin": 2085,
									"end": 2093,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2085,
									"end": 2099,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2085,
									"end": 2099,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2085,
									"end": 2099,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2085,
									"end": 2099,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2121,
									"end": 2127,
									"name": "PUSH",
									"source": 11,
									"value": "93A80"
								},
								{
									"begin": 2110,
									"end": 2118,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2110,
									"end": 2127,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2110,
									"end": 2127,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2110,
									"end": 2127,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2110,
									"end": 2127,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2156,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2138,
									"end": 2149,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 2138,
									"end": 2149,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2180,
									"end": 2182,
									"name": "PUSH",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 2169,
									"end": 2177,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 2169,
									"end": 2182,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2169,
									"end": 2182,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2169,
									"end": 2182,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2169,
									"end": 2182,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2204,
									"end": 2211,
									"name": "PUSH",
									"source": 11,
									"value": "127500"
								},
								{
									"begin": 2193,
									"end": 2201,
									"name": "PUSH",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 2193,
									"end": 2211,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2193,
									"end": 2211,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2193,
									"end": 2211,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2193,
									"end": 2211,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2236,
									"end": 2240,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2222,
									"end": 2233,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 2222,
									"end": 2233,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2222,
									"end": 2240,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2264,
									"end": 2266,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2253,
									"end": 2261,
									"name": "PUSH",
									"source": 11,
									"value": "D"
								},
								{
									"begin": 2253,
									"end": 2266,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2253,
									"end": 2266,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2253,
									"end": 2266,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2253,
									"end": 2266,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2288,
									"end": 2295,
									"name": "PUSH",
									"source": 11,
									"value": "24EA00"
								},
								{
									"begin": 2277,
									"end": 2285,
									"name": "PUSH",
									"source": 11,
									"value": "E"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2320,
									"end": 2324,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2306,
									"end": 2317,
									"name": "PUSH",
									"source": 11,
									"value": "F"
								},
								{
									"begin": 2306,
									"end": 2317,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2324,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2348,
									"end": 2350,
									"name": "PUSH",
									"source": 11,
									"value": "1A"
								},
								{
									"begin": 2337,
									"end": 2345,
									"name": "PUSH",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 2337,
									"end": 2350,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2337,
									"end": 2350,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2337,
									"end": 2350,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2337,
									"end": 2350,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2372,
									"end": 2379,
									"name": "PUSH",
									"source": 11,
									"value": "24EA00"
								},
								{
									"begin": 2361,
									"end": 2369,
									"name": "PUSH",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 2361,
									"end": 2379,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2361,
									"end": 2379,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2361,
									"end": 2379,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2361,
									"end": 2379,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2404,
									"end": 2408,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2390,
									"end": 2401,
									"name": "PUSH",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 2390,
									"end": 2401,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2390,
									"end": 2408,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 2416,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1638,
									"end": 1649,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1667,
									"end": 1670,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1660,
									"end": 1679,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1712,
									"end": 1716,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1710,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1703,
									"end": 1717,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1688,
									"end": 1717,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1688,
									"end": 1717,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1554,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1729,
									"end": 1907,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1729,
									"end": 1907,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1899,
									"name": "PUSH",
									"source": 12,
									"value": "546F6B656E20616464726573732063616E6E6F74206265207A65726F00000000"
								},
								{
									"begin": 1865,
									"end": 1866,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1857,
									"end": 1863,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1853,
									"end": 1867,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1846,
									"end": 1900,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1729,
									"end": 1907,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1729,
									"end": 1907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2055,
									"end": 2058,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2076,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 2140,
									"end": 2142,
									"name": "PUSH",
									"source": 12,
									"value": "1C"
								},
								{
									"begin": 2135,
									"end": 2138,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2076,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2076,
									"end": 2143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2076,
									"end": 2143,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 2076,
									"end": 2143,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2143,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2143,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2241,
									"end": 2244,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2270,
									"end": 2272,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2265,
									"end": 2268,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2261,
									"end": 2273,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2254,
									"end": 2273,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2254,
									"end": 2273,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1913,
									"end": 2279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2451,
									"end": 2455,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2489,
									"end": 2491,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2478,
									"end": 2487,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2474,
									"end": 2492,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2466,
									"end": 2492,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2466,
									"end": 2492,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2538,
									"end": 2547,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2532,
									"end": 2536,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2528,
									"end": 2548,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2524,
									"end": 2525,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2513,
									"end": 2522,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2509,
									"end": 2526,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2502,
									"end": 2549,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2697,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2692,
									"end": 2696,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2697,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 2566,
									"end": 2697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2697,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2566,
									"end": 2697,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2558,
									"end": 2697,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2558,
									"end": 2697,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2285,
									"end": 2704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1439"
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 7757,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122005d93b648ad3b0d7cad9c00587a635b46755b283a43b3e13239781ef7ad2f0fd64736f6c634300081e0033",
									".code": [
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "7B3E920C"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "D0BCC009"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "E7DE2CEB"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "E7DE2CEB"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "EA1B28E0"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "F1CDDD55"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "F908DC13"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "FD2B5202"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "D0BCC009"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "D19B090E"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "D47C56E5"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "D5C41D69"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "D7D4918E"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "94387289"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "94387289"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "B39DC996"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "BBA4FEFD"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "BEF7D12E"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "C3630EDB"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "CD5692EE"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "7B3E920C"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "817B1CD2"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "89B0040A"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "8A170AC1"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "4B0C10D8"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "6CBDE5CF"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "6CBDE5CF"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "73DEC718"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "79085425"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "798CBE5E"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "4B0C10D8"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "4B5EFFC2"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "4F51D090"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "5CD5A159"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "5F75BCEA"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "292A6B19"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "292A6B19"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "2E5F89EF"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "35E63055"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "375B3C0A"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "38DC97FB"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "4893AFC1"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "58DF0E8"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "1D95985B"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "1D95D52F"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "23DCDB89"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "24EBD9D2"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 7757,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 763,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 763,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 763,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1109,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1109,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2713,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2713,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2984,
											"end": 3065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2984,
											"end": 3065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1171,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1171,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1171,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 515,
											"end": 550,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 515,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 515,
											"end": 550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 515,
											"end": 550,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 550,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 515,
											"end": 550,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 515,
											"end": 550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 515,
											"end": 550,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 550,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 967,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 967,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 967,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 5679,
											"end": 7754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 5679,
											"end": 7754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1495,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1495,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1225,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1225,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1225,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 559,
											"end": 606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 559,
											"end": 606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 559,
											"end": 606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 701,
											"end": 724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 701,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 701,
											"end": 724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 701,
											"end": 724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 724,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 701,
											"end": 724,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 701,
											"end": 724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 701,
											"end": 724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 724,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3720,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 3720,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 3720,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 613,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 613,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 613,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 1343,
											"end": 1366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1343,
											"end": 1366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2535,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2535,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2446,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 2446,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 3161,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3161,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 3161,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 935,
											"end": 958,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 935,
											"end": 958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 935,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 935,
											"end": 958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 935,
											"end": 958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 958,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 935,
											"end": 958,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 935,
											"end": 958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 935,
											"end": 958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 958,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1561,
											"end": 1587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1561,
											"end": 1587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 1313,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1313,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 817,
											"end": 868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 817,
											"end": 868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 817,
											"end": 868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 1594,
											"end": 1620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1594,
											"end": 1620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1021,
											"end": 1072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 1021,
											"end": 1072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1021,
											"end": 1072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 731,
											"end": 754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 731,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 731,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 731,
											"end": 754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 731,
											"end": 754,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 731,
											"end": 754,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 731,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 731,
											"end": 754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 731,
											"end": 754,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2802,
											"end": 2891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2802,
											"end": 2891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 1079,
											"end": 1102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1079,
											"end": 1102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 1525,
											"end": 1554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1525,
											"end": 1554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3337,
											"end": 3712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 3337,
											"end": 3712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 3337,
											"end": 3712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1283,
											"end": 1306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1283,
											"end": 1306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2897,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2897,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 1139,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1139,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 1627,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1627,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 905,
											"end": 928,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 905,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 905,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 905,
											"end": 928,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 905,
											"end": 928,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 905,
											"end": 928,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 905,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 905,
											"end": 928,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 905,
											"end": 928,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2624,
											"end": 2707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 2624,
											"end": 2707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 875,
											"end": 898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 875,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 875,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 875,
											"end": 898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 875,
											"end": 898,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 875,
											"end": 898,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 875,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 875,
											"end": 898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 875,
											"end": 898,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 671,
											"end": 694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 671,
											"end": 694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 1465,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1465,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 3071,
											"end": 3153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 3071,
											"end": 3153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 1663,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1663,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 4039,
											"end": 5671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 4039,
											"end": 5671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 810,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 763,
											"end": 810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2787,
											"end": 2793,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 2773,
											"end": 2784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3062,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 3045,
											"end": 3062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3062,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 515,
											"end": 550,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1439"
										},
										{
											"begin": 515,
											"end": 550,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 515,
											"end": 550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5751,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5741,
											"end": 5746,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5741,
											"end": 5751,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5741,
											"end": 5751,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5765,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5755,
											"end": 5760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5765,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5765,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 5733,
											"end": 5781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 5733,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5794,
											"end": 5806,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5809,
											"end": 5819,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5794,
											"end": 5819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5794,
											"end": 5819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5830,
											"end": 5850,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5901,
											"end": 5902,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5892,
											"end": 5897,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5902,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 5888,
											"end": 7278,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5928,
											"end": 5939,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5940,
											"end": 5944,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5919,
											"end": 5945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5919,
											"end": 5945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5977,
											"end": 5978,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5968,
											"end": 5978,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 5960,
											"end": 5991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 5960,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6024,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 6014,
											"end": 6024,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6014,
											"end": 6024,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6024,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6024,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6024,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6014,
											"end": 6024,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6024,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6024,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6024,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6014,
											"end": 6024,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6079,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 6014,
											"end": 6079,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6079,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6071,
											"end": 6079,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6071,
											"end": 6079,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6062,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6067,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6068,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 6047,
											"end": 6079,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6079,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 6047,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6047,
											"end": 6079,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 6047,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6028,
											"end": 6043,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 6028,
											"end": 6079,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6028,
											"end": 6079,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6079,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 6014,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 6006,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 6006,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6135,
											"end": 6143,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 6135,
											"end": 6143,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6132,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 6126,
											"end": 6143,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 6126,
											"end": 6143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6143,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 6126,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6111,
											"end": 6143,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6111,
											"end": 6143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6178,
											"end": 6179,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6158,
											"end": 6169,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6170,
											"end": 6174,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6158,
											"end": 6175,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6179,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6179,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6179,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6218,
											"end": 6219,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6194,
											"end": 6209,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6214,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6194,
											"end": 6215,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6219,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6219,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6219,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6194,
											"end": 6219,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 5888,
											"end": 7278,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 7278,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 5888,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6251,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 6241,
											"end": 6246,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6251,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 6237,
											"end": 7278,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6277,
											"end": 6288,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6289,
											"end": 6293,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6268,
											"end": 6294,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6268,
											"end": 6294,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6326,
											"end": 6327,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6323,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6317,
											"end": 6327,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 6309,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 6309,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6373,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 6363,
											"end": 6373,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6373,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6373,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6373,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6373,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6363,
											"end": 6373,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6373,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6373,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6373,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6363,
											"end": 6373,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6428,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 6363,
											"end": 6428,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6420,
											"end": 6428,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 6420,
											"end": 6428,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6411,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6412,
											"end": 6416,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6417,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 6396,
											"end": 6428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6428,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 6396,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6396,
											"end": 6428,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 6396,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6377,
											"end": 6392,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 6377,
											"end": 6428,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6377,
											"end": 6428,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6428,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 6363,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 6355,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 6355,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6484,
											"end": 6492,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 6484,
											"end": 6492,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6481,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 6475,
											"end": 6492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6460,
											"end": 6492,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6460,
											"end": 6492,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6527,
											"end": 6528,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6518,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6519,
											"end": 6523,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6524,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6528,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6528,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6543,
											"end": 6558,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6559,
											"end": 6563,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6568,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6568,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6568,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6543,
											"end": 6568,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 6237,
											"end": 7278,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 7278,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 6237,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6599,
											"end": 6600,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 6590,
											"end": 6595,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6590,
											"end": 6600,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6586,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 6586,
											"end": 7278,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6626,
											"end": 6637,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6638,
											"end": 6642,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6626,
											"end": 6643,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6617,
											"end": 6643,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6617,
											"end": 6643,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6675,
											"end": 6676,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6666,
											"end": 6676,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 6658,
											"end": 6689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 6658,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6712,
											"end": 6777,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6712,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 6712,
											"end": 6777,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6712,
											"end": 6777,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6769,
											"end": 6777,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 6769,
											"end": 6777,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6760,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6765,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 6745,
											"end": 6777,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6777,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 6745,
											"end": 6777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6777,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 6745,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 6726,
											"end": 6777,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6726,
											"end": 6777,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6712,
											"end": 6777,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 6712,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 6704,
											"end": 6794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 6704,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6833,
											"end": 6841,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 6833,
											"end": 6841,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 6824,
											"end": 6841,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6841,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 6824,
											"end": 6841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6824,
											"end": 6841,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 6824,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6809,
											"end": 6841,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6809,
											"end": 6841,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6876,
											"end": 6877,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6856,
											"end": 6867,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6872,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6856,
											"end": 6873,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6877,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6877,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6877,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6856,
											"end": 6877,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6916,
											"end": 6917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6892,
											"end": 6907,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6912,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6917,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6917,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 6917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6586,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 6586,
											"end": 7278,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6586,
											"end": 7278,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 6586,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 6949,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6939,
											"end": 6944,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6939,
											"end": 6949,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6935,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 6935,
											"end": 7278,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 6986,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6987,
											"end": 6991,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 6992,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 6992,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7024,
											"end": 7025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7015,
											"end": 7025,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 7007,
											"end": 7038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7061,
											"end": 7071,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 7061,
											"end": 7126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7118,
											"end": 7126,
											"name": "PUSH",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 7118,
											"end": 7126,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7109,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7110,
											"end": 7114,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7115,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 7094,
											"end": 7126,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 7094,
											"end": 7126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7126,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 7094,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7075,
											"end": 7090,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 7075,
											"end": 7126,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7075,
											"end": 7126,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7126,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 7061,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 7053,
											"end": 7143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 7053,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7182,
											"end": 7190,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 7182,
											"end": 7190,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7173,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 7173,
											"end": 7190,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7173,
											"end": 7190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7173,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 7173,
											"end": 7190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7173,
											"end": 7190,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 7173,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7158,
											"end": 7190,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7158,
											"end": 7190,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7225,
											"end": 7226,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7205,
											"end": 7216,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7217,
											"end": 7221,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7226,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7226,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7226,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7226,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7265,
											"end": 7266,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7256,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7257,
											"end": 7261,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7262,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6935,
											"end": 7278,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 6935,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6586,
											"end": 7278,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 6586,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 7278,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 6237,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 7278,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 5888,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7305,
											"end": 7311,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 7290,
											"end": 7301,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 7290,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7311,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7322,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 7322,
											"end": 7379,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7367,
											"end": 7379,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7364,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 7353,
											"end": 7364,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 7353,
											"end": 7379,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7379,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 7353,
											"end": 7379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7379,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 7353,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7339,
											"end": 7350,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 7339,
											"end": 7379,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7339,
											"end": 7379,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7339,
											"end": 7379,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7339,
											"end": 7379,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7322,
											"end": 7379,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 7322,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7395,
											"end": 7405,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 7395,
											"end": 7405,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7405,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7395,
											"end": 7405,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7395,
											"end": 7405,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7395,
											"end": 7405,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7395,
											"end": 7405,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7395,
											"end": 7405,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7395,
											"end": 7405,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7395,
											"end": 7405,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7395,
											"end": 7405,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7390,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 7390,
											"end": 7453,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7441,
											"end": 7453,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7424,
											"end": 7438,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 7424,
											"end": 7438,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7424,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 7424,
											"end": 7453,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7424,
											"end": 7453,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7424,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 7424,
											"end": 7453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7424,
											"end": 7453,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 7424,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7407,
											"end": 7421,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 7407,
											"end": 7453,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7407,
											"end": 7453,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7407,
											"end": 7453,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7407,
											"end": 7453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7390,
											"end": 7453,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 7390,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7466,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 7491,
											"end": 7495,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7466,
											"end": 7477,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1439"
										},
										{
											"begin": 7466,
											"end": 7490,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7466,
											"end": 7490,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7466,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 7466,
											"end": 7490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7466,
											"end": 7504,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7466,
											"end": 7504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7466,
											"end": 7504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7466,
											"end": 7504,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7466,
											"end": 7504,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7466,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7466,
											"end": 7504,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 7466,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7522,
											"end": 7532,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 7522,
											"end": 7532,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7532,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7522,
											"end": 7532,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7522,
											"end": 7532,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7522,
											"end": 7532,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7522,
											"end": 7532,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7522,
											"end": 7532,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7522,
											"end": 7532,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7522,
											"end": 7532,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7522,
											"end": 7532,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7517,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 7517,
											"end": 7747,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7562,
											"end": 7563,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7558,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7563,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7549,
											"end": 7736,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 7549,
											"end": 7736,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7584,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 1414,
											"end": 1456,
											"name": "PUSH",
											"source": 11,
											"value": "DEAD"
										},
										{
											"begin": 7622,
											"end": 7634,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7584,
											"end": 7595,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1439"
										},
										{
											"begin": 7584,
											"end": 7608,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7584,
											"end": 7608,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7584,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 7584,
											"end": 7608,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7584,
											"end": 7635,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7584,
											"end": 7635,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7584,
											"end": 7635,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7584,
											"end": 7635,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7584,
											"end": 7635,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7584,
											"end": 7635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7584,
											"end": 7635,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 7584,
											"end": 7635,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7549,
											"end": 7736,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 7549,
											"end": 7736,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7549,
											"end": 7736,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 7549,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7676,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 7701,
											"end": 7705,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7676,
											"end": 7687,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1439"
										},
										{
											"begin": 7676,
											"end": 7700,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7676,
											"end": 7700,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7676,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 7676,
											"end": 7700,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7676,
											"end": 7720,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7676,
											"end": 7720,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7676,
											"end": 7720,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7676,
											"end": 7720,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7676,
											"end": 7720,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7676,
											"end": 7720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7676,
											"end": 7720,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 7676,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7549,
											"end": 7736,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 7549,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7517,
											"end": 7747,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 7517,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5722,
											"end": 7754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5722,
											"end": 7754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5722,
											"end": 7754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 7754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1225,
											"end": 1276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 606,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 559,
											"end": 606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 701,
											"end": 724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 701,
											"end": 724,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 701,
											"end": 724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3791,
											"end": 3798,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3825,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 3825,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3811,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 3811,
											"end": 3851,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3845,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3850,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3827,
											"end": 3851,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3827,
											"end": 3851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3827,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 3827,
											"end": 3851,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3811,
											"end": 3851,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 3811,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3875,
											"end": 3876,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3866,
											"end": 3871,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3866,
											"end": 3876,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 3862,
											"end": 3902,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3896,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3901,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3878,
											"end": 3902,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3878,
											"end": 3902,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3878,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 3878,
											"end": 3902,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3902,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 3862,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3926,
											"end": 3927,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3917,
											"end": 3922,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3927,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3913,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 3913,
											"end": 3953,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3947,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3952,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3929,
											"end": 3953,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3929,
											"end": 3953,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3929,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 3929,
											"end": 3953,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3913,
											"end": 3953,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 3913,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3968,
											"end": 3973,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3968,
											"end": 3978,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3964,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 3964,
											"end": 4004,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 3998,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4003,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4004,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4004,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 3980,
											"end": 4004,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3964,
											"end": 4004,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 3964,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4023,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4015,
											"end": 4023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 4031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 613,
											"end": 664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 2595,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2615,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2520,
											"end": 2526,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2506,
											"end": 2517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2526,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2446,
											"end": 2529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3217,
											"end": 3224,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3315,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3320,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3304,
											"end": 3321,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3295,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3300,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3275,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3260,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3261,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 3244,
											"end": 3281,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3281,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 3244,
											"end": 3281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3281,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 3244,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3244,
											"end": 3301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3301,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 3244,
											"end": 3301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3301,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3244,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3244,
											"end": 3321,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3321,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 3244,
											"end": 3321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3321,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3244,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3237,
											"end": 3321,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3237,
											"end": 3321,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 935,
											"end": 958,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 935,
											"end": 958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 935,
											"end": 958,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 958,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 935,
											"end": 958,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 935,
											"end": 958,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 935,
											"end": 958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 731,
											"end": 754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 731,
											"end": 754,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 731,
											"end": 754,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 731,
											"end": 754,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 731,
											"end": 754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2882,
											"end": 2888,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2867,
											"end": 2879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 2867,
											"end": 2888,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2867,
											"end": 2888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2867,
											"end": 2888,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2867,
											"end": 2888,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3412,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3441,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3436,
											"end": 3446,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3432,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3432,
											"end": 3487,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3479,
											"end": 3487,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3479,
											"end": 3487,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3470,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3475,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3455,
											"end": 3487,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3487,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 3455,
											"end": 3487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3487,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3455,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3487,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3448,
											"end": 3487,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3432,
											"end": 3487,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3432,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3502,
											"end": 3507,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 3498,
											"end": 3553,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3545,
											"end": 3553,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3545,
											"end": 3553,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3541,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 3521,
											"end": 3553,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3553,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 3521,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3553,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 3521,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3553,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3514,
											"end": 3553,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3553,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 3498,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3568,
											"end": 3573,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3568,
											"end": 3578,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3564,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 3564,
											"end": 3619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3611,
											"end": 3619,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 3611,
											"end": 3619,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3602,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3603,
											"end": 3607,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3608,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 3587,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3619,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3580,
											"end": 3619,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3564,
											"end": 3619,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 3564,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3643,
											"end": 3644,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3634,
											"end": 3644,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3630,
											"end": 3685,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3677,
											"end": 3685,
											"name": "PUSH",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 3677,
											"end": 3685,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3668,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3673,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3674,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3653,
											"end": 3685,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3685,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 3653,
											"end": 3685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3685,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3653,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3646,
											"end": 3685,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3646,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3646,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3646,
											"end": 3685,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 3685,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3630,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3703,
											"end": 3704,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3704,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3696,
											"end": 3704,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2975,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 2958,
											"end": 2975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 2975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 2975,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 2975,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 905,
											"end": 928,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 905,
											"end": 928,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 905,
											"end": 928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 2684,
											"end": 2695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2704,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 875,
											"end": 898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 875,
											"end": 898,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 875,
											"end": 898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 671,
											"end": 694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3150,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 3131,
											"end": 3141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3150,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4125,
											"end": 4126,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4116,
											"end": 4121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4126,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4126,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4140,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4140,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 4116,
											"end": 4140,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4140,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4130,
											"end": 4135,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4130,
											"end": 4140,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4130,
											"end": 4140,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4140,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 4116,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 4108,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4193,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 4185,
											"end": 4193,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4175,
											"end": 4181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4175,
											"end": 4193,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4175,
											"end": 4193,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4175,
											"end": 4215,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4175,
											"end": 4215,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4175,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 4175,
											"end": 4215,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4175,
											"end": 4215,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4207,
											"end": 4215,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 4207,
											"end": 4215,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4197,
											"end": 4203,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4197,
											"end": 4215,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4197,
											"end": 4215,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4175,
											"end": 4215,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 4175,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4167,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 4167,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4253,
											"end": 4264,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 4245,
											"end": 4287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 4245,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4333,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 4322,
											"end": 4333,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4306,
											"end": 4318,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 4306,
											"end": 4318,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4306,
											"end": 4333,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4306,
											"end": 4333,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 4298,
											"end": 4351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4298,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4376,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4389,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4400,
											"end": 4420,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4446,
											"end": 4447,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4437,
											"end": 4442,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4447,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 4433,
											"end": 5519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4483,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4472,
											"end": 4483,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4483,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4483,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4472,
											"end": 4483,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4483,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4483,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4472,
											"end": 4483,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4509,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4487,
											"end": 4498,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4503,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4509,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 4464,
											"end": 4546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 4464,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4576,
											"end": 4582,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4576,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 4576,
											"end": 4593,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4576,
											"end": 4593,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4576,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 4576,
											"end": 4593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4576,
											"end": 4593,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 4576,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4561,
											"end": 4593,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4561,
											"end": 4593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4619,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4624,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4608,
											"end": 4625,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4634,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4634,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4634,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4673,
											"end": 4688,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4664,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4669,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4670,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4688,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 4688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 4433,
											"end": 5519,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 5519,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 4433,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4719,
											"end": 4720,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4710,
											"end": 4715,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4710,
											"end": 4720,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 4706,
											"end": 5519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4745,
											"end": 4756,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 4745,
											"end": 4756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 4756,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4745,
											"end": 4756,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4745,
											"end": 4756,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4745,
											"end": 4756,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4745,
											"end": 4756,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4745,
											"end": 4756,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4745,
											"end": 4756,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4745,
											"end": 4756,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4745,
											"end": 4756,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4745,
											"end": 4782,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4745,
											"end": 4782,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4745,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 4745,
											"end": 4782,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4745,
											"end": 4782,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4781,
											"end": 4782,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4771,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4776,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4777,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4782,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4745,
											"end": 4782,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 4745,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 4737,
											"end": 4819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 4737,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4866,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 4858,
											"end": 4866,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4849,
											"end": 4855,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 4849,
											"end": 4866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4907,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4892,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4893,
											"end": 4897,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4898,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4907,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4907,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4907,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4907,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4946,
											"end": 4961,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4937,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4938,
											"end": 4942,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4922,
											"end": 4943,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4961,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4961,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4961,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4961,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 4706,
											"end": 5519,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 5519,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 4706,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4983,
											"end": 4988,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4979,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 4979,
											"end": 5519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5029,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 5018,
											"end": 5029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5018,
											"end": 5029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5029,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5029,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5018,
											"end": 5029,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5029,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5029,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5018,
											"end": 5029,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5055,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5055,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5018,
											"end": 5055,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5054,
											"end": 5055,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5033,
											"end": 5044,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5049,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5055,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5055,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5018,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 5010,
											"end": 5092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 5010,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5131,
											"end": 5139,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 5131,
											"end": 5139,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5122,
											"end": 5128,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5122,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 5122,
											"end": 5139,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5122,
											"end": 5139,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5122,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 5122,
											"end": 5139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5122,
											"end": 5139,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 5122,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5107,
											"end": 5139,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5107,
											"end": 5139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5174,
											"end": 5180,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5165,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5171,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5180,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5180,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5180,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5154,
											"end": 5180,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5219,
											"end": 5234,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5210,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5215,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5195,
											"end": 5216,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5234,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5234,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5234,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5234,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4979,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 4979,
											"end": 5519,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4979,
											"end": 5519,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 4979,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5256,
											"end": 5261,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5266,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5252,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 5252,
											"end": 5519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5302,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 5291,
											"end": 5302,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5291,
											"end": 5302,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5302,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5302,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5302,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5291,
											"end": 5302,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5302,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5302,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5302,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5291,
											"end": 5302,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5328,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 5291,
											"end": 5328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5327,
											"end": 5328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5306,
											"end": 5317,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5318,
											"end": 5322,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5323,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5328,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 5291,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 5283,
											"end": 5365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 5283,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5412,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 5404,
											"end": 5412,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5395,
											"end": 5401,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5395,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 5395,
											"end": 5412,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5395,
											"end": 5412,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5395,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 5395,
											"end": 5412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5395,
											"end": 5412,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 5395,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5380,
											"end": 5412,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5380,
											"end": 5412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5447,
											"end": 5453,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5438,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5439,
											"end": 5443,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5453,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5453,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5453,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5492,
											"end": 5507,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5483,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5507,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5507,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5507,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5507,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5252,
											"end": 5519,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 5252,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4979,
											"end": 5519,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 4979,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 5519,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 4706,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 5519,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 4433,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5545,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 5531,
											"end": 5545,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 5531,
											"end": 5561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5587,
											"end": 5593,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5583,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 5572,
											"end": 5583,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 5572,
											"end": 5593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 5635,
											"end": 5639,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5649,
											"end": 5653,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 5656,
											"end": 5662,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5617,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1439"
										},
										{
											"begin": 5606,
											"end": 5634,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5606,
											"end": 5634,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 5606,
											"end": 5634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5663,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5663,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5663,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5663,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5663,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5606,
											"end": 5663,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5663,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 5606,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4097,
											"end": 5671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4097,
											"end": 5671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4039,
											"end": 5671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 1694,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1695,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 1777,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1770,
											"end": 1775,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1877,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1888,
											"end": 1917,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1888,
											"end": 1917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 1926,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2291,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1968,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2075,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2070,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2048,
											"end": 2071,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2044,
											"end": 2076,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2041,
											"end": 2160,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2041,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 2041,
											"end": 2160,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 2079,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 2079,
											"end": 2158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2158,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 2079,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2041,
											"end": 2160,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 2041,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2199,
											"end": 2200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 2266,
											"end": 2273,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2255,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2242,
											"end": 2264,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2224,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 2224,
											"end": 2274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2224,
											"end": 2274,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 2224,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2214,
											"end": 2274,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2214,
											"end": 2274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 2284,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2297,
											"end": 2419,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 2297,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2370,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 2388,
											"end": 2393,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2370,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 2370,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2370,
											"end": 2394,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 2370,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2395,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2410,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2411,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 2350,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2297,
											"end": 2419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2297,
											"end": 2419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2564,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 2425,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2471,
											"end": 2476,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2496,
											"end": 2516,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2487,
											"end": 2516,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2487,
											"end": 2516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 2525,
											"end": 2558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2564,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2564,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2899,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 2570,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2629,
											"end": 2635,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2675,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2657,
											"end": 2664,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2653,
											"end": 2676,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2649,
											"end": 2681,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2646,
											"end": 2765,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2646,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 2646,
											"end": 2765,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 2684,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 2684,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2763,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 2684,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2646,
											"end": 2765,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 2646,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2804,
											"end": 2805,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 2874,
											"end": 2881,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 2871,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2854,
											"end": 2863,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2872,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2829,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 2829,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2829,
											"end": 2882,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 2829,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2775,
											"end": 2892,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2899,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2899,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2905,
											"end": 2965,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 2905,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2933,
											"end": 2936,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2959,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2905,
											"end": 2965,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2905,
											"end": 2965,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2905,
											"end": 2965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2905,
											"end": 2965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2971,
											"end": 3113,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 2971,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 3072,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 3081,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 3099,
											"end": 3104,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3081,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 3081,
											"end": 3105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3081,
											"end": 3105,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 3081,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3072,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 3072,
											"end": 3106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3072,
											"end": 3106,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 3072,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 3054,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3041,
											"end": 3107,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3041,
											"end": 3107,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2971,
											"end": 3113,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2971,
											"end": 3113,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2971,
											"end": 3113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2971,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3119,
											"end": 3245,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 3119,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3169,
											"end": 3178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 3233,
											"end": 3238,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3202,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 3202,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3202,
											"end": 3239,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 3202,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3189,
											"end": 3239,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3189,
											"end": 3239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3119,
											"end": 3245,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3119,
											"end": 3245,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3119,
											"end": 3245,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3119,
											"end": 3245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3251,
											"end": 3391,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 3251,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3324,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 3379,
											"end": 3384,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 3348,
											"end": 3385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3251,
											"end": 3391,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3251,
											"end": 3391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3251,
											"end": 3391,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3251,
											"end": 3391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3397,
											"end": 3556,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 3397,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3498,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 3543,
											"end": 3548,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3498,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 3498,
											"end": 3549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3498,
											"end": 3549,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 3498,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3493,
											"end": 3496,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3550,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3397,
											"end": 3556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3397,
											"end": 3556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3397,
											"end": 3556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3562,
											"end": 3812,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 3562,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3669,
											"end": 3673,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3709,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3696,
											"end": 3705,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3684,
											"end": 3710,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3684,
											"end": 3710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 3802,
											"end": 3803,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3800,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3804,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3784,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 3720,
											"end": 3805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3805,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 3720,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3562,
											"end": 3812,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3562,
											"end": 3812,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3562,
											"end": 3812,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3562,
											"end": 3812,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3562,
											"end": 3812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 4292,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 3818,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3931,
											"end": 3940,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3922,
											"end": 3929,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3941,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3914,
											"end": 3946,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3911,
											"end": 4030,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3911,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 3911,
											"end": 4030,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3949,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 3949,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 3949,
											"end": 4028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3949,
											"end": 4028,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 3949,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3911,
											"end": 4030,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 3911,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4070,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4094,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 4139,
											"end": 4146,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4130,
											"end": 4136,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4119,
											"end": 4128,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4115,
											"end": 4137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4094,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 4094,
											"end": 4147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4094,
											"end": 4147,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 4094,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4084,
											"end": 4147,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4084,
											"end": 4147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4040,
											"end": 4157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4196,
											"end": 4198,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4222,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 4267,
											"end": 4274,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4264,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4247,
											"end": 4256,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4243,
											"end": 4265,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 4222,
											"end": 4275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4275,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 4222,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4212,
											"end": 4275,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4212,
											"end": 4275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4167,
											"end": 4285,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 4292,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 4292,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 4292,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 4292,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 4292,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 4292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4298,
											"end": 4407,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 4298,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4379,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 4394,
											"end": 4399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4379,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 4379,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4379,
											"end": 4400,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 4379,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4374,
											"end": 4377,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4367,
											"end": 4401,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4298,
											"end": 4407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4298,
											"end": 4407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4298,
											"end": 4407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4623,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 4413,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4500,
											"end": 4504,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4540,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4527,
											"end": 4536,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4523,
											"end": 4541,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4515,
											"end": 4541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4515,
											"end": 4541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 4613,
											"end": 4614,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4602,
											"end": 4611,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4598,
											"end": 4615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4589,
											"end": 4595,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 4551,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4616,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 4551,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4623,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4623,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4623,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4623,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4629,
											"end": 4747,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 4629,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4716,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 4734,
											"end": 4739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4716,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 4716,
											"end": 4740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4716,
											"end": 4740,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 4716,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4714,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4704,
											"end": 4741,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4629,
											"end": 4747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4629,
											"end": 4747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4629,
											"end": 4747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4753,
											"end": 4975,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 4753,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4846,
											"end": 4850,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4886,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4861,
											"end": 4887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4861,
											"end": 4887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4897,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 4965,
											"end": 4966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4967,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4941,
											"end": 4947,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4897,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 4897,
											"end": 4968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4897,
											"end": 4968,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 4897,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4753,
											"end": 4975,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4753,
											"end": 4975,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4753,
											"end": 4975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4753,
											"end": 4975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4753,
											"end": 4975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4981,
											"end": 5455,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 4981,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5049,
											"end": 5055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5063,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5108,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5094,
											"end": 5103,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5085,
											"end": 5092,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5104,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5077,
											"end": 5109,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5074,
											"end": 5193,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5074,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 5074,
											"end": 5193,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5112,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 5112,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 5112,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5112,
											"end": 5191,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 5112,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5074,
											"end": 5193,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 5074,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5232,
											"end": 5233,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5257,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 5302,
											"end": 5309,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5293,
											"end": 5299,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5291,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5278,
											"end": 5300,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5257,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 5257,
											"end": 5310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5257,
											"end": 5310,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 5257,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5247,
											"end": 5310,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5247,
											"end": 5310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5203,
											"end": 5320,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5359,
											"end": 5361,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5385,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 5430,
											"end": 5437,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5421,
											"end": 5427,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5406,
											"end": 5428,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5385,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 5385,
											"end": 5438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5385,
											"end": 5438,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 5385,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5375,
											"end": 5438,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5375,
											"end": 5438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5330,
											"end": 5448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4981,
											"end": 5455,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4981,
											"end": 5455,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4981,
											"end": 5455,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4981,
											"end": 5455,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4981,
											"end": 5455,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4981,
											"end": 5455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5461,
											"end": 5630,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 5461,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5545,
											"end": 5556,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5585,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5574,
											"end": 5577,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5567,
											"end": 5586,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5619,
											"end": 5623,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5614,
											"end": 5617,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5595,
											"end": 5624,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5595,
											"end": 5624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5461,
											"end": 5630,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5461,
											"end": 5630,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5461,
											"end": 5630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5461,
											"end": 5630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5461,
											"end": 5630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5636,
											"end": 5797,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 5636,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5776,
											"end": 5789,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420626F78000000000000000000000000000000000000000000"
										},
										{
											"begin": 5772,
											"end": 5773,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5770,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5760,
											"end": 5774,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5753,
											"end": 5790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5636,
											"end": 5797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5636,
											"end": 5797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5803,
											"end": 6169,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 5803,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5945,
											"end": 5948,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 6030,
											"end": 6032,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 6025,
											"end": 6028,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5966,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 5966,
											"end": 6033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5966,
											"end": 6033,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 5966,
											"end": 6033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5959,
											"end": 6033,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5959,
											"end": 6033,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 6131,
											"end": 6134,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 6042,
											"end": 6135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6135,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 6042,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6160,
											"end": 6162,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6155,
											"end": 6158,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6151,
											"end": 6163,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6144,
											"end": 6163,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6144,
											"end": 6163,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5803,
											"end": 6169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5803,
											"end": 6169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5803,
											"end": 6169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5803,
											"end": 6169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6175,
											"end": 6594,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 6175,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6341,
											"end": 6345,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6379,
											"end": 6381,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6377,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6428,
											"end": 6437,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6422,
											"end": 6426,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6418,
											"end": 6438,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6412,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6416,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6439,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 6582,
											"end": 6586,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 6456,
											"end": 6587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6587,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 6456,
											"end": 6587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6587,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6175,
											"end": 6594,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6175,
											"end": 6594,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6175,
											"end": 6594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6175,
											"end": 6594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6600,
											"end": 6758,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 6600,
											"end": 6758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6740,
											"end": 6750,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F207374616B65000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6736,
											"end": 6737,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6734,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6717,
											"end": 6751,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6600,
											"end": 6758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6600,
											"end": 6758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6764,
											"end": 7129,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 6764,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6906,
											"end": 6909,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6927,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 6991,
											"end": 6992,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 6986,
											"end": 6989,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6927,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 6927,
											"end": 6993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6927,
											"end": 6993,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 6927,
											"end": 6993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6920,
											"end": 6993,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6920,
											"end": 6993,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 7091,
											"end": 7094,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 7002,
											"end": 7095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7095,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 7002,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7120,
											"end": 7122,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7115,
											"end": 7118,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7111,
											"end": 7123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7104,
											"end": 7123,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7104,
											"end": 7123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6764,
											"end": 7129,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6764,
											"end": 7129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6764,
											"end": 7129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6764,
											"end": 7129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7554,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 7135,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7301,
											"end": 7305,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7339,
											"end": 7341,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7328,
											"end": 7337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7388,
											"end": 7397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7382,
											"end": 7386,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7398,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7374,
											"end": 7375,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7372,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7399,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7416,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 7542,
											"end": 7546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7416,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 7416,
											"end": 7547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7416,
											"end": 7547,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 7416,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7408,
											"end": 7547,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7408,
											"end": 7547,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7560,
											"end": 7740,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 7560,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7608,
											"end": 7685,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7605,
											"end": 7606,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7598,
											"end": 7686,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7705,
											"end": 7709,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 7702,
											"end": 7703,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7695,
											"end": 7710,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7729,
											"end": 7733,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7726,
											"end": 7727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7719,
											"end": 7734,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7937,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 7746,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7786,
											"end": 7789,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7805,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 7823,
											"end": 7824,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7805,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 7805,
											"end": 7825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7805,
											"end": 7825,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 7805,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7800,
											"end": 7825,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7800,
											"end": 7825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7839,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 7857,
											"end": 7858,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7839,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 7839,
											"end": 7859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7839,
											"end": 7859,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 7839,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7834,
											"end": 7859,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7834,
											"end": 7859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7882,
											"end": 7883,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7879,
											"end": 7880,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7875,
											"end": 7884,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7868,
											"end": 7884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7868,
											"end": 7884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7903,
											"end": 7906,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7900,
											"end": 7901,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7897,
											"end": 7907,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7894,
											"end": 7930,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7894,
											"end": 7930,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 7894,
											"end": 7930,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 7910,
											"end": 7928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7894,
											"end": 7930,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 7894,
											"end": 7930,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7937,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7943,
											"end": 8105,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 7943,
											"end": 8105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8083,
											"end": 8097,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F7420756E6C6F636B65640000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8080,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8071,
											"end": 8077,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8067,
											"end": 8081,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8060,
											"end": 8098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7943,
											"end": 8105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7943,
											"end": 8105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8111,
											"end": 8477,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 8111,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8253,
											"end": 8256,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8274,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 8338,
											"end": 8340,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 8333,
											"end": 8336,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8274,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 8274,
											"end": 8341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8274,
											"end": 8341,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 8274,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8267,
											"end": 8341,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8267,
											"end": 8341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8350,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 8439,
											"end": 8442,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8350,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 8350,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8350,
											"end": 8443,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 8350,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8468,
											"end": 8470,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8463,
											"end": 8466,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8459,
											"end": 8471,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8111,
											"end": 8477,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8111,
											"end": 8477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8111,
											"end": 8477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8111,
											"end": 8477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8483,
											"end": 8902,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 8483,
											"end": 8902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8649,
											"end": 8653,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8687,
											"end": 8689,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8676,
											"end": 8685,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8672,
											"end": 8690,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8736,
											"end": 8745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8730,
											"end": 8734,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8726,
											"end": 8746,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8722,
											"end": 8723,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8720,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8707,
											"end": 8724,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8700,
											"end": 8747,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8764,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 8890,
											"end": 8894,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8764,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 8764,
											"end": 8895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8764,
											"end": 8895,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 8764,
											"end": 8895,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8756,
											"end": 8895,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8756,
											"end": 8895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8483,
											"end": 8902,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8483,
											"end": 8902,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8483,
											"end": 8902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8483,
											"end": 8902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8908,
											"end": 9088,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 8908,
											"end": 9088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8956,
											"end": 9033,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8953,
											"end": 8954,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 9034,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9053,
											"end": 9057,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 9050,
											"end": 9051,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9043,
											"end": 9058,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9077,
											"end": 9081,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9074,
											"end": 9075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9067,
											"end": 9082,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9094,
											"end": 9279,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 9094,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9134,
											"end": 9135,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9151,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 9169,
											"end": 9170,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9151,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 9151,
											"end": 9171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9151,
											"end": 9171,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 9151,
											"end": 9171,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9171,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9171,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9185,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 9203,
											"end": 9204,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9185,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 9185,
											"end": 9205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9185,
											"end": 9205,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 9185,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9180,
											"end": 9205,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9180,
											"end": 9205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9224,
											"end": 9225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9214,
											"end": 9249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 9214,
											"end": 9249,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9229,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 9229,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 9229,
											"end": 9247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9229,
											"end": 9247,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 9229,
											"end": 9247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9214,
											"end": 9249,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 9214,
											"end": 9249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9271,
											"end": 9272,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9269,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9264,
											"end": 9273,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9259,
											"end": 9273,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9259,
											"end": 9273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9094,
											"end": 9279,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9094,
											"end": 9279,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9094,
											"end": 9279,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9094,
											"end": 9279,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9094,
											"end": 9279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9285,
											"end": 9479,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 9285,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9325,
											"end": 9329,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9345,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9345,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 9345,
											"end": 9365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9345,
											"end": 9365,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 9345,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9340,
											"end": 9365,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9340,
											"end": 9365,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9379,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 9397,
											"end": 9398,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9379,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 9379,
											"end": 9399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9379,
											"end": 9399,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 9379,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9374,
											"end": 9399,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9374,
											"end": 9399,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9423,
											"end": 9424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9420,
											"end": 9421,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9416,
											"end": 9425,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9408,
											"end": 9425,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9408,
											"end": 9425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9447,
											"end": 9448,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9441,
											"end": 9445,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9438,
											"end": 9449,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9435,
											"end": 9472,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9435,
											"end": 9472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 9435,
											"end": 9472,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9452,
											"end": 9470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 9452,
											"end": 9470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 9452,
											"end": 9470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9452,
											"end": 9470,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 9452,
											"end": 9470,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9435,
											"end": 9472,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 9435,
											"end": 9472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9285,
											"end": 9479,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9285,
											"end": 9479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9285,
											"end": 9479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9285,
											"end": 9479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9285,
											"end": 9479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9485,
											"end": 9649,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 9485,
											"end": 9649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9625,
											"end": 9641,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 9621,
											"end": 9622,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9619,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9609,
											"end": 9623,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9602,
											"end": 9642,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9485,
											"end": 9649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9485,
											"end": 9649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9797,
											"end": 9800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9818,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 9882,
											"end": 9884,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 9877,
											"end": 9880,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9818,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 9818,
											"end": 9885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9818,
											"end": 9885,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 9818,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 9885,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 9885,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9894,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 9983,
											"end": 9986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9894,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 9894,
											"end": 9987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9894,
											"end": 9987,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 9894,
											"end": 9987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10012,
											"end": 10014,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10007,
											"end": 10010,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10003,
											"end": 10015,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9996,
											"end": 10015,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9996,
											"end": 10015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9655,
											"end": 10021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9655,
											"end": 10021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10193,
											"end": 10197,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10231,
											"end": 10233,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10220,
											"end": 10229,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10216,
											"end": 10234,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10208,
											"end": 10234,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10208,
											"end": 10234,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10280,
											"end": 10289,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10274,
											"end": 10278,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10290,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10266,
											"end": 10267,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10255,
											"end": 10264,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10251,
											"end": 10268,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10244,
											"end": 10291,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10308,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 10434,
											"end": 10438,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10308,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 10308,
											"end": 10439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10308,
											"end": 10439,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 10308,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10300,
											"end": 10439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10300,
											"end": 10439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10452,
											"end": 10620,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 10452,
											"end": 10620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "PUSH",
											"source": 12,
											"value": "556E6C6F636B206D6F6465206163746976650000000000000000000000000000"
										},
										{
											"begin": 10588,
											"end": 10589,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10580,
											"end": 10586,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10576,
											"end": 10590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10569,
											"end": 10613,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10452,
											"end": 10620,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10452,
											"end": 10620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10626,
											"end": 10992,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 10626,
											"end": 10992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10768,
											"end": 10771,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 10853,
											"end": 10855,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 10848,
											"end": 10851,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10789,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 10789,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10789,
											"end": 10856,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 10789,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10782,
											"end": 10856,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10782,
											"end": 10856,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10865,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 10954,
											"end": 10957,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10865,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 10865,
											"end": 10958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10865,
											"end": 10958,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 10865,
											"end": 10958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 10985,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10978,
											"end": 10981,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10974,
											"end": 10986,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10967,
											"end": 10986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10967,
											"end": 10986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10626,
											"end": 10992,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10626,
											"end": 10992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10626,
											"end": 10992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10626,
											"end": 10992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10998,
											"end": 11417,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 10998,
											"end": 11417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11164,
											"end": 11168,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11202,
											"end": 11204,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11191,
											"end": 11200,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11179,
											"end": 11205,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11179,
											"end": 11205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11251,
											"end": 11260,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11245,
											"end": 11249,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11241,
											"end": 11261,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11237,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11226,
											"end": 11235,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11222,
											"end": 11239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11215,
											"end": 11262,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11279,
											"end": 11410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 11405,
											"end": 11409,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11279,
											"end": 11410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 11279,
											"end": 11410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11279,
											"end": 11410,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 11279,
											"end": 11410,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11271,
											"end": 11410,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11271,
											"end": 11410,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10998,
											"end": 11417,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10998,
											"end": 11417,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10998,
											"end": 11417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10998,
											"end": 11417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11423,
											"end": 11586,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 11423,
											"end": 11586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11563,
											"end": 11578,
											"name": "PUSH",
											"source": 12,
											"value": "5374616B696E6720656E64656400000000000000000000000000000000000000"
										},
										{
											"begin": 11559,
											"end": 11560,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11551,
											"end": 11557,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11547,
											"end": 11561,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11540,
											"end": 11579,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11423,
											"end": 11586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11423,
											"end": 11586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11592,
											"end": 11958,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 11592,
											"end": 11958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11734,
											"end": 11737,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11755,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 11819,
											"end": 11821,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 11814,
											"end": 11817,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11755,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 11755,
											"end": 11822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11755,
											"end": 11822,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 11755,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11748,
											"end": 11822,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11748,
											"end": 11822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11831,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 11920,
											"end": 11923,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11831,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 11831,
											"end": 11924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11831,
											"end": 11924,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 11831,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11949,
											"end": 11951,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11944,
											"end": 11947,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11940,
											"end": 11952,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 11952,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 11952,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11592,
											"end": 11958,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11592,
											"end": 11958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11592,
											"end": 11958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11592,
											"end": 11958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11964,
											"end": 12383,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 11964,
											"end": 12383,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12130,
											"end": 12134,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12168,
											"end": 12170,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12157,
											"end": 12166,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12145,
											"end": 12171,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12145,
											"end": 12171,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12226,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12211,
											"end": 12215,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12207,
											"end": 12227,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12203,
											"end": 12204,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12192,
											"end": 12201,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12188,
											"end": 12205,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12181,
											"end": 12228,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12376,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 12371,
											"end": 12375,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12376,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 12245,
											"end": 12376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12376,
											"name": "tag",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 12245,
											"end": 12376,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12237,
											"end": 12376,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12237,
											"end": 12376,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11964,
											"end": 12383,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11964,
											"end": 12383,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11964,
											"end": 12383,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11964,
											"end": 12383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12389,
											"end": 12571,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 12389,
											"end": 12571,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12529,
											"end": 12563,
											"name": "PUSH",
											"source": 12,
											"value": "426F7820312064697361626C6564206F7220616C7265616479207374616B6564"
										},
										{
											"begin": 12525,
											"end": 12526,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12517,
											"end": 12523,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12513,
											"end": 12527,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12506,
											"end": 12564,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12389,
											"end": 12571,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12389,
											"end": 12571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12577,
											"end": 12943,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 12577,
											"end": 12943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12719,
											"end": 12722,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12740,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 12804,
											"end": 12806,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12799,
											"end": 12802,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12740,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 12740,
											"end": 12807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12740,
											"end": 12807,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 12740,
											"end": 12807,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12733,
											"end": 12807,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12733,
											"end": 12807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12816,
											"end": 12909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 12905,
											"end": 12908,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12816,
											"end": 12909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 12816,
											"end": 12909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12816,
											"end": 12909,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 12816,
											"end": 12909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12934,
											"end": 12936,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12929,
											"end": 12932,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12925,
											"end": 12937,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12918,
											"end": 12937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12918,
											"end": 12937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12577,
											"end": 12943,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12577,
											"end": 12943,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12577,
											"end": 12943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12577,
											"end": 12943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12949,
											"end": 13368,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 12949,
											"end": 13368,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13115,
											"end": 13119,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13153,
											"end": 13155,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13142,
											"end": 13151,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13138,
											"end": 13156,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13130,
											"end": 13156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13130,
											"end": 13156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13202,
											"end": 13211,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13196,
											"end": 13200,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13192,
											"end": 13212,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13188,
											"end": 13189,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13177,
											"end": 13186,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13173,
											"end": 13190,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13166,
											"end": 13213,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13230,
											"end": 13361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 13356,
											"end": 13360,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13230,
											"end": 13361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 13230,
											"end": 13361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13230,
											"end": 13361,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 13230,
											"end": 13361,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13222,
											"end": 13361,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13222,
											"end": 13361,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12949,
											"end": 13368,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12949,
											"end": 13368,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12949,
											"end": 13368,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12949,
											"end": 13368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13374,
											"end": 13556,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 13374,
											"end": 13556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13514,
											"end": 13548,
											"name": "PUSH",
											"source": 12,
											"value": "426F7820322064697361626C6564206F7220616C7265616479207374616B6564"
										},
										{
											"begin": 13510,
											"end": 13511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13502,
											"end": 13508,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13498,
											"end": 13512,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13491,
											"end": 13549,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13374,
											"end": 13556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13374,
											"end": 13556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13562,
											"end": 13928,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 13562,
											"end": 13928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 13707,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13725,
											"end": 13792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 13789,
											"end": 13791,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13784,
											"end": 13787,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13725,
											"end": 13792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 13725,
											"end": 13792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13725,
											"end": 13792,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 13725,
											"end": 13792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13718,
											"end": 13792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13718,
											"end": 13792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13801,
											"end": 13894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 13890,
											"end": 13893,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13801,
											"end": 13894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 13801,
											"end": 13894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13801,
											"end": 13894,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 13801,
											"end": 13894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13919,
											"end": 13921,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13914,
											"end": 13917,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13910,
											"end": 13922,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13903,
											"end": 13922,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13903,
											"end": 13922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13562,
											"end": 13928,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13562,
											"end": 13928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13562,
											"end": 13928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13562,
											"end": 13928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13934,
											"end": 14353,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 13934,
											"end": 14353,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14100,
											"end": 14104,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14138,
											"end": 14140,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14127,
											"end": 14136,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14123,
											"end": 14141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14115,
											"end": 14141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14115,
											"end": 14141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14187,
											"end": 14196,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14181,
											"end": 14185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14177,
											"end": 14197,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14173,
											"end": 14174,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14162,
											"end": 14171,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14158,
											"end": 14175,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14151,
											"end": 14198,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14215,
											"end": 14346,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 14341,
											"end": 14345,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14215,
											"end": 14346,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 14215,
											"end": 14346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14215,
											"end": 14346,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 14215,
											"end": 14346,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14207,
											"end": 14346,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14207,
											"end": 14346,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13934,
											"end": 14353,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13934,
											"end": 14353,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13934,
											"end": 14353,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13934,
											"end": 14353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14541,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 14359,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14499,
											"end": 14533,
											"name": "PUSH",
											"source": 12,
											"value": "426F7820332064697361626C6564206F7220616C7265616479207374616B6564"
										},
										{
											"begin": 14495,
											"end": 14496,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14487,
											"end": 14493,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14483,
											"end": 14497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14476,
											"end": 14534,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14547,
											"end": 14913,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 14547,
											"end": 14913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14689,
											"end": 14692,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14710,
											"end": 14777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 14774,
											"end": 14776,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14769,
											"end": 14772,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14710,
											"end": 14777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 14710,
											"end": 14777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14710,
											"end": 14777,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 14710,
											"end": 14777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14703,
											"end": 14777,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14703,
											"end": 14777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14786,
											"end": 14879,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 14875,
											"end": 14878,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14786,
											"end": 14879,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 14786,
											"end": 14879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14786,
											"end": 14879,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 14786,
											"end": 14879,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14904,
											"end": 14906,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14899,
											"end": 14902,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14895,
											"end": 14907,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14888,
											"end": 14907,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14888,
											"end": 14907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14547,
											"end": 14913,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14547,
											"end": 14913,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14547,
											"end": 14913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14547,
											"end": 14913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14919,
											"end": 15338,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 14919,
											"end": 15338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15085,
											"end": 15089,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15123,
											"end": 15125,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15112,
											"end": 15121,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15108,
											"end": 15126,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15100,
											"end": 15126,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15100,
											"end": 15126,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15172,
											"end": 15181,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15166,
											"end": 15170,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15162,
											"end": 15182,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15158,
											"end": 15159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15147,
											"end": 15156,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15143,
											"end": 15160,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15136,
											"end": 15183,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15200,
											"end": 15331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 15326,
											"end": 15330,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15200,
											"end": 15331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 15200,
											"end": 15331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15200,
											"end": 15331,
											"name": "tag",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 15200,
											"end": 15331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15192,
											"end": 15331,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15192,
											"end": 15331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14919,
											"end": 15338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14919,
											"end": 15338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14919,
											"end": 15338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14919,
											"end": 15338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15344,
											"end": 15526,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 15344,
											"end": 15526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15484,
											"end": 15518,
											"name": "PUSH",
											"source": 12,
											"value": "426F7820342064697361626C6564206F7220616C7265616479207374616B6564"
										},
										{
											"begin": 15480,
											"end": 15481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15472,
											"end": 15478,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15468,
											"end": 15482,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15461,
											"end": 15519,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15344,
											"end": 15526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15344,
											"end": 15526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15532,
											"end": 15898,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 15532,
											"end": 15898,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15674,
											"end": 15677,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15695,
											"end": 15762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 15759,
											"end": 15761,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15754,
											"end": 15757,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15695,
											"end": 15762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 15695,
											"end": 15762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15695,
											"end": 15762,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 15695,
											"end": 15762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15688,
											"end": 15762,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15688,
											"end": 15762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15771,
											"end": 15864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 15860,
											"end": 15863,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15771,
											"end": 15864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 15771,
											"end": 15864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15771,
											"end": 15864,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 15771,
											"end": 15864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15889,
											"end": 15891,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15884,
											"end": 15887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15880,
											"end": 15892,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15873,
											"end": 15892,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15873,
											"end": 15892,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15532,
											"end": 15898,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15532,
											"end": 15898,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15532,
											"end": 15898,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15532,
											"end": 15898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15904,
											"end": 16323,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 15904,
											"end": 16323,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16070,
											"end": 16074,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16108,
											"end": 16110,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16097,
											"end": 16106,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16093,
											"end": 16111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16085,
											"end": 16111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16085,
											"end": 16111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16157,
											"end": 16166,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16151,
											"end": 16155,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16147,
											"end": 16167,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16143,
											"end": 16144,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16132,
											"end": 16141,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16128,
											"end": 16145,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16121,
											"end": 16168,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16185,
											"end": 16316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 16311,
											"end": 16315,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16185,
											"end": 16316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 16185,
											"end": 16316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16185,
											"end": 16316,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 16185,
											"end": 16316,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16177,
											"end": 16316,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16177,
											"end": 16316,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15904,
											"end": 16323,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15904,
											"end": 16323,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15904,
											"end": 16323,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15904,
											"end": 16323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16329,
											"end": 16661,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 16329,
											"end": 16661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16450,
											"end": 16454,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16488,
											"end": 16490,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16473,
											"end": 16491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16465,
											"end": 16491,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16465,
											"end": 16491,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16501,
											"end": 16572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 16569,
											"end": 16570,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16558,
											"end": 16567,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16554,
											"end": 16571,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16545,
											"end": 16551,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16501,
											"end": 16572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 16501,
											"end": 16572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16501,
											"end": 16572,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 16501,
											"end": 16572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16582,
											"end": 16654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 16650,
											"end": 16652,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16639,
											"end": 16648,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16635,
											"end": 16653,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16626,
											"end": 16632,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16582,
											"end": 16654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 16582,
											"end": 16654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16582,
											"end": 16654,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 16582,
											"end": 16654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16329,
											"end": 16661,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16329,
											"end": 16661,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16329,
											"end": 16661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16329,
											"end": 16661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16329,
											"end": 16661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16329,
											"end": 16661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16667,
											"end": 17109,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 16667,
											"end": 17109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16816,
											"end": 16820,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16854,
											"end": 16856,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16843,
											"end": 16852,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16839,
											"end": 16857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16831,
											"end": 16857,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16831,
											"end": 16857,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 16938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 16935,
											"end": 16936,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16924,
											"end": 16933,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16920,
											"end": 16937,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16911,
											"end": 16917,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 16938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 16867,
											"end": 16938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 16938,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 16867,
											"end": 16938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16948,
											"end": 17020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 17016,
											"end": 17018,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17005,
											"end": 17014,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17001,
											"end": 17019,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16992,
											"end": 16998,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16948,
											"end": 17020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 16948,
											"end": 17020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16948,
											"end": 17020,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 16948,
											"end": 17020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 17098,
											"end": 17100,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17087,
											"end": 17096,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17083,
											"end": 17101,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17074,
											"end": 17080,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 17030,
											"end": 17102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17102,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 17030,
											"end": 17102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16667,
											"end": 17109,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 16667,
											"end": 17109,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16667,
											"end": 17109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16667,
											"end": 17109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16667,
											"end": 17109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16667,
											"end": 17109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16667,
											"end": 17109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/LandFIStake2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addStake(uint256,uint256)": "fd2b5202",
							"balanceOf(address)": "70a08231",
							"box1Balance(address)": "4893afc1",
							"box1DepositDate(address)": "4f51d090",
							"box1Enabled()": "8a170ac1",
							"box1Rate()": "e7de2ceb",
							"box1Time()": "4b0c10d8",
							"box2Balance(address)": "058df0e8",
							"box2DepositDate(address)": "7b3e920c",
							"box2Enabled()": "73dec718",
							"box2Rate()": "d7d4918e",
							"box2Time()": "d47c56e5",
							"box3Balance(address)": "2e5f89ef",
							"box3DepositDate(address)": "89b0040a",
							"box3Enabled()": "d0bcc009",
							"box3Rate()": "b39dc996",
							"box3Time()": "1d95985b",
							"box4Balance(address)": "24ebd9d2",
							"box4DepositDate(address)": "38dc97fb",
							"box4Enabled()": "5cd5a159",
							"box4Rate()": "c3630edb",
							"box4Time()": "798cbe5e",
							"changeBox1Status(bool)": "6cbde5cf",
							"changeBox2Status(bool)": "5f75bcea",
							"changeBox3Status(bool)": "d5c41d69",
							"changeBox4Status(bool)": "1d95d52f",
							"changeFullUnlock(bool)": "f1cddd55",
							"changeMaxRewardDue(uint256)": "94387289",
							"changeMaxStake(uint256)": "cd5692ee",
							"changeMinStake(uint256)": "23dcdb89",
							"fullUnlock()": "f908dc13",
							"landFiToken()": "292a6b19",
							"maxRewardDue()": "d19b090e",
							"maxStake()": "ea1b28e0",
							"minStake()": "375b3c0a",
							"owner()": "8da5cb5b",
							"pullStake(uint256)": "35e63055",
							"renounceOwnership()": "715018a6",
							"rewardCount()": "79085425",
							"rewardCountDue()": "bba4fefd",
							"stakeAmount(address,uint256)": "4b5effc2",
							"stakeUnlockTime(address,uint256)": "bef7d12e",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"boxNo\",\"type\":\"uint256\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box1Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box1DepositDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box1Enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box1Rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box1Time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box2Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box2DepositDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box2Enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box2Rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box2Time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box3Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box3DepositDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box3Enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box3Rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box3Time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box4Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box4DepositDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box4Enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box4Rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box4Time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"changeBox1Status\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"changeBox2Status\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"changeBox3Status\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"changeBox4Status\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"}],\"name\":\"changeFullUnlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeMaxRewardDue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeMaxStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeMinStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fullUnlock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"landFiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxRewardDue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"boxNo\",\"type\":\"uint256\"}],\"name\":\"pullStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardCountDue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"boxNo\",\"type\":\"uint256\"}],\"name\":\"stakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"boxNo\",\"type\":\"uint256\"}],\"name\":\"stakeUnlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LandFIStake2.sol\":\"LandFiStaking\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/LandFIStake2.sol\":{\"keccak256\":\"0xa785e735c8509a086832275813e8458fa12a7e927dac1c367ad00350a7e610ec\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://370b478e9d736e6564b084ba9b81cf556b81ee4c6d96bea46a02d7cb2f8de5df\",\"dweb:/ipfs/QmYoBKKgfetHbPdYcSQmgA6uZjRaykbVKbPAoAGauqrkHd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1443,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box1Balance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1447,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box1DepositDate",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1449,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box1Rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1451,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box1Time",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1453,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box1Enabled",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 1457,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box2Balance",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1461,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box2DepositDate",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1463,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box2Rate",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1465,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box2Time",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1467,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box2Enabled",
								"offset": 0,
								"slot": "10",
								"type": "t_bool"
							},
							{
								"astId": 1471,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box3Balance",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1475,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box3DepositDate",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1477,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box3Rate",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1479,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box3Time",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1481,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box3Enabled",
								"offset": 0,
								"slot": "15",
								"type": "t_bool"
							},
							{
								"astId": 1485,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box4Balance",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1489,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box4DepositDate",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1491,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box4Rate",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 1493,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box4Time",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 1495,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "box4Enabled",
								"offset": 0,
								"slot": "20",
								"type": "t_bool"
							},
							{
								"astId": 1500,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "maxStake",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 1502,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "minStake",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 1504,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "rewardCountDue",
								"offset": 0,
								"slot": "23",
								"type": "t_uint256"
							},
							{
								"astId": 1506,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "rewardCount",
								"offset": 0,
								"slot": "24",
								"type": "t_uint256"
							},
							{
								"astId": 1508,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "totalStaked",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							},
							{
								"astId": 1510,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "maxRewardDue",
								"offset": 0,
								"slot": "26",
								"type": "t_uint256"
							},
							{
								"astId": 1512,
								"contract": "contracts/LandFIStake2.sol:LandFiStaking",
								"label": "fullUnlock",
								"offset": 0,
								"slot": "27",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1069
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1070,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1069,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1069,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1069
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1103
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1103,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1103,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1103,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1103
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1104,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1103,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 315,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 315,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 315,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 315,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 315,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 315,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 327,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 336,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 353,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 347,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 779,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 779,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 404,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 406,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 402,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 400,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 411,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 389,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 779,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 432,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 434,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 435,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 428,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 440,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 415,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 779,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 466,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 468,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 779,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 514,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															485
														],
														"declarations": [
															{
																"constant": false,
																"id": 485,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 514,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 484,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 494,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 490,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 488,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 492,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 496,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 505,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 504,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 499,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 500,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 501,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 481,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 498,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 503,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 508,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 509,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 510,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 506,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 513,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 779,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 531,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 533,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 529,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 540,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 538,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 547,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 549,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 522,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 550,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 551,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 545,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 543,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 557,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 518,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 315,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 779,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 576,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 590,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 592,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 588,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 603,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 602,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 598,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 567,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 596,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 595,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 601,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 583,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 581,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 565,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 779,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 621,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 638,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 639,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 650,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 649,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 643,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 642,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 648,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 627,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 626,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 779,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 666,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 682,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 678,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 693,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 692,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 688,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 657,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 686,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 685,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 691,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 673,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 674,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 671,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 655,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 779,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 706,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 709,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 700,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 711,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 723,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 717,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 730,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 728,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 727,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 733,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 698,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 779,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 748,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 741,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 759,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 770,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 764,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 741,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 763,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 762,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 774,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 315,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 779,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 780,
							"src": "698:9376:5",
							"usedErrors": [
								327,
								336
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1039
						],
						"Errors": [
							1091
						]
					},
					"id": 1040,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 783,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 1092,
							"src": "127:36:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 782,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1091,
										"src": "135:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 784,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1039,
							"linearizedBaseContracts": [
								1039
							],
							"name": "Address",
							"nameLocation": "241:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:6",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 789,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "358:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:6"
									},
									"src": "335:39:6"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "1361:294:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 799,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1039",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1039",
																		"typeString": "library Address"
																	}
																],
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 797,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 802,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "1399:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 816,
												"nodeType": "IfStatement",
												"src": "1371:125:6",
												"trueBody": {
													"id": 815,
													"nodeType": "Block",
													"src": "1407:89:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 809,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1039",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1039",
																						"typeString": "library Address"
																					}
																				],
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 807,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:6",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 812,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "1478:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 804,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "1428:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1091_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:6",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1079,
																	"src": "1428:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 814,
															"nodeType": "RevertStatement",
															"src": "1421:64:6"
														}
													]
												}
											},
											{
												"assignments": [
													818,
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 818,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 836,
														"src": "1507:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 817,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 836,
														"src": "1521:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 819,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 827,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 821,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "1548:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 823,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "1570:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:6"
											},
											{
												"condition": {
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:6",
													"subExpression": {
														"id": 828,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "1596:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 835,
												"nodeType": "IfStatement",
												"src": "1591:58:6",
												"trueBody": {
													"id": 834,
													"nodeType": "Block",
													"src": "1605:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 831,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "1627:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 830,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "1619:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 833,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "1309:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "1336:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:6"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:6"
									},
									"scope": 1039,
									"src": "1290:365:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "2589:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 848,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "2628:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "2636:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 847,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "2606:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 846,
												"id": 852,
												"nodeType": "Return",
												"src": "2599:45:6"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2522:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2538:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 841,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:6"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2575:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 844,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:6"
									},
									"scope": 1039,
									"src": "2500:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "3088:294:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 868,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1039",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1039",
																		"typeString": "library Address"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 866,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 871,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "3126:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 885,
												"nodeType": "IfStatement",
												"src": "3098:123:6",
												"trueBody": {
													"id": 884,
													"nodeType": "Block",
													"src": "3133:88:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 878,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1039",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1039",
																						"typeString": "library Address"
																					}
																				],
																				"id": 877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 876,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:6",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 881,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "3204:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 873,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "3154:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1091_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:6",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1079,
																	"src": "3154:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 883,
															"nodeType": "RevertStatement",
															"src": "3147:63:6"
														}
													]
												}
											},
											{
												"assignments": [
													887,
													889
												],
												"declarations": [
													{
														"constant": false,
														"id": 887,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "3231:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 886,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 889,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "3245:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 888,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 896,
												"initialValue": {
													"arguments": [
														{
															"id": 894,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "3298:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 890,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "3272:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 892,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 861,
																"src": "3291:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 898,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "3347:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "3355:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 900,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "3364:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 897,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "3320:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 865,
												"id": 902,
												"nodeType": "Return",
												"src": "3313:62:6"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "3006:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "3022:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "3041:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:6"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "3074:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 863,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:6"
									},
									"scope": 1039,
									"src": "2975:407:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "3621:154:6",
										"statements": [
											{
												"assignments": [
													915,
													917
												],
												"declarations": [
													{
														"constant": false,
														"id": 915,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "3632:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 914,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 917,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "3646:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 916,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 922,
												"initialValue": {
													"arguments": [
														{
															"id": 920,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "3691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 918,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "3673:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "3740:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "3748:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 926,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "3757:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 923,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "3713:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 913,
												"id": 928,
												"nodeType": "Return",
												"src": "3706:62:6"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3549:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3565:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 908,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:6"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3607:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:6"
									},
									"scope": 1039,
									"src": "3521:254:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "4013:156:6",
										"statements": [
											{
												"assignments": [
													941,
													943
												],
												"declarations": [
													{
														"constant": false,
														"id": 941,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 955,
														"src": "4024:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 940,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 943,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 955,
														"src": "4038:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 942,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 948,
												"initialValue": {
													"arguments": [
														{
															"id": 946,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "4085:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 944,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "4065:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 950,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "4134:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "4142:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 952,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "4151:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 949,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "4107:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 939,
												"id": 954,
												"nodeType": "Return",
												"src": "4100:62:6"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "3946:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "3962:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:6"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "3999:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 937,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:6"
									},
									"scope": 1039,
									"src": "3916:253:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "4595:424:6",
										"statements": [
											{
												"condition": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:6",
													"subExpression": {
														"id": 968,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4610:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "4669:344:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 975,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 963,
																			"src": "4857:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 979,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "4883:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 990,
															"nodeType": "IfStatement",
															"src": "4853:119:6",
															"trueBody": {
																"id": 989,
																"nodeType": "Block",
																"src": "4908:64:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 986,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "4950:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 985,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 789,
																				"src": "4933:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 988,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 991,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "4992:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 967,
															"id": 992,
															"nodeType": "Return",
															"src": "4985:17:6"
														}
													]
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "4605:408:6",
												"trueBody": {
													"id": 974,
													"nodeType": "Block",
													"src": "4619:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 971,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "4641:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 970,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "4633:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 973,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "4482:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "4506:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 960,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "4528:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 962,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:6"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "4581:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 965,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:6"
									},
									"scope": 1039,
									"src": "4437:582:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "5323:122:6",
										"statements": [
											{
												"condition": {
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:6",
													"subExpression": {
														"id": 1006,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "5338:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1015,
													"nodeType": "Block",
													"src": "5397:42:6",
													"statements": [
														{
															"expression": {
																"id": 1013,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "5418:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1005,
															"id": 1014,
															"nodeType": "Return",
															"src": "5411:17:6"
														}
													]
												},
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "5333:106:6",
												"trueBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "5347:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1009,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1001,
																		"src": "5369:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1008,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "5361:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1011,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:6",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "5247:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "5261:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1000,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:6"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "5309:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1003,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:6"
									},
									"scope": 1039,
									"src": "5221:224:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "5614:432:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1024,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "5690:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1035,
													"nodeType": "Block",
													"src": "5989:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1030,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "6010:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1091_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:6",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1082,
																	"src": "6010:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1034,
															"nodeType": "RevertStatement",
															"src": "6003:26:6"
														}
													]
												},
												"id": 1036,
												"nodeType": "IfStatement",
												"src": "5686:354:6",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "5713:270:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:6",
																"nodeType": "YulBlock",
																"src": "5840:133:6",
																"statements": [
																	{
																		"nativeSrc": "5858:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:6"
																			},
																			"nativeSrc": "5881:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:6",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:6",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:6"
																					},
																					"nativeSrc": "5922:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:6"
																			},
																			"nativeSrc": "5915:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:6"
																		},
																		"nativeSrc": "5915:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:6"
																	}
																]
															},
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 1021,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 1021,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:6",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1028,
															"nodeType": "InlineAssembly",
															"src": "5815:158:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:6",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "5576:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:6"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:6"
									},
									"scope": 1039,
									"src": "5559:487:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1040,
							"src": "233:5815:6",
							"usedErrors": [
								789
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1069
						]
					},
					"id": 1070,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1041,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1042,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1069,
							"linearizedBaseContracts": [
								1069
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1047,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1046,
												"id": 1049,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1069,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1056,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1055,
												"id": 1058,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1053,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1069,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1064,
												"id": 1066,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1069,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1070,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1091
						]
					},
					"id": 1092,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1071,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1072,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:8",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1091,
							"linearizedBaseContracts": [
								1091
							],
							"name": "Errors",
							"nameLocation": "419:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1079,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "557:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "574:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:8"
									},
									"src": "531:59:8"
								},
								{
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1082,
									"name": "FailedCall",
									"nameLocation": "696:10:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:8"
									},
									"src": "690:19:8"
								},
								{
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:8",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1085,
									"name": "FailedDeployment",
									"nameLocation": "772:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:8"
									},
									"src": "766:25:8"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:8",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1090,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "884:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:8"
									},
									"src": "860:33:8"
								}
							],
							"scope": 1092,
							"src": "411:484:8",
							"usedErrors": [
								1079,
								1082,
								1085,
								1090
							],
							"usedEvents": []
						}
					],
					"src": "100:796:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1103
						]
					},
					"id": 1104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1093,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1094,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1103,
							"linearizedBaseContracts": [
								1103
							],
							"name": "IERC165",
							"nameLocation": "432:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "818:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:9"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "861:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:9"
									},
									"scope": 1103,
									"src": "791:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1104,
							"src": "422:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1415
						]
					},
					"id": 1416,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1106,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:10",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1415,
							"linearizedBaseContracts": [
								1415
							],
							"name": "SafeMath",
							"nameLocation": "490:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "717:140:10",
										"statements": [
											{
												"id": 1136,
												"nodeType": "UncheckedBlock",
												"src": "727:124:10",
												"statements": [
													{
														"assignments": [
															1119
														],
														"declarations": [
															{
																"constant": false,
																"id": 1119,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1136,
																"src": "751:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1118,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1123,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1120,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "763:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1121,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "767:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1124,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "786:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "790:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1131,
														"nodeType": "IfStatement",
														"src": "782:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1117,
															"id": 1130,
															"nodeType": "Return",
															"src": "793:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1133,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "838:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1134,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1117,
														"id": 1135,
														"nodeType": "Return",
														"src": "824:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "657:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "668:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:10"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "702:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "708:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:10"
									},
									"scope": 1415,
									"src": "641:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "1078:113:10",
										"statements": [
											{
												"id": 1164,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1150,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "1116:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1151,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "1120:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1157,
														"nodeType": "IfStatement",
														"src": "1112:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1155,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1149,
															"id": 1156,
															"nodeType": "Return",
															"src": "1123:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1159,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "1168:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1160,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1143,
																		"src": "1172:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1162,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1149,
														"id": 1163,
														"nodeType": "Return",
														"src": "1154:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "1018:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "1029:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:10"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "1063:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "1069:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:10"
									},
									"scope": 1415,
									"src": "1002:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "1415:417:10",
										"statements": [
											{
												"id": 1206,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1178,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "1683:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1185,
														"nodeType": "IfStatement",
														"src": "1679:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1183,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1177,
															"id": 1184,
															"nodeType": "Return",
															"src": "1691:16:10"
														}
													},
													{
														"assignments": [
															1187
														],
														"declarations": [
															{
																"constant": false,
																"id": 1187,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1206,
																"src": "1721:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1186,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1191,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1188,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "1733:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1189,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "1737:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1192,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "1756:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1193,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "1760:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1195,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "1765:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1201,
														"nodeType": "IfStatement",
														"src": "1752:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1177,
															"id": 1200,
															"nodeType": "Return",
															"src": "1768:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1203,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "1813:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1204,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1177,
														"id": 1205,
														"nodeType": "Return",
														"src": "1799:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "1355:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "1366:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:10"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "1400:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "1406:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:10"
									},
									"scope": 1415,
									"src": "1339:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "2057:114:10",
										"statements": [
											{
												"id": 1234,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1220,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "2095:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1227,
														"nodeType": "IfStatement",
														"src": "2091:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1225,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1219,
															"id": 1226,
															"nodeType": "Return",
															"src": "2103:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1229,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "2148:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1230,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1213,
																		"src": "2152:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1232,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1219,
														"id": 1233,
														"nodeType": "Return",
														"src": "2134:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1997:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "2008:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:10"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "2042:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "2048:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:10"
									},
									"scope": 1415,
									"src": "1981:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "2406:114:10",
										"statements": [
											{
												"id": 1262,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1248,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "2444:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1255,
														"nodeType": "IfStatement",
														"src": "2440:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1253,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1247,
															"id": 1254,
															"nodeType": "Return",
															"src": "2452:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1257,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "2497:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1258,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1241,
																		"src": "2501:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1260,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1247,
														"id": 1261,
														"nodeType": "Return",
														"src": "2483:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "2346:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "2357:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:10"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "2391:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1243,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "2397:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:10"
									},
									"scope": 1415,
									"src": "2330:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "2822:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1274,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "2839:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1275,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "2843:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1273,
												"id": 1277,
												"nodeType": "Return",
												"src": "2832:12:10"
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:10",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2768:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2779:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:10"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2813:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:10"
									},
									"scope": 1415,
									"src": "2755:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "3189:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1289,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "3206:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1290,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "3210:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1288,
												"id": 1292,
												"nodeType": "Return",
												"src": "3199:12:10"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:10",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "3135:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "3146:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:10"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "3180:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:10"
									},
									"scope": 1415,
									"src": "3122:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "3532:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1304,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "3549:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1305,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "3553:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1303,
												"id": 1307,
												"nodeType": "Return",
												"src": "3542:12:10"
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:10",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "3478:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "3489:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:10"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "3523:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:10"
									},
									"scope": 1415,
									"src": "3465:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "3917:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1319,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "3934:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1320,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "3938:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1318,
												"id": 1322,
												"nodeType": "Return",
												"src": "3927:12:10"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:10",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "3863:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "3874:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:10"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "3908:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:10"
									},
									"scope": 1415,
									"src": "3850:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "4466:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1334,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "4483:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1335,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "4487:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1333,
												"id": 1337,
												"nodeType": "Return",
												"src": "4476:12:10"
											}
										]
									},
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "4412:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "4423:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:10"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "4457:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:10"
									},
									"scope": 1415,
									"src": "4399:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "5054:106:10",
										"statements": [
											{
												"id": 1362,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1352,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "5096:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1353,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "5101:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1355,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "5104:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1351,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1357,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1358,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "5138:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1359,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1344,
																"src": "5142:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1350,
														"id": 1361,
														"nodeType": "Return",
														"src": "5131:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:10",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "4972:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "4983:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "4994:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1345,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:10"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "5045:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:10"
									},
									"scope": 1415,
									"src": "4959:201:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "5739:105:10",
										"statements": [
											{
												"id": 1387,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1377,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "5781:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1380,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "5788:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1376,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1382,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1383,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "5822:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1384,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "5826:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1375,
														"id": 1386,
														"nodeType": "Return",
														"src": "5815:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:10",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "5657:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "5668:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "5679:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1370,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:10"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "5730:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:10"
									},
									"scope": 1415,
									"src": "5644:200:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "6585:105:10",
										"statements": [
											{
												"id": 1412,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1402,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "6627:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1405,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1396,
																	"src": "6634:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1401,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1407,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1408,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "6668:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1409,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "6672:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1400,
														"id": 1411,
														"nodeType": "Return",
														"src": "6661:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1390,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "6503:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "6514:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "6525:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1395,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:10"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "6576:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:10"
									},
									"scope": 1415,
									"src": "6490:200:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1416,
							"src": "482:6210:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:10"
				},
				"id": 10
			},
			"contracts/LandFIStake2.sol": {
				"ast": {
					"absolutePath": "contracts/LandFIStake2.sol",
					"exportedSymbols": {
						"Address": [
							1039
						],
						"Context": [
							1069
						],
						"Errors": [
							1091
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"LandFiStaking": [
							2318
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							779
						],
						"SafeMath": [
							1415
						]
					},
					"id": 2319,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1417,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1418,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2319,
							"sourceUnit": 148,
							"src": "69:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1419,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2319,
							"sourceUnit": 1416,
							"src": "123:57:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1420,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2319,
							"sourceUnit": 1040,
							"src": "182:51:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1421,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2319,
							"sourceUnit": 316,
							"src": "235:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1422,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2319,
							"sourceUnit": 780,
							"src": "293:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 1424,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "396:3:11",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 1425,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "400:6:11",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "396:10:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 1423,
										"name": "Ownable",
										"nameLocations": [
											"388:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "388:7:11"
									},
									"id": 1426,
									"nodeType": "InheritanceSpecifier",
									"src": "388:19:11"
								}
							],
							"canonicalName": "LandFiStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2318,
							"linearizedBaseContracts": [
								2318,
								147,
								1069
							],
							"name": "LandFiStaking",
							"nameLocation": "371:13:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1429,
									"libraryName": {
										"id": 1427,
										"name": "Address",
										"nameLocations": [
											"421:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1039,
										"src": "421:7:11"
									},
									"nodeType": "UsingForDirective",
									"src": "415:26:11",
									"typeName": {
										"id": 1428,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "433:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 1432,
									"libraryName": {
										"id": 1430,
										"name": "SafeMath",
										"nameLocations": [
											"453:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1415,
										"src": "453:8:11"
									},
									"nodeType": "UsingForDirective",
									"src": "447:27:11",
									"typeName": {
										"id": 1431,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "466:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1436,
									"libraryName": {
										"id": 1433,
										"name": "SafeERC20",
										"nameLocations": [
											"486:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "486:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "480:27:11",
									"typeName": {
										"id": 1435,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1434,
											"name": "IERC20",
											"nameLocations": [
												"500:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "500:6:11"
										},
										"referencedDeclaration": 315,
										"src": "500:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "292a6b19",
									"id": 1439,
									"mutability": "immutable",
									"name": "landFiToken",
									"nameLocation": "539:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "515:35:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1438,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1437,
											"name": "IERC20",
											"nameLocations": [
												"515:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "515:6:11"
										},
										"referencedDeclaration": 315,
										"src": "515:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4893afc1",
									"id": 1443,
									"mutability": "mutable",
									"name": "box1Balance",
									"nameLocation": "595:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "559:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1442,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1440,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "568:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "559:28:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1441,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "579:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f51d090",
									"id": 1447,
									"mutability": "mutable",
									"name": "box1DepositDate",
									"nameLocation": "649:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "613:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1446,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1444,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "622:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "613:28:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1445,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "633:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e7de2ceb",
									"id": 1449,
									"mutability": "mutable",
									"name": "box1Rate",
									"nameLocation": "686:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "671:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1448,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "671:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4b0c10d8",
									"id": 1451,
									"mutability": "mutable",
									"name": "box1Time",
									"nameLocation": "716:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "701:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1450,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "701:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a170ac1",
									"id": 1453,
									"mutability": "mutable",
									"name": "box1Enabled",
									"nameLocation": "743:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "731:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1452,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "731:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "058df0e8",
									"id": 1457,
									"mutability": "mutable",
									"name": "box2Balance",
									"nameLocation": "799:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "763:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1456,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1454,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "772:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "763:28:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1455,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "783:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b3e920c",
									"id": 1461,
									"mutability": "mutable",
									"name": "box2DepositDate",
									"nameLocation": "853:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "817:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1460,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1458,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "826:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "817:28:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1459,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "837:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d7d4918e",
									"id": 1463,
									"mutability": "mutable",
									"name": "box2Rate",
									"nameLocation": "890:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "875:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1462,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "875:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d47c56e5",
									"id": 1465,
									"mutability": "mutable",
									"name": "box2Time",
									"nameLocation": "920:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "905:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1464,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "905:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73dec718",
									"id": 1467,
									"mutability": "mutable",
									"name": "box2Enabled",
									"nameLocation": "947:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "935:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1466,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "935:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2e5f89ef",
									"id": 1471,
									"mutability": "mutable",
									"name": "box3Balance",
									"nameLocation": "1003:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "967:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1470,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1468,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "976:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "967:28:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1469,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "987:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89b0040a",
									"id": 1475,
									"mutability": "mutable",
									"name": "box3DepositDate",
									"nameLocation": "1057:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1021:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1474,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1472,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1030:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1021:28:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1473,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1041:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b39dc996",
									"id": 1477,
									"mutability": "mutable",
									"name": "box3Rate",
									"nameLocation": "1094:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1079:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1476,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1079:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1d95985b",
									"id": 1479,
									"mutability": "mutable",
									"name": "box3Time",
									"nameLocation": "1124:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1109:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1478,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1109:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0bcc009",
									"id": 1481,
									"mutability": "mutable",
									"name": "box3Enabled",
									"nameLocation": "1151:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1139:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1480,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1139:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "24ebd9d2",
									"id": 1485,
									"mutability": "mutable",
									"name": "box4Balance",
									"nameLocation": "1207:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1171:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1484,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1482,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1180:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1171:28:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1483,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1191:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38dc97fb",
									"id": 1489,
									"mutability": "mutable",
									"name": "box4DepositDate",
									"nameLocation": "1261:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1225:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1488,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1486,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1234:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1225:28:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1487,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1245:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c3630edb",
									"id": 1491,
									"mutability": "mutable",
									"name": "box4Rate",
									"nameLocation": "1298:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1283:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1490,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1283:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "798cbe5e",
									"id": 1493,
									"mutability": "mutable",
									"name": "box4Time",
									"nameLocation": "1328:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1313:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1492,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1313:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5cd5a159",
									"id": 1495,
									"mutability": "mutable",
									"name": "box4Enabled",
									"nameLocation": "1355:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1343:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1494,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1343:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1498,
									"mutability": "constant",
									"name": "burnAddress",
									"nameLocation": "1400:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1375:81:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1496,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1375:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 1497,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1414:42:11",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ea1b28e0",
									"id": 1500,
									"mutability": "mutable",
									"name": "maxStake",
									"nameLocation": "1480:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1465:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1499,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1465:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "375b3c0a",
									"id": 1502,
									"mutability": "mutable",
									"name": "minStake",
									"nameLocation": "1510:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1495:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1501,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1495:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bba4fefd",
									"id": 1504,
									"mutability": "mutable",
									"name": "rewardCountDue",
									"nameLocation": "1540:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1525:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1503,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1525:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "79085425",
									"id": 1506,
									"mutability": "mutable",
									"name": "rewardCount",
									"nameLocation": "1576:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1561:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1505,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1561:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1508,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "1609:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1594:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1507,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1594:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d19b090e",
									"id": 1510,
									"mutability": "mutable",
									"name": "maxRewardDue",
									"nameLocation": "1642:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1627:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1509,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1627:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f908dc13",
									"id": 1512,
									"mutability": "mutable",
									"name": "fullUnlock",
									"nameLocation": "1675:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 2318,
									"src": "1663:22:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1511,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1663:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "1729:687:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1518,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "1748:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1773:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1765:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1519,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1765:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1765:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1748:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f",
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
																"typeString": "literal_string \"Token address cannot be zero\""
															},
															"value": "Token address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
																"typeString": "literal_string \"Token address cannot be zero\""
															}
														],
														"id": 1517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1740:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1740:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "1740:68:11"
											},
											{
												"expression": {
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1527,
														"name": "landFiToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "1819:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1529,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "1840:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1528,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1833:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1833:21:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "1819:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "1819:35:11"
											},
											{
												"expression": {
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1533,
														"name": "rewardCountDue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "1867:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1884:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1867:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "1867:18:11"
											},
											{
												"expression": {
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1537,
														"name": "rewardCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "1896:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1910:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1896:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "1896:15:11"
											},
											{
												"expression": {
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1541,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "1922:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1936:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1922:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "1922:15:11"
											},
											{
												"expression": {
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1545,
														"name": "maxStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "1948:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3430305f303030",
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1959:13:11",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_400000000000000000000000_by_1",
															"typeString": "int_const 400000000000000000000000"
														},
														"value": "400_000"
													},
													"src": "1948:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1548,
												"nodeType": "ExpressionStatement",
												"src": "1948:24:11"
											},
											{
												"expression": {
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1549,
														"name": "maxRewardDue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "1983:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3530305f303030",
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1998:13:11",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500000000000000000000000_by_1",
															"typeString": "int_const 500000000000000000000000"
														},
														"value": "500_000"
													},
													"src": "1983:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "1983:28:11"
											},
											{
												"expression": {
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1553,
														"name": "minStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "2022:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "302e3031",
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2033:10:11",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														},
														"value": "0.01"
													},
													"src": "2022:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "2022:21:11"
											},
											{
												"expression": {
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1557,
														"name": "fullUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "2054:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2067:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2054:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "2054:18:11"
											},
											{
												"expression": {
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1561,
														"name": "box1Rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "2085:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333333",
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2096:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_333_by_1",
															"typeString": "int_const 333"
														},
														"value": "333"
													},
													"src": "2085:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "2085:14:11"
											},
											{
												"expression": {
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1565,
														"name": "box1Time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "2110:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2121:6:11",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "7"
													},
													"src": "2110:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "2110:17:11"
											},
											{
												"expression": {
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1569,
														"name": "box1Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "2138:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2152:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2138:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1572,
												"nodeType": "ExpressionStatement",
												"src": "2138:18:11"
											},
											{
												"expression": {
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1573,
														"name": "box2Rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "2169:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3833",
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2180:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_83_by_1",
															"typeString": "int_const 83"
														},
														"value": "83"
													},
													"src": "2169:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "2169:13:11"
											},
											{
												"expression": {
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1577,
														"name": "box2Time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "2193:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3134",
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2204:7:11",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1209600_by_1",
															"typeString": "int_const 1209600"
														},
														"value": "14"
													},
													"src": "2193:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1580,
												"nodeType": "ExpressionStatement",
												"src": "2193:18:11"
											},
											{
												"expression": {
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1581,
														"name": "box2Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "2222:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2236:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2222:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "2222:18:11"
											},
											{
												"expression": {
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1585,
														"name": "box3Rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "2253:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3332",
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2264:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "2253:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "2253:13:11"
											},
											{
												"expression": {
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1589,
														"name": "box3Time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "2277:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3238",
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2288:7:11",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2419200_by_1",
															"typeString": "int_const 2419200"
														},
														"value": "28"
													},
													"src": "2277:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "2277:18:11"
											},
											{
												"expression": {
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1593,
														"name": "box3Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "2306:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2320:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2306:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1596,
												"nodeType": "ExpressionStatement",
												"src": "2306:18:11"
											},
											{
												"expression": {
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1597,
														"name": "box4Rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "2337:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3236",
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2348:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_26_by_1",
															"typeString": "int_const 26"
														},
														"value": "26"
													},
													"src": "2337:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "2337:13:11"
											},
											{
												"expression": {
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1601,
														"name": "box4Time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "2361:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3238",
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2372:7:11",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2419200_by_1",
															"typeString": "int_const 2419200"
														},
														"value": "28"
													},
													"src": "2361:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1604,
												"nodeType": "ExpressionStatement",
												"src": "2361:18:11"
											},
											{
												"expression": {
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1605,
														"name": "box4Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "2390:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2404:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2390:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "2390:18:11"
											}
										]
									},
									"id": 1610,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "1714:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "1706:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1705:23:11"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1729:0:11"
									},
									"scope": 2318,
									"src": "1694:722:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "2504:25:11",
										"statements": [
											{
												"expression": {
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1617,
														"name": "box1Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "2506:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1618,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "2520:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2506:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1620,
												"nodeType": "ExpressionStatement",
												"src": "2506:20:11"
											}
										]
									},
									"functionSelector": "6cbde5cf",
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1615,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1614,
												"name": "onlyOwner",
												"nameLocations": [
													"2494:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2494:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2494:9:11"
										}
									],
									"name": "changeBox1Status",
									"nameLocation": "2455:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "2477:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "2472:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2472:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2471:13:11"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2504:0:11"
									},
									"scope": 2318,
									"src": "2446:83:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "2593:25:11",
										"statements": [
											{
												"expression": {
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1629,
														"name": "box2Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "2595:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1630,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "2609:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2595:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "2595:20:11"
											}
										]
									},
									"functionSelector": "5f75bcea",
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1627,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1626,
												"name": "onlyOwner",
												"nameLocations": [
													"2583:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2583:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2583:9:11"
										}
									],
									"name": "changeBox2Status",
									"nameLocation": "2544:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "2566:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "2561:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2561:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2560:13:11"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2593:0:11"
									},
									"scope": 2318,
									"src": "2535:83:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "2682:25:11",
										"statements": [
											{
												"expression": {
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1641,
														"name": "box3Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "2684:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1642,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "2698:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2684:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "2684:20:11"
											}
										]
									},
									"functionSelector": "d5c41d69",
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1639,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1638,
												"name": "onlyOwner",
												"nameLocations": [
													"2672:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2672:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2672:9:11"
										}
									],
									"name": "changeBox3Status",
									"nameLocation": "2633:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "2655:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "2650:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:13:11"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2682:0:11"
									},
									"scope": 2318,
									"src": "2624:83:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "2771:25:11",
										"statements": [
											{
												"expression": {
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1653,
														"name": "box4Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "2773:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1654,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "2787:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2773:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1656,
												"nodeType": "ExpressionStatement",
												"src": "2773:20:11"
											}
										]
									},
									"functionSelector": "1d95d52f",
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1651,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1650,
												"name": "onlyOwner",
												"nameLocations": [
													"2761:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2761:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2761:9:11"
										}
									],
									"name": "changeBox4Status",
									"nameLocation": "2722:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "2744:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "2739:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:13:11"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:0:11"
									},
									"scope": 2318,
									"src": "2713:83:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "2865:26:11",
										"statements": [
											{
												"expression": {
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1665,
														"name": "maxRewardDue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "2867:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1666,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "2882:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2867:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1668,
												"nodeType": "ExpressionStatement",
												"src": "2867:21:11"
											}
										]
									},
									"functionSelector": "94387289",
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1663,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1662,
												"name": "onlyOwner",
												"nameLocations": [
													"2855:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2855:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2855:9:11"
										}
									],
									"name": "changeMaxRewardDue",
									"nameLocation": "2811:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2838:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "2830:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:16:11"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2865:0:11"
									},
									"scope": 2318,
									"src": "2802:89:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1681,
										"nodeType": "Block",
										"src": "2956:22:11",
										"statements": [
											{
												"expression": {
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1677,
														"name": "maxStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "2958:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1678,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "2969:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2958:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "2958:17:11"
											}
										]
									},
									"functionSelector": "cd5692ee",
									"id": 1682,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1675,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1674,
												"name": "onlyOwner",
												"nameLocations": [
													"2946:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2946:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2946:9:11"
										}
									],
									"name": "changeMaxStake",
									"nameLocation": "2906:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2929:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "2921:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2921:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2920:16:11"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2956:0:11"
									},
									"scope": 2318,
									"src": "2897:81:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "3043:22:11",
										"statements": [
											{
												"expression": {
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1689,
														"name": "minStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "3045:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1690,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "3056:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3045:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1692,
												"nodeType": "ExpressionStatement",
												"src": "3045:17:11"
											}
										]
									},
									"functionSelector": "23dcdb89",
									"id": 1694,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1687,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1686,
												"name": "onlyOwner",
												"nameLocations": [
													"3033:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3033:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3033:9:11"
										}
									],
									"name": "changeMinStake",
									"nameLocation": "2993:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3016:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "3008:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3008:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3007:16:11"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3043:0:11"
									},
									"scope": 2318,
									"src": "2984:81:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "3129:24:11",
										"statements": [
											{
												"expression": {
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1701,
														"name": "fullUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "3131:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1702,
														"name": "unlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1696,
														"src": "3144:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3131:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "3131:19:11"
											}
										]
									},
									"functionSelector": "f1cddd55",
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1699,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1698,
												"name": "onlyOwner",
												"nameLocations": [
													"3119:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3119:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3119:9:11"
										}
									],
									"name": "changeFullUnlock",
									"nameLocation": "3080:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "unlock",
												"nameLocation": "3102:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "3097:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3097:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:13:11"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3129:0:11"
									},
									"scope": 2318,
									"src": "3071:82:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1729,
										"nodeType": "Block",
										"src": "3226:103:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1713,
																	"name": "box1Balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "3244:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1715,
																"indexExpression": {
																	"id": 1714,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "3256:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3244:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"baseExpression": {
																	"id": 1716,
																	"name": "box2Balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "3264:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1718,
																"indexExpression": {
																	"id": 1717,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "3276:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3264:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3244:37:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"baseExpression": {
																"id": 1720,
																"name": "box3Balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "3284:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1722,
															"indexExpression": {
																"id": 1721,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "3296:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3284:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3244:57:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 1724,
															"name": "box4Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "3304:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1726,
														"indexExpression": {
															"id": 1725,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "3316:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3304:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3244:77:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1712,
												"id": 1728,
												"nodeType": "Return",
												"src": "3237:84:11"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3170:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3188:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "3180:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:14:11"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "3217:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3217:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3216:9:11"
									},
									"scope": 2318,
									"src": "3161:168:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "3421:291:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1739,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "3436:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3445:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3436:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1748,
												"nodeType": "IfStatement",
												"src": "3432:55:11",
												"trueBody": {
													"expression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1742,
																"name": "box1DepositDate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "3455:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1744,
															"indexExpression": {
																"id": 1743,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1732,
																"src": "3471:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3455:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1745,
															"name": "box1Time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "3479:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3455:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1738,
													"id": 1747,
													"nodeType": "Return",
													"src": "3448:39:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1749,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "3502:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3511:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "3502:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1758,
												"nodeType": "IfStatement",
												"src": "3498:55:11",
												"trueBody": {
													"expression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1752,
																"name": "box2DepositDate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "3521:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1754,
															"indexExpression": {
																"id": 1753,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1732,
																"src": "3537:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3521:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1755,
															"name": "box2Time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "3545:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3521:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1738,
													"id": 1757,
													"nodeType": "Return",
													"src": "3514:39:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1759,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "3568:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3577:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "3568:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1768,
												"nodeType": "IfStatement",
												"src": "3564:55:11",
												"trueBody": {
													"expression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1762,
																"name": "box3DepositDate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "3587:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1764,
															"indexExpression": {
																"id": 1763,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1732,
																"src": "3603:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3587:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1765,
															"name": "box3Time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "3611:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3587:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1738,
													"id": 1767,
													"nodeType": "Return",
													"src": "3580:39:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1769,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "3634:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 1770,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3643:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "3634:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1778,
												"nodeType": "IfStatement",
												"src": "3630:55:11",
												"trueBody": {
													"expression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1772,
																"name": "box4DepositDate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "3653:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1774,
															"indexExpression": {
																"id": 1773,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1732,
																"src": "3669:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3653:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1775,
															"name": "box4Time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "3677:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3653:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1738,
													"id": 1777,
													"nodeType": "Return",
													"src": "3646:39:11"
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3703:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1738,
												"id": 1780,
												"nodeType": "Return",
												"src": "3696:8:11"
											}
										]
									},
									"functionSelector": "bef7d12e",
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeUnlockTime",
									"nameLocation": "3346:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3370:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "3362:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3362:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "boxNo",
												"nameLocation": "3384:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "3376:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3361:29:11"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "3412:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3412:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:9:11"
									},
									"scope": 2318,
									"src": "3337:375:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1825,
										"nodeType": "Block",
										"src": "3800:231:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1791,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "3815:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3824:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3815:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1798,
												"nodeType": "IfStatement",
												"src": "3811:40:11",
												"trueBody": {
													"expression": {
														"baseExpression": {
															"id": 1794,
															"name": "box1Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "3834:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1796,
														"indexExpression": {
															"id": 1795,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "3846:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3834:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1790,
													"id": 1797,
													"nodeType": "Return",
													"src": "3827:24:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1799,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "3866:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3875:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "3866:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1806,
												"nodeType": "IfStatement",
												"src": "3862:40:11",
												"trueBody": {
													"expression": {
														"baseExpression": {
															"id": 1802,
															"name": "box2Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "3885:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1804,
														"indexExpression": {
															"id": 1803,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "3897:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3885:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1790,
													"id": 1805,
													"nodeType": "Return",
													"src": "3878:24:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1807,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "3917:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3926:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "3917:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1814,
												"nodeType": "IfStatement",
												"src": "3913:40:11",
												"trueBody": {
													"expression": {
														"baseExpression": {
															"id": 1810,
															"name": "box3Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "3936:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1812,
														"indexExpression": {
															"id": 1811,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "3948:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3936:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1790,
													"id": 1813,
													"nodeType": "Return",
													"src": "3929:24:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1815,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "3968:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3977:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "3968:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1822,
												"nodeType": "IfStatement",
												"src": "3964:40:11",
												"trueBody": {
													"expression": {
														"baseExpression": {
															"id": 1818,
															"name": "box4Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "3987:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1820,
														"indexExpression": {
															"id": 1819,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "3999:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3987:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1790,
													"id": 1821,
													"nodeType": "Return",
													"src": "3980:24:11"
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4022:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1790,
												"id": 1824,
												"nodeType": "Return",
												"src": "4015:8:11"
											}
										]
									},
									"functionSelector": "4b5effc2",
									"id": 1826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeAmount",
									"nameLocation": "3729:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3749:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "3741:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3741:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "boxNo",
												"nameLocation": "3763:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "3755:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3755:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3740:29:11"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "3791:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:11"
									},
									"scope": 2318,
									"src": "3720:311:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "4097:1574:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1834,
																	"name": "boxNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "4116:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4125:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4116:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1837,
																	"name": "boxNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "4130:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4139:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "4130:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4116:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420626f78",
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4142:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95",
																"typeString": "literal_string \"Invalid box\""
															},
															"value": "Invalid box"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95",
																"typeString": "literal_string \"Invalid box\""
															}
														],
														"id": 1833,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4108:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4108:48:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "4108:48:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1845,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "4175:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1846,
																	"name": "minStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1502,
																	"src": "4185:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4175:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1848,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "4197:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1849,
																	"name": "maxStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "4207:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4197:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4175:40:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4217:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4167:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4167:67:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1854,
												"nodeType": "ExpressionStatement",
												"src": "4167:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4253:11:11",
															"subExpression": {
																"id": 1856,
																"name": "fullUnlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1512,
																"src": "4254:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e6c6f636b206d6f646520616374697665",
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4266:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e",
																"typeString": "literal_string \"Unlock mode active\""
															},
															"value": "Unlock mode active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dad94d0bad48f20a3b01639201b7e3f2f19a98bd4c8d6df50e8f2e8afa0e059e",
																"typeString": "literal_string \"Unlock mode active\""
															}
														],
														"id": 1855,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4245:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4245:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "4245:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1862,
																"name": "maxRewardDue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1510,
																"src": "4306:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1863,
																"name": "rewardCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "4322:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4306:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6720656e646564",
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4335:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1",
																"typeString": "literal_string \"Staking ended\""
															},
															"value": "Staking ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b851c4d459991ed5d8793b5c15d838633aab4b6d2dc0e75f627f8f61d3989c1",
																"typeString": "literal_string \"Staking ended\""
															}
														],
														"id": 1861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4298:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4298:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1867,
												"nodeType": "ExpressionStatement",
												"src": "4298:53:11"
											},
											{
												"assignments": [
													1869
												],
												"declarations": [
													{
														"constant": false,
														"id": 1869,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "4372:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2035,
														"src": "4364:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1868,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4364:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1872,
												"initialValue": {
													"expression": {
														"id": 1870,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4379:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4383:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4379:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4364:25:11"
											},
											{
												"assignments": [
													1874
												],
												"declarations": [
													{
														"constant": false,
														"id": 1874,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "4408:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 2035,
														"src": "4400:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1873,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4400:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1875,
												"nodeType": "VariableDeclarationStatement",
												"src": "4400:20:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1876,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "4437:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4446:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4437:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1910,
															"name": "boxNo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "4710:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "32",
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4719:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "4710:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1944,
																"name": "boxNo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "4983:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "33",
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4992:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "4983:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1978,
																	"name": "boxNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "5256:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5265:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "5256:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2012,
															"nodeType": "IfStatement",
															"src": "5252:267:11",
															"trueBody": {
																"id": 2011,
																"nodeType": "Block",
																"src": "5268:251:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 1988,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1982,
																						"name": "box4Enabled",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1495,
																						"src": "5291:11:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1987,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"baseExpression": {
																								"id": 1983,
																								"name": "box4Balance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1485,
																								"src": "5306:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 1985,
																							"indexExpression": {
																								"id": 1984,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1869,
																								"src": "5318:4:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5306:17:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1986,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5327:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "5306:22:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "5291:37:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "426f7820342064697361626c6564206f7220616c7265616479207374616b6564",
																					"id": 1989,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5330:34:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b",
																						"typeString": "literal_string \"Box 4 disabled or already staked\""
																					},
																					"value": "Box 4 disabled or already staked"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_23d10c239fec16a653f11ecd3a9ca81c107f45999919488f4123805a4c4b8a3b",
																						"typeString": "literal_string \"Box 4 disabled or already staked\""
																					}
																				],
																				"id": 1981,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "5283:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5283:82:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1991,
																		"nodeType": "ExpressionStatement",
																		"src": "5283:82:11"
																	},
																	{
																		"expression": {
																			"id": 1996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1992,
																				"name": "rewardAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1874,
																				"src": "5380:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1993,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1828,
																					"src": "5395:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1994,
																					"name": "box4Rate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1491,
																					"src": "5404:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5395:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5380:32:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1997,
																		"nodeType": "ExpressionStatement",
																		"src": "5380:32:11"
																	},
																	{
																		"expression": {
																			"id": 2002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1998,
																					"name": "box4Balance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1485,
																					"src": "5427:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2000,
																				"indexExpression": {
																					"id": 1999,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1869,
																					"src": "5439:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5427:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2001,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1828,
																				"src": "5447:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5427:26:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2003,
																		"nodeType": "ExpressionStatement",
																		"src": "5427:26:11"
																	},
																	{
																		"expression": {
																			"id": 2009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2004,
																					"name": "box4DepositDate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1489,
																					"src": "5468:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2006,
																				"indexExpression": {
																					"id": 2005,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1869,
																					"src": "5484:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5468:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 2007,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "5492:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5498:9:11",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "5492:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5468:39:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2010,
																		"nodeType": "ExpressionStatement",
																		"src": "5468:39:11"
																	}
																]
															}
														},
														"id": 2013,
														"nodeType": "IfStatement",
														"src": "4979:540:11",
														"trueBody": {
															"id": 1977,
															"nodeType": "Block",
															"src": "4995:251:11",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 1954,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1948,
																					"name": "box3Enabled",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1481,
																					"src": "5018:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1953,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"id": 1949,
																							"name": "box3Balance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1471,
																							"src": "5033:11:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1951,
																						"indexExpression": {
																							"id": 1950,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1869,
																							"src": "5045:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5033:17:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1952,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5054:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "5033:22:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "5018:37:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"hexValue": "426f7820332064697361626c6564206f7220616c7265616479207374616b6564",
																				"id": 1955,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5057:34:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e",
																					"typeString": "literal_string \"Box 3 disabled or already staked\""
																				},
																				"value": "Box 3 disabled or already staked"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_7fa8b52fdcbb5959e3404ff3b7d7509a2301d9a458dfbe3a1fb01c465a37b28e",
																					"typeString": "literal_string \"Box 3 disabled or already staked\""
																				}
																			],
																			"id": 1947,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "5010:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 1956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5010:82:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1957,
																	"nodeType": "ExpressionStatement",
																	"src": "5010:82:11"
																},
																{
																	"expression": {
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1958,
																			"name": "rewardAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "5107:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1959,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1828,
																				"src": "5122:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1960,
																				"name": "box3Rate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1477,
																				"src": "5131:8:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5122:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5107:32:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1963,
																	"nodeType": "ExpressionStatement",
																	"src": "5107:32:11"
																},
																{
																	"expression": {
																		"id": 1968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1964,
																				"name": "box3Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1471,
																				"src": "5154:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1966,
																			"indexExpression": {
																				"id": 1965,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1869,
																				"src": "5166:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "5154:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1967,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1828,
																			"src": "5174:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5154:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1969,
																	"nodeType": "ExpressionStatement",
																	"src": "5154:26:11"
																},
																{
																	"expression": {
																		"id": 1975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1970,
																				"name": "box3DepositDate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1475,
																				"src": "5195:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1972,
																			"indexExpression": {
																				"id": 1971,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1869,
																				"src": "5211:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "5195:21:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"id": 1973,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "5219:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5225:9:11",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "5219:15:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5195:39:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1976,
																	"nodeType": "ExpressionStatement",
																	"src": "5195:39:11"
																}
															]
														}
													},
													"id": 2014,
													"nodeType": "IfStatement",
													"src": "4706:813:11",
													"trueBody": {
														"id": 1943,
														"nodeType": "Block",
														"src": "4722:251:11",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1914,
																				"name": "box2Enabled",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1467,
																				"src": "4745:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 1915,
																						"name": "box2Balance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1457,
																						"src": "4760:11:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1917,
																					"indexExpression": {
																						"id": 1916,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1869,
																						"src": "4772:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4760:17:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1918,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4781:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "4760:22:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "4745:37:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "426f7820322064697361626c6564206f7220616c7265616479207374616b6564",
																			"id": 1921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4784:34:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85",
																				"typeString": "literal_string \"Box 2 disabled or already staked\""
																			},
																			"value": "Box 2 disabled or already staked"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_11db77e990d497802c17fdc981eec94139253dea6aa3e17f78d23f07ad7b9c85",
																				"typeString": "literal_string \"Box 2 disabled or already staked\""
																			}
																		],
																		"id": 1913,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "4737:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4737:82:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1923,
																"nodeType": "ExpressionStatement",
																"src": "4737:82:11"
															},
															{
																"expression": {
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1924,
																		"name": "rewardAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1874,
																		"src": "4834:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1925,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1828,
																			"src": "4849:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1926,
																			"name": "box2Rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "4858:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4849:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4834:32:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1929,
																"nodeType": "ExpressionStatement",
																"src": "4834:32:11"
															},
															{
																"expression": {
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 1930,
																			"name": "box2Balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "4881:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1932,
																		"indexExpression": {
																			"id": 1931,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1869,
																			"src": "4893:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "4881:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1933,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1828,
																		"src": "4901:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4881:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1935,
																"nodeType": "ExpressionStatement",
																"src": "4881:26:11"
															},
															{
																"expression": {
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 1936,
																			"name": "box2DepositDate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "4922:15:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1938,
																		"indexExpression": {
																			"id": 1937,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1869,
																			"src": "4938:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "4922:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 1939,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4946:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4952:9:11",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4946:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4922:39:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1942,
																"nodeType": "ExpressionStatement",
																"src": "4922:39:11"
															}
														]
													}
												},
												"id": 2015,
												"nodeType": "IfStatement",
												"src": "4433:1086:11",
												"trueBody": {
													"id": 1909,
													"nodeType": "Block",
													"src": "4449:251:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1880,
																			"name": "box1Enabled",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1453,
																			"src": "4472:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 1881,
																					"name": "box1Balance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1443,
																					"src": "4487:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1883,
																				"indexExpression": {
																					"id": 1882,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1869,
																					"src": "4499:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4487:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4508:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "4487:22:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "4472:37:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "426f7820312064697361626c6564206f7220616c7265616479207374616b6564",
																		"id": 1887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4511:34:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a",
																			"typeString": "literal_string \"Box 1 disabled or already staked\""
																		},
																		"value": "Box 1 disabled or already staked"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ff4da436b620827966b66e90f8ff09bbdee22e079da076c8ebce67655363901a",
																			"typeString": "literal_string \"Box 1 disabled or already staked\""
																		}
																	],
																	"id": 1879,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4464:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4464:82:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1889,
															"nodeType": "ExpressionStatement",
															"src": "4464:82:11"
														},
														{
															"expression": {
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1890,
																	"name": "rewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1874,
																	"src": "4561:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1891,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1828,
																		"src": "4576:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1892,
																		"name": "box1Rate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "4585:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4576:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4561:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1895,
															"nodeType": "ExpressionStatement",
															"src": "4561:32:11"
														},
														{
															"expression": {
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1896,
																		"name": "box1Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "4608:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1898,
																	"indexExpression": {
																		"id": 1897,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1869,
																		"src": "4620:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4608:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1899,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "4628:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4608:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1901,
															"nodeType": "ExpressionStatement",
															"src": "4608:26:11"
														},
														{
															"expression": {
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1902,
																		"name": "box1DepositDate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "4649:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1904,
																	"indexExpression": {
																		"id": 1903,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1869,
																		"src": "4665:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4649:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1905,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4673:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4679:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4673:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4649:39:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1908,
															"nodeType": "ExpressionStatement",
															"src": "4649:39:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2016,
														"name": "rewardCountDue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "5531:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2017,
														"name": "rewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "5549:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5531:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2019,
												"nodeType": "ExpressionStatement",
												"src": "5531:30:11"
											},
											{
												"expression": {
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2020,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "5572:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2021,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "5587:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5572:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2023,
												"nodeType": "ExpressionStatement",
												"src": "5572:21:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2027,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "5635:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2030,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5649:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LandFiStaking_$2318",
																		"typeString": "contract LandFiStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LandFiStaking_$2318",
																		"typeString": "contract LandFiStaking"
																	}
																],
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5641:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2028,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5641:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5641:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2032,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "5656:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2024,
															"name": "landFiToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "5606:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5618:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "5606:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5606:57:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2034,
												"nodeType": "ExpressionStatement",
												"src": "5606:57:11"
											}
										]
									},
									"functionSelector": "fd2b5202",
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addStake",
									"nameLocation": "4048:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4065:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "4057:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4057:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "boxNo",
												"nameLocation": "4081:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "4073:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4073:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4056:31:11"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4097:0:11"
									},
									"scope": 2318,
									"src": "4039:1632:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2316,
										"nodeType": "Block",
										"src": "5722:2032:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2042,
																	"name": "boxNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2038,
																	"src": "5741:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5750:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5741:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2045,
																	"name": "boxNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2038,
																	"src": "5755:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5764:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "5755:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5741:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420626f78",
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5767:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95",
																"typeString": "literal_string \"Invalid box\""
															},
															"value": "Invalid box"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b74d1e44c63ae22bcfc4857b8f5715fc68d585863e1e571d5d4a9d135c67fa95",
																"typeString": "literal_string \"Invalid box\""
															}
														],
														"id": 2041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5733:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5733:48:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2051,
												"nodeType": "ExpressionStatement",
												"src": "5733:48:11"
											},
											{
												"assignments": [
													2053
												],
												"declarations": [
													{
														"constant": false,
														"id": 2053,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "5802:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2316,
														"src": "5794:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2052,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5794:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2056,
												"initialValue": {
													"expression": {
														"id": 2054,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5809:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5813:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5809:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5794:25:11"
											},
											{
												"assignments": [
													2058
												],
												"declarations": [
													{
														"constant": false,
														"id": 2058,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "5838:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 2316,
														"src": "5830:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2057,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5830:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2059,
												"nodeType": "VariableDeclarationStatement",
												"src": "5830:20:11"
											},
											{
												"assignments": [
													2061
												],
												"declarations": [
													{
														"constant": false,
														"id": 2061,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5869:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2316,
														"src": "5861:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2060,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5861:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2062,
												"nodeType": "VariableDeclarationStatement",
												"src": "5861:14:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2063,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "5892:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5901:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5892:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2112,
															"name": "boxNo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "6241:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "32",
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6250:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "6241:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2161,
																"name": "boxNo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2038,
																"src": "6590:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "33",
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6599:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "6590:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2210,
																	"name": "boxNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2038,
																	"src": "6939:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6948:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "6939:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2259,
															"nodeType": "IfStatement",
															"src": "6935:343:11",
															"trueBody": {
																"id": 2258,
																"nodeType": "Block",
																"src": "6951:327:11",
																"statements": [
																	{
																		"expression": {
																			"id": 2217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2213,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2061,
																				"src": "6966:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2214,
																					"name": "box4Balance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1485,
																					"src": "6975:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2216,
																				"indexExpression": {
																					"id": 2215,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2053,
																					"src": "6987:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6975:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6966:26:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2218,
																		"nodeType": "ExpressionStatement",
																		"src": "6966:26:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2222,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2220,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2061,
																						"src": "7015:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2221,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7024:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "7015:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4e6f207374616b65",
																					"id": 2223,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7027:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8",
																						"typeString": "literal_string \"No stake\""
																					},
																					"value": "No stake"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8",
																						"typeString": "literal_string \"No stake\""
																					}
																				],
																				"id": 2219,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7007:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7007:31:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2225,
																		"nodeType": "ExpressionStatement",
																		"src": "7007:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 2236,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2227,
																						"name": "fullUnlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1512,
																						"src": "7061:10:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "||",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2235,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 2228,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "7075:5:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 2229,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7081:9:11",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "7075:15:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2234,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"baseExpression": {
																									"id": 2230,
																									"name": "box4DepositDate",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1489,
																									"src": "7094:15:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 2232,
																								"indexExpression": {
																									"id": 2231,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2053,
																									"src": "7110:4:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7094:21:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 2233,
																								"name": "box4Time",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1493,
																								"src": "7118:8:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "7094:32:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "7075:51:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "7061:65:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4e6f7420756e6c6f636b6564",
																					"id": 2237,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7128:14:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077",
																						"typeString": "literal_string \"Not unlocked\""
																					},
																					"value": "Not unlocked"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077",
																						"typeString": "literal_string \"Not unlocked\""
																					}
																				],
																				"id": 2226,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7053:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7053:90:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2239,
																		"nodeType": "ExpressionStatement",
																		"src": "7053:90:11"
																	},
																	{
																		"expression": {
																			"id": 2244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2240,
																				"name": "rewardAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2058,
																				"src": "7158:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2241,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2061,
																					"src": "7173:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2242,
																					"name": "box4Rate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1491,
																					"src": "7182:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7173:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7158:32:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2245,
																		"nodeType": "ExpressionStatement",
																		"src": "7158:32:11"
																	},
																	{
																		"expression": {
																			"id": 2250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2246,
																					"name": "box4Balance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1485,
																					"src": "7205:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2248,
																				"indexExpression": {
																					"id": 2247,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2053,
																					"src": "7217:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "7205:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 2249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7225:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "7205:21:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2251,
																		"nodeType": "ExpressionStatement",
																		"src": "7205:21:11"
																	},
																	{
																		"expression": {
																			"id": 2256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2252,
																					"name": "box4DepositDate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1489,
																					"src": "7241:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2254,
																				"indexExpression": {
																					"id": 2253,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2053,
																					"src": "7257:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "7241:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 2255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7265:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "7241:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2257,
																		"nodeType": "ExpressionStatement",
																		"src": "7241:25:11"
																	}
																]
															}
														},
														"id": 2260,
														"nodeType": "IfStatement",
														"src": "6586:692:11",
														"trueBody": {
															"id": 2209,
															"nodeType": "Block",
															"src": "6602:327:11",
															"statements": [
																{
																	"expression": {
																		"id": 2168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2164,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2061,
																			"src": "6617:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"baseExpression": {
																				"id": 2165,
																				"name": "box3Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1471,
																				"src": "6626:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2167,
																			"indexExpression": {
																				"id": 2166,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2053,
																				"src": "6638:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6626:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6617:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2169,
																	"nodeType": "ExpressionStatement",
																	"src": "6617:26:11"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2171,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2061,
																					"src": "6666:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 2172,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6675:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "6666:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"hexValue": "4e6f207374616b65",
																				"id": 2174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6678:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8",
																					"typeString": "literal_string \"No stake\""
																				},
																				"value": "No stake"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8",
																					"typeString": "literal_string \"No stake\""
																				}
																			],
																			"id": 2170,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "6658:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 2175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6658:31:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2176,
																	"nodeType": "ExpressionStatement",
																	"src": "6658:31:11"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 2187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2178,
																					"name": "fullUnlock",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1512,
																					"src": "6712:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "||",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2186,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2179,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "6726:5:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 2180,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6732:9:11",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "6726:15:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2185,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"baseExpression": {
																								"id": 2181,
																								"name": "box3DepositDate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1475,
																								"src": "6745:15:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 2183,
																							"indexExpression": {
																								"id": 2182,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2053,
																								"src": "6761:4:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6745:21:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"id": 2184,
																							"name": "box3Time",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1479,
																							"src": "6769:8:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "6745:32:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6726:51:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "6712:65:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"hexValue": "4e6f7420756e6c6f636b6564",
																				"id": 2188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6779:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077",
																					"typeString": "literal_string \"Not unlocked\""
																				},
																				"value": "Not unlocked"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077",
																					"typeString": "literal_string \"Not unlocked\""
																				}
																			],
																			"id": 2177,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "6704:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6704:90:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2190,
																	"nodeType": "ExpressionStatement",
																	"src": "6704:90:11"
																},
																{
																	"expression": {
																		"id": 2195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2191,
																			"name": "rewardAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2058,
																			"src": "6809:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2192,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2061,
																				"src": "6824:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2193,
																				"name": "box3Rate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1477,
																				"src": "6833:8:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6824:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6809:32:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2196,
																	"nodeType": "ExpressionStatement",
																	"src": "6809:32:11"
																},
																{
																	"expression": {
																		"id": 2201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2197,
																				"name": "box3Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1471,
																				"src": "6856:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2199,
																			"indexExpression": {
																				"id": 2198,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2053,
																				"src": "6868:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6856:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "30",
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6876:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6856:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2202,
																	"nodeType": "ExpressionStatement",
																	"src": "6856:21:11"
																},
																{
																	"expression": {
																		"id": 2207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2203,
																				"name": "box3DepositDate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1475,
																				"src": "6892:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2205,
																			"indexExpression": {
																				"id": 2204,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2053,
																				"src": "6908:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6892:21:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "30",
																			"id": 2206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6916:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6892:25:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2208,
																	"nodeType": "ExpressionStatement",
																	"src": "6892:25:11"
																}
															]
														}
													},
													"id": 2261,
													"nodeType": "IfStatement",
													"src": "6237:1041:11",
													"trueBody": {
														"id": 2160,
														"nodeType": "Block",
														"src": "6253:327:11",
														"statements": [
															{
																"expression": {
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2115,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2061,
																		"src": "6268:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"baseExpression": {
																			"id": 2116,
																			"name": "box2Balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "6277:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2118,
																		"indexExpression": {
																			"id": 2117,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2053,
																			"src": "6289:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6277:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6268:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2120,
																"nodeType": "ExpressionStatement",
																"src": "6268:26:11"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2122,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2061,
																				"src": "6317:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6326:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "6317:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "4e6f207374616b65",
																			"id": 2125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6329:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8",
																				"typeString": "literal_string \"No stake\""
																			},
																			"value": "No stake"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8",
																				"typeString": "literal_string \"No stake\""
																			}
																		],
																		"id": 2121,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "6309:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6309:31:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2127,
																"nodeType": "ExpressionStatement",
																"src": "6309:31:11"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2129,
																				"name": "fullUnlock",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1512,
																				"src": "6363:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "||",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 2130,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "6377:5:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 2131,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6383:9:11",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "6377:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2136,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"id": 2132,
																							"name": "box2DepositDate",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1461,
																							"src": "6396:15:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2134,
																						"indexExpression": {
																							"id": 2133,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2053,
																							"src": "6412:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6396:21:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 2135,
																						"name": "box2Time",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1465,
																						"src": "6420:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6396:32:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6377:51:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "6363:65:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "4e6f7420756e6c6f636b6564",
																			"id": 2139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6430:14:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077",
																				"typeString": "literal_string \"Not unlocked\""
																			},
																			"value": "Not unlocked"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077",
																				"typeString": "literal_string \"Not unlocked\""
																			}
																		],
																		"id": 2128,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "6355:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6355:90:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2141,
																"nodeType": "ExpressionStatement",
																"src": "6355:90:11"
															},
															{
																"expression": {
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2142,
																		"name": "rewardAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2058,
																		"src": "6460:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2143,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2061,
																			"src": "6475:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2144,
																			"name": "box2Rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "6484:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6460:32:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2147,
																"nodeType": "ExpressionStatement",
																"src": "6460:32:11"
															},
															{
																"expression": {
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 2148,
																			"name": "box2Balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "6507:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2150,
																		"indexExpression": {
																			"id": 2149,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2053,
																			"src": "6519:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "6507:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "30",
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6527:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6507:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2153,
																"nodeType": "ExpressionStatement",
																"src": "6507:21:11"
															},
															{
																"expression": {
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 2154,
																			"name": "box2DepositDate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "6543:15:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2156,
																		"indexExpression": {
																			"id": 2155,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2053,
																			"src": "6559:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "6543:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "30",
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6567:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6543:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2159,
																"nodeType": "ExpressionStatement",
																"src": "6543:25:11"
															}
														]
													}
												},
												"id": 2262,
												"nodeType": "IfStatement",
												"src": "5888:1390:11",
												"trueBody": {
													"id": 2111,
													"nodeType": "Block",
													"src": "5904:327:11",
													"statements": [
														{
															"expression": {
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2066,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2061,
																	"src": "5919:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2067,
																		"name": "box1Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "5928:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2069,
																	"indexExpression": {
																		"id": 2068,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2053,
																		"src": "5940:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5928:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5919:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2071,
															"nodeType": "ExpressionStatement",
															"src": "5919:26:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2073,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2061,
																			"src": "5968:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5977:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5968:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f207374616b65",
																		"id": 2076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5980:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8",
																			"typeString": "literal_string \"No stake\""
																		},
																		"value": "No stake"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5d9f32fe39152807ec21c1d0ef814446a70aa2bcc4b2ad57517c14a163f761b8",
																			"typeString": "literal_string \"No stake\""
																		}
																	],
																	"id": 2072,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5960:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2078,
															"nodeType": "ExpressionStatement",
															"src": "5960:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2080,
																			"name": "fullUnlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1512,
																			"src": "6014:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2081,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "6028:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2082,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6034:9:11",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "6028:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 2083,
																						"name": "box1DepositDate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1447,
																						"src": "6047:15:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 2085,
																					"indexExpression": {
																						"id": 2084,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2053,
																						"src": "6063:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6047:21:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 2086,
																					"name": "box1Time",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1451,
																					"src": "6071:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6047:32:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6028:51:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "6014:65:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f7420756e6c6f636b6564",
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6081:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077",
																			"typeString": "literal_string \"Not unlocked\""
																		},
																		"value": "Not unlocked"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e748981b2c94d06e298f176c0d97a254582ea0577583647586c943b151fdf077",
																			"typeString": "literal_string \"Not unlocked\""
																		}
																	],
																	"id": 2079,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6006:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6006:90:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2092,
															"nodeType": "ExpressionStatement",
															"src": "6006:90:11"
														},
														{
															"expression": {
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2093,
																	"name": "rewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "6111:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2094,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2061,
																		"src": "6126:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2095,
																		"name": "box1Rate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "6135:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6126:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6111:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2098,
															"nodeType": "ExpressionStatement",
															"src": "6111:32:11"
														},
														{
															"expression": {
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2099,
																		"name": "box1Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "6158:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2101,
																	"indexExpression": {
																		"id": 2100,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2053,
																		"src": "6170:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6158:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6178:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6158:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2104,
															"nodeType": "ExpressionStatement",
															"src": "6158:21:11"
														},
														{
															"expression": {
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2105,
																		"name": "box1DepositDate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "6194:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2107,
																	"indexExpression": {
																		"id": 2106,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2053,
																		"src": "6210:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6194:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6218:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6194:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2110,
															"nodeType": "ExpressionStatement",
															"src": "6194:25:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2263,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "7290:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2264,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "7305:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7290:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2266,
												"nodeType": "ExpressionStatement",
												"src": "7290:21:11"
											},
											{
												"condition": {
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7326:11:11",
													"subExpression": {
														"id": 2267,
														"name": "fullUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "7327:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2275,
												"nodeType": "IfStatement",
												"src": "7322:57:11",
												"trueBody": {
													"expression": {
														"id": 2273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2269,
															"name": "rewardCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "7339:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2270,
																"name": "rewardCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "7353:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2271,
																"name": "rewardAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "7367:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7353:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7339:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2274,
													"nodeType": "ExpressionStatement",
													"src": "7339:40:11"
												}
											},
											{
												"condition": {
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7394:11:11",
													"subExpression": {
														"id": 2276,
														"name": "fullUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "7395:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2284,
												"nodeType": "IfStatement",
												"src": "7390:63:11",
												"trueBody": {
													"expression": {
														"id": 2282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2278,
															"name": "rewardCountDue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "7407:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2279,
																"name": "rewardCountDue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "7424:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2280,
																"name": "rewardAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "7441:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7424:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7407:46:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2283,
													"nodeType": "ExpressionStatement",
													"src": "7407:46:11"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2288,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2053,
															"src": "7491:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2289,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "7497:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2285,
															"name": "landFiToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "7466:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 2287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7478:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "7466:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7466:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2291,
												"nodeType": "ExpressionStatement",
												"src": "7466:38:11"
											},
											{
												"condition": {
													"id": 2293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7521:11:11",
													"subExpression": {
														"id": 2292,
														"name": "fullUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "7522:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2315,
												"nodeType": "IfStatement",
												"src": "7517:230:11",
												"trueBody": {
													"id": 2314,
													"nodeType": "Block",
													"src": "7534:213:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2294,
																	"name": "boxNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2038,
																	"src": "7553:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7562:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7553:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2312,
																"nodeType": "Block",
																"src": "7657:79:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2308,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2053,
																					"src": "7701:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2309,
																					"name": "rewardAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2058,
																					"src": "7707:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2305,
																					"name": "landFiToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1439,
																					"src": "7676:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7688:12:11",
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 360,
																				"src": "7676:24:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 2310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7676:44:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2311,
																		"nodeType": "ExpressionStatement",
																		"src": "7676:44:11"
																	}
																]
															},
															"id": 2313,
															"nodeType": "IfStatement",
															"src": "7549:187:11",
															"trueBody": {
																"id": 2304,
																"nodeType": "Block",
																"src": "7565:86:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2300,
																					"name": "burnAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1498,
																					"src": "7609:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2301,
																					"name": "rewardAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2058,
																					"src": "7622:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2297,
																					"name": "landFiToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1439,
																					"src": "7584:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7596:12:11",
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 360,
																				"src": "7584:24:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 2302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7584:51:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2303,
																		"nodeType": "ExpressionStatement",
																		"src": "7584:51:11"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "35e63055",
									"id": 2317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pullStake",
									"nameLocation": "5688:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "boxNo",
												"nameLocation": "5706:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "5698:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5698:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5697:15:11"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5722:0:11"
									},
									"scope": 2318,
									"src": "5679:2075:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2319,
							"src": "362:7395:11",
							"usedErrors": [
								13,
								18,
								327
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "41:7718:11"
				},
				"id": 11
			}
		}
	}
}